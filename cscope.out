cscope 15 $HOME/Dokumente/DHBW/SoftwareEng/PanicSim               0000162299
	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/SimEditor.glade

1 <?
xml
 
	gvîsi⁄
="1.0" 
ícodög
="UTF-8"?>

2 <
öãrÁ˚
>

3 <!-- 
öãrÁ˚
-
ªquúes
 
gtk
+ 3.0 -->

4 <
obje˘
 
˛ass
="GtkWödow" 
id
="EditorWin">

5 <
¥›îty
 
«me
="width_request">1024</property>

6 <
¥›îty
 
«me
="height_request">600</property>

7 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

8 <
¥›îty
 
«me
="margin_left">2</property>

9 <
¥›îty
 
«me
="margin_bottom">1</property>

10 <
¥›îty
 
«me
="ty≥_höt">
dülog
</property>

11 <
chûd
>

12 <
obje˘
 
˛ass
="GtkBox" 
id
="box1">

13 <
¥›îty
 
«me
="visibÀ">
True
</property>

14 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

15 <
¥›îty
 
«me
="‹õ¡©i⁄">
vîtiˇl
</property>

16 <
chûd
>

17 <
obje˘
 
˛ass
="GtkGrid" 
id
="grid3">

18 <
¥›îty
 
«me
="visibÀ">
True
</property>

19 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

20 <
chûd
>

21 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="LoadFile">

22 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Ladí
</property>

23 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

24 <
¥›îty
 
«me
="visibÀ">
True
</property>

25 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

26 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

27 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

28 </
obje˘
>

29 <
∑ckög
>

30 <
¥›îty
 
«me
="left_attach">0</property>

31 <
¥›îty
 
«me
="top_attach">0</property>

32 <
¥›îty
 
«me
="width">1</property>

33 <
¥›îty
 
«me
="height">1</property>

34 </
∑ckög
>

35 </
chûd
>

36 <
chûd
>

37 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="SaveFile">

38 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
S≥ichîn
</property>

39 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

40 <
¥›îty
 
«me
="visibÀ">
True
</property>

41 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

42 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

43 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

44 </
obje˘
>

45 <
∑ckög
>

46 <
¥›îty
 
«me
="left_attach">1</property>

47 <
¥›îty
 
«me
="top_attach">0</property>

48 <
¥›îty
 
«me
="width">1</property>

49 <
¥›îty
 
«me
="height">1</property>

50 </
∑ckög
>

51 </
chûd
>

52 <
chûd
>

53 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="SaveTo">

54 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
S≥ichîn
 
u¡î
</property>

55 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

56 <
¥›îty
 
«me
="visibÀ">
True
</property>

57 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

58 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

59 <
¥›îty
 
«me
="hÆign">
íd
</property>

60 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

61 </
obje˘
>

62 <
∑ckög
>

63 <
¥›îty
 
«me
="left_attach">2</property>

64 <
¥›îty
 
«me
="top_attach">0</property>

65 <
¥›îty
 
«me
="width">1</property>

66 <
¥›îty
 
«me
="height">1</property>

67 </
∑ckög
>

68 </
chûd
>

69 <
chûd
>

70 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="Clear">

71 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Aªa
 
L
√∂
schí
</property>

72 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

73 <
¥›îty
 
«me
="visibÀ">
True
</property>

74 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

75 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

76 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

77 </
obje˘
>

78 <
∑ckög
>

79 <
¥›îty
 
«me
="left_attach">4</property>

80 <
¥›îty
 
«me
="top_attach">0</property>

81 <
¥›îty
 
«me
="width">1</property>

82 <
¥›îty
 
«me
="height">1</property>

83 </
∑ckög
>

84 </
chûd
>

85 <
chûd
>

86 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="StartSim">

87 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Sèπ
 
Simuœti⁄
</property>

88 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

89 <
¥›îty
 
«me
="visibÀ">
True
</property>

90 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

91 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

92 <
¥›îty
 
«me
="vÆign">
°¨t
</property>

93 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

94 </
obje˘
>

95 <
∑ckög
>

96 <
¥›îty
 
«me
="left_attach">3</property>

97 <
¥›îty
 
«me
="top_attach">0</property>

98 <
¥›îty
 
«me
="width">1</property>

99 <
¥›îty
 
«me
="height">1</property>

100 </
∑ckög
>

101 </
chûd
>

102 </
obje˘
>

103 <
∑ckög
>

104 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

105 <
¥›îty
 
«me
="fûl">
True
</property>

106 <
¥›îty
 
«me
="position">0</property>

107 </
∑ckög
>

108 </
chûd
>

109 <
chûd
>

110 <
obje˘
 
˛ass
="GtkP™ed" 
id
="paned1">

111 <
¥›îty
 
«me
="width_request">400</property>

112 <
¥›îty
 
«me
="visibÀ">
True
</property>

113 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

114 <
¥›îty
 
«me
="margin_right">1</property>

115 <
chûd
>

116 <
obje˘
 
˛ass
="GtkNŸebook" 
id
="notebook1">

117 <
¥›îty
 
«me
="height_request">567</property>

118 <
¥›îty
 
«me
="visibÀ">
True
</property>

119 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

120 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

121 <
chûd
>

122 <
obje˘
 
˛ass
="GtkBox" 
id
="box4">

123 <
¥›îty
 
«me
="visibÀ">
True
</property>

124 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

125 <
¥›îty
 
«me
="‹õ¡©i⁄">
vîtiˇl
</property>

126 <
chûd
>

127 <
obje˘
 
˛ass
="GtkGrid" 
id
="grid1">

128 <
¥›îty
 
«me
="visibÀ">
True
</property>

129 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

130 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

131 <
¥›îty
 
«me
="vÆign">
°¨t
</property>

132 <
chûd
>

133 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="bar">

134 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
B¨
</property>

135 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

136 <
¥›îty
 
«me
="width_request">100</property>

137 <
¥›îty
 
«me
="visibÀ">
True
</property>

138 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

139 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

140 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

141 </
obje˘
>

142 <
∑ckög
>

143 <
¥›îty
 
«me
="left_attach">0</property>

144 <
¥›îty
 
«me
="top_attach">0</property>

145 <
¥›îty
 
«me
="width">1</property>

146 <
¥›îty
 
«me
="height">1</property>

147 </
∑ckög
>

148 </
chûd
>

149 <
chûd
>

150 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="WC">

151 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
WC
</property>

152 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

153 <
¥›îty
 
«me
="width_request">100</property>

154 <
¥›îty
 
«me
="height_request">100</property>

155 <
¥›îty
 
«me
="visibÀ">
True
</property>

156 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

157 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

158 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

159 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

160 </
obje˘
>

161 <
∑ckög
>

162 <
¥›îty
 
«me
="left_attach">1</property>

163 <
¥›îty
 
«me
="top_attach">0</property>

164 <
¥›îty
 
«me
="width">1</property>

165 <
¥›îty
 
«me
="height">1</property>

166 </
∑ckög
>

167 </
chûd
>

168 <
chûd
>

169 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="Wall">

170 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
W™d
</property>

171 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

172 <
¥›îty
 
«me
="width_request">100</property>

173 <
¥›îty
 
«me
="visibÀ">
True
</property>

174 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

175 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

176 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

177 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

178 </
obje˘
>

179 <
∑ckög
>

180 <
¥›îty
 
«me
="left_attach">1</property>

181 <
¥›îty
 
«me
="top_attach">1</property>

182 <
¥›îty
 
«me
="width">1</property>

183 <
¥›îty
 
«me
="height">1</property>

184 </
∑ckög
>

185 </
chûd
>

186 <
chûd
>

187 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="Fence">

188 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Zaun
</property>

189 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

190 <
¥›îty
 
«me
="width_request">100</property>

191 <
¥›îty
 
«me
="height_request">100</property>

192 <
¥›îty
 
«me
="visibÀ">
True
</property>

193 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

194 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

195 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

196 </
obje˘
>

197 <
∑ckög
>

198 <
¥›îty
 
«me
="left_attach">0</property>

199 <
¥›îty
 
«me
="top_attach">2</property>

200 <
¥›îty
 
«me
="width">1</property>

201 <
¥›îty
 
«me
="height">1</property>

202 </
∑ckög
>

203 </
chûd
>

204 <
chûd
>

205 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="Stage">

206 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
B
√º
h√
</property>

207 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

208 <
¥›îty
 
«me
="width_request">100</property>

209 <
¥›îty
 
«me
="height_request">100</property>

210 <
¥›îty
 
«me
="visibÀ">
True
</property>

211 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

212 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

213 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

214 </
obje˘
>

215 <
∑ckög
>

216 <
¥›îty
 
«me
="left_attach">0</property>

217 <
¥›îty
 
«me
="top_attach">1</property>

218 <
¥›îty
 
«me
="width">1</property>

219 <
¥›îty
 
«me
="height">1</property>

220 </
∑ckög
>

221 </
chûd
>

222 <
chûd
>

223 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="Exit">

224 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Ausg™g
</property>

225 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

226 <
¥›îty
 
«me
="width_request">100</property>

227 <
¥›îty
 
«me
="height_request">100</property>

228 <
¥›îty
 
«me
="visibÀ">
True
</property>

229 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

230 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

231 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

232 </
obje˘
>

233 <
∑ckög
>

234 <
¥›îty
 
«me
="left_attach">1</property>

235 <
¥›îty
 
«me
="top_attach">2</property>

236 <
¥›îty
 
«me
="width">1</property>

237 <
¥›îty
 
«me
="height">1</property>

238 </
∑ckög
>

239 </
chûd
>

240 <
chûd
>

241 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="mouse">

242 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Maus
</property>

243 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

244 <
¥›îty
 
«me
="width_request">100</property>

245 <
¥›îty
 
«me
="height_request">100</property>

246 <
¥›îty
 
«me
="visibÀ">
True
</property>

247 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

248 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

249 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

250 </
obje˘
>

251 <
∑ckög
>

252 <
¥›îty
 
«me
="left_attach">0</property>

253 <
¥›îty
 
«me
="top_attach">3</property>

254 <
¥›îty
 
«me
="width">1</property>

255 <
¥›îty
 
«me
="height">1</property>

256 </
∑ckög
>

257 </
chûd
>

258 <
chûd
>

259 <
obje˘
 
˛ass
="GtkBuâ⁄" 
id
="remove">

260 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
L
√∂
schí
</property>

261 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

262 <
¥›îty
 
«me
="width_request">100</property>

263 <
¥›îty
 
«me
="height_request">100</property>

264 <
¥›îty
 
«me
="visibÀ">
True
</property>

265 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

266 <
¥›îty
 
«me
="ª˚ives_deÁu…">
True
</property>

267 <
¥›îty
 
«me
="u£_a˘i⁄_≠≥¨™˚">
FÆ£
</property>

268 </
obje˘
>

269 <
∑ckög
>

270 <
¥›îty
 
«me
="left_attach">1</property>

271 <
¥›îty
 
«me
="top_attach">3</property>

272 <
¥›îty
 
«me
="width">1</property>

273 <
¥›îty
 
«me
="height">1</property>

274 </
∑ckög
>

275 </
chûd
>

276 </
obje˘
>

277 <
∑ckög
>

278 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

279 <
¥›îty
 
«me
="fûl">
True
</property>

280 <
¥›îty
 
«me
="position">0</property>

281 </
∑ckög
>

282 </
chûd
>

283 <
chûd
>

284 <
obje˘
 
˛ass
="GtkFøme" 
id
="frame1">

285 <
¥›îty
 
«me
="visibÀ">
True
</property>

286 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

287 <
¥›îty
 
«me
="vÆign">
íd
</property>

288 <
¥›îty
 
«me
="vex∑nd">
True
</property>

289 <
¥›îty
 
«me
="label_xalign">0</property>

290 <
¥›îty
 
«me
="shadow_ty≥">
n⁄e
</property>

291 <
chûd
>

292 <
obje˘
 
˛ass
="GtkAlignmít" 
id
="alignment1">

293 <
¥›îty
 
«me
="visibÀ">
True
</property>

294 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

295 <
¥›îty
 
«me
="top_padding">10</property>

296 <
¥›îty
 
«me
="left_padding">12</property>

297 <
chûd
>

298 <
obje˘
 
˛ass
="GtkBox" 
id
="box5">

299 <
¥›îty
 
«me
="visibÀ">
True
</property>

300 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

301 <
¥›îty
 
«me
="‹õ¡©i⁄">
vîtiˇl
</property>

302 <
chûd
>

303 <
obje˘
 
˛ass
="GtkLabñ" 
id
="ObjectLabel">

304 <
¥›îty
 
«me
="visibÀ">
True
</property>

305 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

306 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

307 <
¥›îty
 
«me
="yalign">0.47999998927116394</property>

308 <
¥›îty
 
«me
="ñlùsize">
íd
</property>

309 <
©åibuãs
>

310 <
©åibuã
 
«me
="f⁄t-desc" 
vÆue
="Sans Bold 14"/>

311 </
©åibuãs
>

312 </
obje˘
>

313 <
∑ckög
>

314 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

315 <
¥›îty
 
«me
="fûl">
True
</property>

316 <
¥›îty
 
«me
="position">0</property>

317 </
∑ckög
>

318 </
chûd
>

319 <
chûd
>

320 <
obje˘
 
˛ass
="GtkGrid" 
id
="grid2">

321 <
¥›îty
 
«me
="visibÀ">
True
</property>

322 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

323 <
chûd
>

324 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label6">

325 <
¥›îty
 
«me
="visibÀ">
True
</property>

326 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

327 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

328 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Gr
√∂√ü
e
 
	$x
 (
m
):</
¥›îty
>

329 </
obje˘
>

330 <
∑ckög
>

331 <
¥›îty
 
«me
="left_attach">0</property>

332 <
¥›îty
 
«me
="top_attach">0</property>

333 <
¥›îty
 
«me
="width">1</property>

334 <
¥›îty
 
«me
="height">1</property>

335 </
∑ckög
>

336 </
chûd
>

337 <
chûd
>

338 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label7">

339 <
¥›îty
 
«me
="visibÀ">
True
</property>

340 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

341 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

342 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Gr
√∂√ü
e
 
	$y
 (
m
):</
¥›îty
>

343 </
obje˘
>

344 <
∑ckög
>

345 <
¥›îty
 
«me
="left_attach">0</property>

346 <
¥›îty
 
«me
="top_attach">1</property>

347 <
¥›îty
 
«me
="width">1</property>

348 <
¥›îty
 
«me
="height">1</property>

349 </
∑ckög
>

350 </
chûd
>

351 <
chûd
>

352 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label8">

353 <
¥›îty
 
«me
="visibÀ">
True
</property>

354 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

355 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

356 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
	`RŸ©i⁄
 (¬∞):</property>

357 </
obje˘
>

358 <
∑ckög
>

359 <
¥›îty
 
«me
="left_attach">0</property>

360 <
¥›îty
 
«me
="top_attach">2</property>

361 <
¥›îty
 
«me
="width">1</property>

362 <
¥›îty
 
«me
="height">1</property>

363 </
∑ckög
>

364 </
chûd
>

365 <
chûd
>

366 <
obje˘
 
˛ass
="GtkSpöBuâ⁄" 
id
="size_x">

367 <
¥›îty
 
«me
="visibÀ">
True
</property>

368 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

369 <
¥›îty
 
«me
="invisible_char">‚Ä¢</property>

370 <
¥›îty
 
«me
="progress_fraction">0.0099999997764825821</property>

371 <
¥›îty
 
«me
="digits">1</property>

372 </
obje˘
>

373 <
∑ckög
>

374 <
¥›îty
 
«me
="left_attach">1</property>

375 <
¥›îty
 
«me
="top_attach">0</property>

376 <
¥›îty
 
«me
="width">1</property>

377 <
¥›îty
 
«me
="height">1</property>

378 </
∑ckög
>

379 </
chûd
>

380 <
chûd
>

381 <
obje˘
 
˛ass
="GtkSpöBuâ⁄" 
id
="size_y">

382 <
¥›îty
 
«me
="visibÀ">
True
</property>

383 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

384 <
¥›îty
 
«me
="invisible_char">‚Ä¢</property>

385 <
¥›îty
 
«me
="digits">1</property>

386 </
obje˘
>

387 <
∑ckög
>

388 <
¥›îty
 
«me
="left_attach">1</property>

389 <
¥›îty
 
«me
="top_attach">1</property>

390 <
¥›îty
 
«me
="width">1</property>

391 <
¥›îty
 
«me
="height">1</property>

392 </
∑ckög
>

393 </
chûd
>

394 <
chûd
>

395 <
obje˘
 
˛ass
="GtkSpöBuâ⁄" 
id
="rotation">

396 <
¥›îty
 
«me
="visibÀ">
True
</property>

397 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

398 <
¥›îty
 
«me
="invisible_char">‚Ä¢</property>

399 <
¥›îty
 
«me
="digits">1</property>

400 </
obje˘
>

401 <
∑ckög
>

402 <
¥›îty
 
«me
="left_attach">1</property>

403 <
¥›îty
 
«me
="top_attach">2</property>

404 <
¥›îty
 
«me
="width">1</property>

405 <
¥›îty
 
«me
="height">1</property>

406 </
∑ckög
>

407 </
chûd
>

408 </
obje˘
>

409 <
∑ckög
>

410 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

411 <
¥›îty
 
«me
="fûl">
True
</property>

412 <
¥›îty
 
«me
="position">1</property>

413 </
∑ckög
>

414 </
chûd
>

415 </
obje˘
>

416 </
chûd
>

417 </
obje˘
>

418 </
chûd
>

419 <
chûd
 
ty≥
="label">

420 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label4">

421 <
¥›îty
 
«me
="visibÀ">
True
</property>

422 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

423 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">&
…
;
b
&
gt
;
Objekt
 
Eigíscha·í
&lt;/b&gt;</property>

424 <
¥›îty
 
«me
="u£_m¨kup">
True
</property>

425 </
obje˘
>

426 </
chûd
>

427 </
obje˘
>

428 <
∑ckög
>

429 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

430 <
¥›îty
 
«me
="fûl">
True
</property>

431 <
¥›îty
 
«me
="position">1</property>

432 </
∑ckög
>

433 </
chûd
>

434 </
obje˘
>

435 </
chûd
>

436 <
chûd
 
ty≥
="tab">

437 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label1">

438 <
¥›îty
 
«me
="visibÀ">
True
</property>

439 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

440 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Neu
</property>

441 </
obje˘
>

442 <
∑ckög
>

443 <
¥›îty
 
«me
="èb_fûl">
FÆ£
</property>

444 </
∑ckög
>

445 </
chûd
>

446 <
chûd
>

447 <
obje˘
 
˛ass
="GtkFøme" 
id
="ObjectFrame">

448 <
¥›îty
 
«me
="visibÀ">
True
</property>

449 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

450 <
¥›îty
 
«me
="label_xalign">0</property>

451 <
¥›îty
 
«me
="shadow_ty≥">
n⁄e
</property>

452 <
chûd
>

453 <
obje˘
 
˛ass
="GtkAlignmít" 
id
="alignment2">

454 <
¥›îty
 
«me
="visibÀ">
True
</property>

455 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

456 <
¥›îty
 
«me
="top_padding">10</property>

457 <
¥›îty
 
«me
="left_padding">12</property>

458 <
chûd
>

459 <
obje˘
 
˛ass
="GtkS¸ﬁÀdWödow" 
id
="scrolledwindow1">

460 <
¥›îty
 
«me
="visibÀ">
True
</property>

461 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

462 <
¥›îty
 
«me
="shadow_ty≥">
ö
</property>

463 <
chûd
>

464 <
obje˘
 
˛ass
="GtkVõwp‹t" 
id
="viewport1">

465 <
¥›îty
 
«me
="visibÀ">
True
</property>

466 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

467 <
chûd
>

468 <
obje˘
 
˛ass
="GtkBox" 
id
="ObjectBox">

469 <
¥›îty
 
«me
="width_request">196</property>

470 <
¥›îty
 
«me
="height_request">497</property>

471 <
¥›îty
 
«me
="visibÀ">
True
</property>

472 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

473 <
¥›îty
 
«me
="‹õ¡©i⁄">
vîtiˇl
</property>

474 <
chûd
>

475 <
∂a˚hﬁdî
/>

476 </
chûd
>

477 <
chûd
>

478 <
∂a˚hﬁdî
/>

479 </
chûd
>

480 <
chûd
>

481 <
∂a˚hﬁdî
/>

482 </
chûd
>

483 <
chûd
>

484 <
∂a˚hﬁdî
/>

485 </
chûd
>

486 </
obje˘
>

487 </
chûd
>

488 </
obje˘
>

489 </
chûd
>

490 </
obje˘
>

491 </
chûd
>

492 </
obje˘
>

493 </
chûd
>

494 <
chûd
 
ty≥
="label">

495 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label10">

496 <
¥›îty
 
«me
="visibÀ">
True
</property>

497 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

498 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">&
…
;
b
&
gt
;
Objekã
&lt;/b&gt;</property>

499 <
¥›îty
 
«me
="u£_m¨kup">
True
</property>

500 </
obje˘
>

501 </
chûd
>

502 </
obje˘
>

503 <
∑ckög
>

504 <
¥›îty
 
«me
="position">1</property>

505 </
∑ckög
>

506 </
chûd
>

507 <
chûd
 
ty≥
="tab">

508 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label2">

509 <
¥›îty
 
«me
="visibÀ">
True
</property>

510 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

511 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Exi°õªnd
</property>

512 </
obje˘
>

513 <
∑ckög
>

514 <
¥›îty
 
«me
="position">1</property>

515 <
¥›îty
 
«me
="èb_fûl">
FÆ£
</property>

516 </
∑ckög
>

517 </
chûd
>

518 <
chûd
>

519 <
obje˘
 
˛ass
="GtkBox" 
id
="box2">

520 <
¥›îty
 
«me
="visibÀ">
True
</property>

521 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

522 <
¥›îty
 
«me
="‹õ¡©i⁄">
vîtiˇl
</property>

523 <
chûd
>

524 <
obje˘
 
˛ass
="GtkGrid" 
id
="grid4">

525 <
¥›îty
 
«me
="visibÀ">
True
</property>

526 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

527 <
chûd
>

528 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label11">

529 <
¥›îty
 
«me
="visibÀ">
True
</property>

530 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

531 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
HöãrgrundÁrbe
:</property>

532 </
obje˘
>

533 <
∑ckög
>

534 <
¥›îty
 
«me
="left_attach">0</property>

535 <
¥›îty
 
«me
="top_attach">0</property>

536 <
¥›îty
 
«me
="width">1</property>

537 <
¥›îty
 
«me
="height">1</property>

538 </
∑ckög
>

539 </
chûd
>

540 <
chûd
>

541 <
obje˘
 
˛ass
="GtkComboBoxText" 
id
="AreaColor">

542 <
¥›îty
 
«me
="visibÀ">
True
</property>

543 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

544 <
¥›îty
 
«me
="wrap_width">8</property>

545 <
¥›îty
 
«me
="entry_text_column">0</property>

546 <
¥›îty
 
«me
="id_column">1</property>

547 </
obje˘
>

548 <
∑ckög
>

549 <
¥›îty
 
«me
="left_attach">1</property>

550 <
¥›îty
 
«me
="top_attach">0</property>

551 <
¥›îty
 
«me
="width">1</property>

552 <
¥›îty
 
«me
="height">1</property>

553 </
∑ckög
>

554 </
chûd
>

555 </
obje˘
>

556 <
∑ckög
>

557 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

558 <
¥›îty
 
«me
="fûl">
True
</property>

559 <
¥›îty
 
«me
="position">0</property>

560 </
∑ckög
>

561 </
chûd
>

562 <
chûd
>

563 <
obje˘
 
˛ass
="GtkFøme" 
id
="frame3">

564 <
¥›îty
 
«me
="visibÀ">
True
</property>

565 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

566 <
¥›îty
 
«me
="label_xalign">0</property>

567 <
¥›îty
 
«me
="shadow_ty≥">
n⁄e
</property>

568 <
chûd
>

569 <
obje˘
 
˛ass
="GtkAlignmít" 
id
="alignment3">

570 <
¥›îty
 
«me
="visibÀ">
True
</property>

571 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

572 <
¥›îty
 
«me
="top_padding">10</property>

573 <
¥›îty
 
«me
="left_padding">12</property>

574 <
chûd
>

575 <
obje˘
 
˛ass
="GtkGrid" 
id
="grid5">

576 <
¥›îty
 
«me
="visibÀ">
True
</property>

577 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

578 <
chûd
>

579 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label13">

580 <
¥›îty
 
«me
="visibÀ">
True
</property>

581 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

582 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

583 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
x
</property>

584 </
obje˘
>

585 <
∑ckög
>

586 <
¥›îty
 
«me
="left_attach">0</property>

587 <
¥›îty
 
«me
="top_attach">0</property>

588 <
¥›îty
 
«me
="width">1</property>

589 <
¥›îty
 
«me
="height">1</property>

590 </
∑ckög
>

591 </
chûd
>

592 <
chûd
>

593 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label14">

594 <
¥›îty
 
«me
="visibÀ">
True
</property>

595 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

596 <
¥›îty
 
«me
="hÆign">
°¨t
</property>

597 <
¥›îty
 
«me
="margin_right">10</property>

598 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
y
</property>

599 </
obje˘
>

600 <
∑ckög
>

601 <
¥›îty
 
«me
="left_attach">0</property>

602 <
¥›îty
 
«me
="top_attach">1</property>

603 <
¥›îty
 
«me
="width">1</property>

604 <
¥›îty
 
«me
="height">1</property>

605 </
∑ckög
>

606 </
chûd
>

607 <
chûd
>

608 <
obje˘
 
˛ass
="GtkSpöBuâ⁄" 
id
="AreaSize_x">

609 <
¥›îty
 
«me
="visibÀ">
True
</property>

610 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

611 <
¥›îty
 
«me
="invisible_char">‚Ä¢</property>

612 </
obje˘
>

613 <
∑ckög
>

614 <
¥›îty
 
«me
="left_attach">1</property>

615 <
¥›îty
 
«me
="top_attach">0</property>

616 <
¥›îty
 
«me
="width">1</property>

617 <
¥›îty
 
«me
="height">1</property>

618 </
∑ckög
>

619 </
chûd
>

620 <
chûd
>

621 <
obje˘
 
˛ass
="GtkSpöBuâ⁄" 
id
="AreaSize_y">

622 <
¥›îty
 
«me
="visibÀ">
True
</property>

623 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

624 <
¥›îty
 
«me
="invisible_char">‚Ä¢</property>

625 </
obje˘
>

626 <
∑ckög
>

627 <
¥›îty
 
«me
="left_attach">1</property>

628 <
¥›îty
 
«me
="top_attach">1</property>

629 <
¥›îty
 
«me
="width">1</property>

630 <
¥›îty
 
«me
="height">1</property>

631 </
∑ckög
>

632 </
chûd
>

633 </
obje˘
>

634 </
chûd
>

635 </
obje˘
>

636 </
chûd
>

637 <
chûd
 
ty≥
="label">

638 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label12">

639 <
¥›îty
 
«me
="visibÀ">
True
</property>

640 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

641 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">&
…
;
b
&
gt
;
Aªa
 
Gr
√∂√ü
e
&lt;/b&gt;</property>

642 <
¥›îty
 
«me
="u£_m¨kup">
True
</property>

643 </
obje˘
>

644 </
chûd
>

645 </
obje˘
>

646 <
∑ckög
>

647 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

648 <
¥›îty
 
«me
="fûl">
True
</property>

649 <
¥›îty
 
«me
="position">1</property>

650 </
∑ckög
>

651 </
chûd
>

652 </
obje˘
>

653 <
∑ckög
>

654 <
¥›îty
 
«me
="position">2</property>

655 </
∑ckög
>

656 </
chûd
>

657 <
chûd
 
ty≥
="tab">

658 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label3">

659 <
¥›îty
 
«me
="visibÀ">
True
</property>

660 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

661 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">
Eö°ñlungí
</property>

662 </
obje˘
>

663 <
∑ckög
>

664 <
¥›îty
 
«me
="position">2</property>

665 <
¥›îty
 
«me
="èb_fûl">
FÆ£
</property>

666 </
∑ckög
>

667 </
chûd
>

668 </
obje˘
>

669 <
∑ckög
>

670 <
¥›îty
 
«me
="ªsize">
FÆ£
</property>

671 <
¥›îty
 
«me
="shrök">
True
</property>

672 </
∑ckög
>

673 </
chûd
>

674 <
chûd
>

675 <
obje˘
 
˛ass
="GtkFøme" 
id
="SFML_Frame">

676 <
¥›îty
 
«me
="visibÀ">
True
</property>

677 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

678 <
¥›îty
 
«me
="label_xalign">0</property>

679 <
¥›îty
 
«me
="shadow_ty≥">
n⁄e
</property>

680 <
chûd
>

681 <
obje˘
 
˛ass
="GtkAlignmít" 
id
="alignment4">

682 <
¥›îty
 
«me
="visibÀ">
True
</property>

683 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

684 <
¥›îty
 
«me
="left_padding">12</property>

685 <
chûd
>

686 <
obje˘
 
˛ass
="GtkS¸ﬁÀdWödow" 
id
="SFMLWindow">

687 <
¥›îty
 
«me
="visibÀ">
True
</property>

688 <
¥›îty
 
«me
="ˇn_focus">
True
</property>

689 <
¥›îty
 
«me
="shadow_ty≥">
ö
</property>

690 <
chûd
>

691 <
obje˘
 
˛ass
="GtkVõwp‹t" 
id
="SFMLView">

692 <
¥›îty
 
«me
="visibÀ">
True
</property>

693 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

694 <
chûd
>

695 <
∂a˚hﬁdî
/>

696 </
chûd
>

697 </
obje˘
>

698 </
chûd
>

699 </
obje˘
>

700 </
chûd
>

701 </
obje˘
>

702 </
chûd
>

703 <
chûd
 
ty≥
="label">

704 <
obje˘
 
˛ass
="GtkLabñ" 
id
="label15">

705 <
¥›îty
 
«me
="visibÀ">
True
</property>

706 <
¥›îty
 
«me
="ˇn_focus">
FÆ£
</property>

707 <
¥›îty
 
«me
="œbñ" 
å™¶©abÀ
="yes">&
…
;
b
&
gt
;
Aªa
&lt;/b&gt;</property>

708 <
¥›îty
 
«me
="u£_m¨kup">
True
</property>

709 </
obje˘
>

710 </
chûd
>

711 </
obje˘
>

712 <
∑ckög
>

713 <
¥›îty
 
«me
="ªsize">
True
</property>

714 <
¥›îty
 
«me
="shrök">
True
</property>

715 </
∑ckög
>

716 </
chûd
>

717 </
obje˘
>

718 <
∑ckög
>

719 <
¥›îty
 
«me
="ex∑nd">
FÆ£
</property>

720 <
¥›îty
 
«me
="fûl">
True
</property>

721 <
¥›îty
 
«me
="position">1</property>

722 </
∑ckög
>

723 </
chûd
>

724 </
obje˘
>

725 </
chûd
>

726 </
obje˘
>

727 </
öãrÁ˚
>

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Common/FileHandler.hpp

1 #i‚de‡
FILEHANDLER_H


2 
	#FILEHANDLER_H


	)

5 
	~<f°ªam
>

6 
	~<io°ªam
>

7 
	~<c°rög
>

8 
	~<ve˘‹
>

9 
	~"../Simuœt‹/Aªa.hµ
"

11 ˛as†
	cClFûeH™dÀr


13 
	mpublic
:

14 
ClFûeH™dÀr
();

15 ~
ClFûeH™dÀr
();

16 
wrôeLevñ
(
°d
::
°rög
 
fûeName
, 
ClAªa
 *
pAªa
);

18 
ªadLevñ
(
°d
::
°rög
 
fûeName
, 
ClAªa
 *
pAªa
);

20 
›íFûe
(
°d
::
°rög
 
fûeName
);

21 
ClAªa
 * 
	$gëAªa
(){ 
myAªa
;};

27 
sf
::
Ve˘‹2i
 
	$gëLevñSize
(){if(
isAªa
Ë 
myAªa
->
	`gëLevñSize
();
	}
};

28 
	gsf
::
Cﬁ‹
 
	$gëBgCﬁ‹
(){if(
isAªa
Ë 
myAªa
->
	`gëBgCﬁ‹
();
	}
};

29 
	$gëNumbîOfSèticObje˘s
(){if(
isAªa
Ë 
myAªa
->
	`gëNumbîOfSèticObje˘s
();
	}
};

30 c⁄° 
	gsf
::
Ve˘‹2f
 & 
	$gëPosôi⁄
(
id
){if(
isAªa
Ë 
myAªa
->
	`gëPosôi⁄
(id);
	}
};

31 c⁄° 
	gsf
::
Ve˘‹2f
 & 
	$gëSize
(
id
){if(
isAªa
Ë 
myAªa
->
	`gëSize
(id);
	}
};

32 
	$gëRŸ©i⁄
(
id
){if(
isAªa
Ë 
myAªa
->
	`gëRŸ©i⁄
(id);
	}
};

47 
	g¥iv©e
:

57 
›íExi°ögFûe
(c⁄° *
fûeName
);

58 
imp‹tLevñDëaûs
(
ClAªa
 *
pAªa
);

59 
imp‹tSèticObje˘s
(
ClAªa
 *
pAªa
);

62 
¸óãFûe
(c⁄° *
fûeName
);

66 
wrôeHódî
(
ClAªa
 *
pAªa
);

69 
wrôeLevñDëaûs
(
ClAªa
 *
pAªa
);

73 
wrôeSèticObje˘s
(
ClAªa
 *
pAªa
);

76 
	göNrOfObje˘s
;

77 
	g°d
::
if°ªam
 
öFûe
;

78 
	g°d
::
of°ªam
 
myFûe
;

79 
ClAªa
 *
	gmyAªa
;

80 
boﬁ
 
	gisAªa
;

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/Editor.hpp

1 #i‚de‡
EDITOR_HPP_INCLUDED


2 
	#EDITOR_HPP_INCLUDED


	)

4 
	~"UiLﬂdî.hµ
"

5 
	~"Simuœti⁄Aªa.hµ
"

6 
	~<ve˘‹
>

7 
	~"../Comm⁄/FûeH™dÀr.hµ
"

8 
	~<c˘y≥
>

10 
	eBackgroundCﬁ‹
{
	mGREY
, 
	mBROWN
, 
	mGREEN
};

12 ˛as†
	cEdô‹
 : 
public
 
UiLﬂdî


14 
¥iv©e
:

15 
⁄_Buâ⁄_B¨_˛icked
();

16 
⁄_Buâ⁄_WC_˛icked
();

17 
⁄_Buâ⁄_Sège_˛icked
();

18 
⁄_Buâ⁄_WÆl_˛icked
();

19 
⁄_Buâ⁄_Fí˚_˛icked
();

20 
⁄_Buâ⁄_CÀ¨_˛icked
();

21 
⁄_Buâ⁄_Exô_˛icked
();

23 
ch™ge_comboBox
();

25 
lﬂdFûe
();

26 
SaveFûe
();

27 
SèπSim
();

28 
SaveTo
();

30 
£tCﬁ‹
(
sf
::
Cﬁ‹
 
pCﬁ‹
);

32 
Simuœti⁄Aªa
 *
	mSFMLAªa
;

33 
ClAªa
 *
	mpAªa
;

34 
°rög
 
	mSimFûe
;

35 
boﬁ
 
	misO≥n
;

36 
ClFûeH™dÀr
 *
	mÀvñ
;

38 
	mpublic
:

39 
Edô‹
(
°rög
 
UiP©h
, 
Glib
::
RefPå
<
Gtk
::
Aµliˇti⁄
> 
≠p
);

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/SFML_Widget.hpp

1 #i‚de‡
SFML_WIDGET_HPP_INCLUDED


2 
	#SFML_WIDGET_HPP_INCLUDED


	)

4 
	~<SFML/Gøphics.hµ
>

5 
	~<gtkmm.h
>

6 
	~<io°ªam
>

8 #i‡
deföed
(
SFML_SYSTEM_WINDOWS
)

10 
	~<gdk/gdkwö32.h
>

11 
	#GET_WINDOW_HANDLE_FROM_GDK
 (
HWND
)
gdk_wö32_wödow_gë_h™dÀ


	)

13 #ñi‡
deföed
(
SFML_SYSTEM_LINUX
Ë|| deföed(
SFML_SYSTEM_FREEBSD
)

15 
	~<gdk/gdkx.h
>

16 
	#GET_WINDOW_HANDLE_FROM_GDK
 
GDK_WINDOW_XID


	)

18 #ñi‡
deföed
(
SFML_SYSTEM_MACOS
)

20 #îr‹ 
NŸe
: 
You
 
have
 
to
 
figuª
 
out
 
™
 
™Æogue
 
way
Åÿ
ac˚ss
 
the
 
h™dÀ
 
of
Åhê
widgë
 
⁄
 
a
 
Mac
-
Sy°em


24 #îr‹ 
Unsuµ‹ãd
 
O≥øtög
 
Sy°em


28 ˛as†
	cSFML_Widgë
 : 
public
 
Gtk
::
Widgë


30 
¥Ÿe˘ed
:

31 
sf
::
VideoMode
 
m_vMode
;

32 
	msf
::
RídîWödow
 
ªndîWödow
;

34 
vútuÆ
 
⁄_size_Æloˇã
(
Gtk
::
AŒoˇti⁄
& 
Æloˇti⁄
);

35 
vútuÆ
 
⁄_ªÆize
();

36 
vútuÆ
 
⁄_uƒólize
();

38 
	mGlib
::
RefPå
<
Gdk
::
Wödow
> 
m_ªfGdkWödow
;

39 
	mpublic
:

40 
SFML_Widgë
(
sf
::
VideoMode
 
mode
);

41 
	mvútuÆ
 ~
SFML_Widgë
();

43 
övÆid©e
();

44 
di•œy
();

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/SimulationArea.hpp

1 #i‚de‡
SIMULATIONAREA_HPP_INCLUDED


2 
	#SIMULATIONAREA_HPP_INCLUDED


	)

4 
	~"SFML_Widgë.hµ
"

5 
	~<gtkmm.h
>

6 
	~"../Simuœt‹/Aªa.hµ
"

9 
usög
 
«me•a˚
 
	g°d
;

11 ˛as†
	cSimuœti⁄Aªa
 : 
public
 
SFML_Widgë


13 
¥iv©e
:

14 
ClAªa
 *
Aªa
;

15 
	mGtk
::
Võwp‹t
 *
P‹t
;

16 
	mGtk
::
Box
 *
Obje˘Box
;

17 
	m£À˘edID
;

18 
	mGtk
::
SpöBuâ⁄
 *
SizeX
;

19 
	mGtk
::
SpöBuâ⁄
 *
SizeY
;

20 
	mGtk
::
SpöBuâ⁄
 *
RŸ
;

21 
	mGtk
::
SpöBuâ⁄
 *
pAªaSizeX
;

22 
	mGtk
::
SpöBuâ⁄
 *
pAªaSizeY
;

23 
	mGtk
::
Labñ
 *
pObjLabñ
;

24 
boﬁ
 
	mboxChecked
;

25 
	mve˘‹
<
	mGtk
::
CheckBuâ⁄
*> 
CheckBuâ
;

27 
™im©e
();

28 
døw
();

29 
ªsize
();

30 
	msf
::
Cﬁ‹
 
bgCﬁ‹
;

31 
	mpublic
:

32 
Simuœti⁄Aªa
(
Gtk
::
Võwp‹t
& 
AªaWö
, Gtk::
Box
& 
Obje˘Box
, Gtk::
SpöBuâ⁄
 *
SizeX
,

33 
Gtk
::
SpöBuâ⁄
 *
SizeY
, Gtk::SpöBuâ⁄ *
RŸ
, Gtk::SpöBuâ⁄ *
pAªaSizeX
,

34 
Gtk
::
SpöBuâ⁄
 *
pAªaSizeY
, Gtk::
Labñ
 *
pObjLabñ
);

35 
˛órAªa
();

36 
£tObje˘
(
°©icObje˘s
 
obje˘
, 
sf
::
Ve˘‹2f
 
posôi⁄
, sf::Ve˘‹2‡
size
, 
rŸ©i⁄
);

37 
£tChecked
();

38 
ClAªa
 *
gëAªa
();

39 
ö£πCheck
(
Gtk
::
CheckBuâ⁄
 *
check
);

40 
box_˛icked
();

41 
£tBgCﬁ‹
(
sf
::
Cﬁ‹
 
pCﬁ‹
){
bgCﬁ‹
 =ÖColor;};

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/UiLoader.hpp

1 #i‚de‡
UILOADER_HPP_INCLUDED


2 
	#UILOADER_HPP_INCLUDED


	)

4 
	~<gtkmm.h
>

5 
	~<io°ªam
>

6 
	~<°rög
>

7 
	~<c°dlib
>

9 
usög
 
«me•a˚
 
	g°d
;

12 ˛as†
	cUiLﬂdî
 : 
public
 
Gtk
::
Wödow


14 
¥iv©e
:

15 
Glib
::
RefPå
<
Gtk
::
Buûdî
> 
buûdî
;

16 
°rög
 
	mUiP©h
;

18 
	m¥Ÿe˘ed
:

19 
Gtk
::
Wödow
 *
pWödow
;

20 
	mGtk
::
S¸ﬁÀdWödow
 *
pSFMLWödow
;

21 
	mGtk
::
Võwp‹t
 *
pSFMLVõw
;

23 
	mGtk
::
Buâ⁄
 *
pLﬂdFûe
;

24 
	mGtk
::
Buâ⁄
 *
pSaveFûe
;

25 
	mGtk
::
Buâ⁄
 *
pSaveTo
;

26 
	mGtk
::
Buâ⁄
 *
pSèπSim
;

27 
	mGtk
::
Buâ⁄
 *
pCÀ¨
;

29 
	mGtk
::
Buâ⁄
 *
pB¨
;

30 
	mGtk
::
Buâ⁄
 *
pWC
;

31 
	mGtk
::
Buâ⁄
 *
pSège
;

32 
	mGtk
::
Buâ⁄
 *
pFí˚
;

33 
	mGtk
::
Buâ⁄
 *
pWÆl
;

34 
	mGtk
::
Buâ⁄
 *
pExô
;

36 
	mGtk
::
Føme
 *
pObjFøme
;

37 
	mGtk
::
Labñ
 *
pObjLabñ
;

39 
	mGtk
::
SpöBuâ⁄
 *
pSizeX
;

40 
	mGtk
::
SpöBuâ⁄
 *
pSizeY
;

41 
	mGtk
::
SpöBuâ⁄
 *
pRŸ
;

42 
	mGtk
::
SpöBuâ⁄
 *
pAªaX
;

43 
	mGtk
::
SpöBuâ⁄
 *
pAªaY
;

45 
	mGtk
::
ComboBoxText
 *
pAªaCﬁ‹
;

47 
	mGtk
::
Box
 *
pBox
;

48 
UiLﬂdî
(
°rög
 
UiP©h
);

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Simulator/Area.hpp

1 #i‚de‡
AREA_HPP_INCLUDED


2 
	#AREA_HPP_INCLUDED


	)

4 
	~"SèticObje˘.hµ
"

5 
	~<ve˘‹
>

8 ˛as†
	cClAªa


10 
	mpublic
:

12 
	$ClAªa
(Ë{
id
 = 0;}

13 ~
	`ClAªa
();

15 
	`ö£πStObj
(
°©icObje˘s
 
ty≥
, c⁄° 
sf
::
Ve˘‹2f
 & 
sizeOfRe˘™gÀ
,

16 c⁄° 
sf
::
Ve˘‹2f
 & 
posôi⁄OfRe˘™gÀ
, 
rŸAngÀ
);

17 
	`døw
(
sf
::
RídîWödow
& 
wödow
);

18 
boﬁ
 
	`vÆidPoöt
(
sf
::
Ve˘‹2f
 
poöt
);

19 
	`gëIdByVe˘‹
(
sf
::
Ve˘‹2f
 
mou£
);

26 c⁄° 
sf
::
Ve˘‹2f
 & 
	`gëPosôi⁄
(
id
);

27 c⁄° 
sf
::
Ve˘‹2f
 & 
	`gëSize
(
id
);

28 
	`gëRŸ©i⁄
(
id
);

32 c⁄° 
sf
::
Ve˘‹2f
 & 
	`gëSour˚
(
id
);

33 c⁄° 
sf
::
Ve˘‹2f
 
	`gëClo£°Exô
(c⁄° sf::Ve˘‹2‡& 
myPosôi⁄
)

35 
di°™˚
 = 
INFINITY
;

36 
sf
::
Ve˘‹2f
 
˛o£°ExôPosôi⁄
;

37 
n
 = 0;Ç < 
sobje˘s
.
	`size
();Ç++)

39 i‡(
sobje˘s
[
n
]->
	`gëTy≥
(Ë=
GATE
)

41 
sf
::
Ve˘‹2f
 
posôi⁄
 = 
sobje˘s
[
n
]->
	`gëCíãr
();

42 
ã°Di°™˚
 = (
myPosôi⁄
.
x
 - 
posôi⁄
.x)*(myPosôi⁄.x -Öosôi⁄.x)+(myPosôi⁄.
y
 -Öosition.y)*(myPosition.x -Öosition.x);

43 i‡(
ã°Di°™˚
<
di°™˚
)

45 
˛o£°ExôPosôi⁄
 = 
posôi⁄
;

46 
di°™˚
 = 
ã°Di°™˚
;

51  
˛o£°ExôPosôi⁄
;

52 
	}
}

57 
£tPosôi⁄
(
id
, c⁄° 
sf
::
Ve˘‹2f
 &
posôi⁄
);

58 
£tSize
(
id
, c⁄° 
sf
::
Ve˘‹2f
 &
√wSize
);

59 
£tRŸ©i⁄
(
id
, 
rŸ©i⁄
);

62 
	$gëNumbîOfSèticObje˘s
(Ë{ 
id
;
	}
}

64 
gëTy≥
(
id
);

66 
£tLevñSize
(
sf
::
Ve˘‹2i
 
pLevñSize
){
ÀvñSize
.
x
 =ÖLevñSize.x; 
	gÀvñSize
.
	gy
 =ÖLevñSize.
y
;};

67 
£tBgCﬁ‹
(
sf
::
Cﬁ‹
 
pCﬁ‹
){
bgCﬁ‹
.
r
 =ÖCﬁ‹.r; 
	gbgCﬁ‹
.
	gg
 =ÖCﬁ‹.
g
; bgCﬁ‹.
	gb
 =ÖCﬁ‹.
b
;};

68 
	gsf
::
Cﬁ‹
 
	$gëBgCﬁ‹
(){ 
bgCﬁ‹
;
	}
};

69 
	gsf
::
Ve˘‹2i
 
	$gëLevñSize
(){ 
ÀvñSize
;
	}
};

71 
boﬁ
 
vÆidP©h
(
sf
::
Ve˘‹2f
 
°¨tPoöt
, sf::Ve˘‹2‡
ídPoöt
);

73 
	g¥iv©e
:

75 
id
;

76 
	g°d
::
ve˘‹
<
ClSèticObje˘
 *> 
sobje˘s
;

77 
	gsf
::
Ve˘‹2i
 
ÀvñSize
;

78 
	gsf
::
Cﬁ‹
 
bgCﬁ‹
;

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Simulator/StaticObject.hpp

1 
	~<SFML/Gøphics.hµ
>

2 #i‚de‡
C_STATIC_OBJECT_INCLUDE


3 
	#C_STATIC_OBJECT_INCLUDE


	)

5 
	~<io°ªam
>

6 
	~<m©h.h
>

8 
	e°©icObje˘s
{
	mSTAGE
, 
	mBAR
, 
	mWC
, 
	mWALL
, 
	mFENCE
, 
	mGATE
};

9 c⁄° 
	gMAXSTATICOBJECTTYPES
 = 
GATE
;

11 ˛as†
	cClSèticObje˘


13 
	mpublic
:

14 
ClSèticObje˘
(
sf
::
Re˘™gÀSh≠e
 *
Re˘c⁄°
, 
id
, 
Ty≥
);

15 ~
ClSèticObje˘
();

16 
døw
(
sf
::
RídîWödow
& 
wödow
);

17 c⁄° 
	msf
::
Ve˘‹2f
 &
gëCíãr
();

18 
boﬁ
 
I¡î£˘s
–c⁄° 
sf
::
Ve˘‹2f
 &
Posôi⁄
);

19 
gëID
();

20 
gëTy≥
();

21 c⁄° 
	msf
::
Ve˘‹2f
 &
gëPosôi⁄
();

22 c⁄° 
	msf
::
Ve˘‹2f
 &
gëSize
();

24 
gëRŸ©i⁄
();

26 
£tPosôi⁄
(c⁄° 
sf
::
Ve˘‹2f
 &
posôi⁄
);

27 
£tRŸ©i⁄
(
rŸ©i⁄
);

28 
£tSize
(c⁄° 
sf
::
Ve˘‹2f
 &
√wSize
);

29 
boﬁ
 
isVÆidP©h
(
sf
::
Ve˘‹2f
 
°¨tPoöt
, sf::Ve˘‹2‡
ídPoöt
);

31 
	m¥iv©e
:

32 
gëText‰omTy≥
(
ty≥
);

33 
£âext
();

35 
	mTy≥
;

36 
	msf
::
Re˘™gÀSh≠e
 *
Re˘
;

37 
	mid
;

38 
	msf
::
Text
 
ãxt
;

39 
	msf
::
F⁄t
 
f⁄t
;

40 
	msf
::
Re˘™gÀSh≠e
 
löe
;

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Common/FileHandler.cpp

1 
	~"../../ö˛ude/Comm⁄/FûeH™dÀr.hµ
"

3 
	gClFûeH™dÀr
::
	$ClFûeH™dÀr
()

5 
isAªa
 = 
Ál£
;

6 
	}
}

8 
	gClFûeH™dÀr
::~
	$ClFûeH™dÀr
()

11 
	}
}

13 
ClFûeH™dÀr
::
	$¸óãFûe
(c⁄° *
fûeName
){

14 
myFûe
.
	`›í
(
fûeName
, 
°d
::
ios
::
åunc
);

16 
	}
}

20 
	gClFûeH™dÀr
::
	$wrôeLevñDëaûs
(
ClAªa
 *
pAªa
){

21 
myFûe
 << "Dëaûs;;;;;;;" << 
pAªa
->
	`gëLevñSize
().
x
 << ";" <<ÖAªa->gëLevñSize().
y
 << ";" << (ËpAªa->
	`gëBgCﬁ‹
().
r
 << ";" << (ËpAªa->gëBgCﬁ‹().
g
 << ";" << (ËpAªa->gëBgCﬁ‹().
b
 << ";\n";

23 
	}
}

26 
	gClFûeH™dÀr
::
	$wrôeSèticObje˘s
(
ClAªa
 *
pAªa
){

27 
x
 = 
pAªa
->
	`gëNumbîOfSèticObje˘s
();

28 
sf
::
Ve˘‹2f
 
sOPosôi⁄
;

29 
sf
::
Ve˘‹2f
 
sOSize
;

30 
sORŸ©i⁄
;

31 
sOTy≥
 = 0;

33 
i
 = 1; i<
x
; i++){

34 
sOPosôi⁄
 = 
pAªa
->
	`gëPosôi⁄
(
i
);

35 
sOSize
 = 
pAªa
->
	`gëSize
(
i
);

36 
sORŸ©i⁄
 = 
pAªa
->
	`gëRŸ©i⁄
(
i
);

37 
sOTy≥
 = 
pAªa
->
	`gëTy≥
(
i
);

38 
myFûe
 << 
i
 << ";" << 
sOPosôi⁄
.
x
 << ";" << sOPosôi⁄.
y
 << ";" << 
sOSize
.x << ";" << sOSize.y << ";" << 
sORŸ©i⁄
 << ";" << 
sOTy≥
 << ";\n";

41 
	}
}

43 
	gClFûeH™dÀr
::
	$wrôeHódî
(
ClAªa
 *
pAªa
){

44 
x
 = 
pAªa
->
	`gëNumbîOfSèticObje˘s
();

45 
myFûe
 << 
x
 << " StaticObjectId" << "; Position Xf; Position Yf; Size Xf; Size Yf; Rotation f; Type i; Levelsize X; Levelsize Y; BGRed; BGGreen;BGBlue;\n";

47 
	}
}

49 
	gClFûeH™dÀr
::
	$›íExi°ögFûe
(c⁄° *
fûeName
){

50 
åy
{

51 
öFûe
.
	`›í
(
fûeName
);

52 }
	`ˇtch
(
°d
::
ios_ba£
::
Áûuª
){

53 
°d
::
cout
<<"Error";

57 
	}
}

60 
	gClFûeH™dÀr
::
wrôeLevñ
(
°d
::
°rög
 
fûeName
, 
ClAªa
 *
pAªa
){

62 
	gcode
 = 
¸óãFûe
(
fûeName
.
c_°r
());

63 if(
	gcode
 != 0)

64  
code
;

65 
	gcode
 = 
wrôeHódî
(
pAªa
);

66 if(
	gcode
 != 0)

67  
code
;

68 
	gcode
 = 
wrôeLevñDëaûs
(
pAªa
);

69 if(
	gcode
 != 0)

70  
code
;

71 
	gcode
 = 
wrôeSèticObje˘s
(
pAªa
);

72 if(
	gcode
 != 0)

73  
code
;

74 
	gmyFûe
.
Êush
();

75 
	gmyFûe
.
˛o£
();

81 
	gClFûeH™dÀr
::
	$imp‹tSèticObje˘s
(
ClAªa
 *
pAªa
){

82 
ªtu∫Code
 = 0;

83 
°r
[1000];

84 
¥›s
[7];

85 
mu…ùlõr
 = 10;

86 
dividî
 = 1;

87 
i
 = 0; i < 
öNrOfObje˘s
; i++){

88 
öFûe
.
	`gëlöe
(
°r
,1000);

89 
j
 = 0;

90 
k
 = 0; k<7; k++){

91 
¥›s
[
k
] = 0;

93 
°r
[
j
] != ';'){

94 if(
°r
[
j
] != '.'){

95 if(
mu…ùlõr
 == 1)

96 
dividî
 = divider * 10;

97 if(
°r
[
j
] < 58 && str[j] > 47)

98 
¥›s
[
k
] = 
mu…ùlõr
 *Ör›s[k] + (
°r
[
j
] - 48Ë/ 
dividî
;

100 
°d
::
cout
 << "StaticObjectÇumcharÇotáÇumber.";

105 
mu…ùlõr
 = 1;

106 
dividî
 = 10;

108 
j
++;

110 
j
++;

112 
sf
::
Ve˘‹2f
 
posôi⁄
;

113 
posôi⁄
.
x
 = 
¥›s
[1];

114 
posôi⁄
.
y
 = 
¥›s
[2];

115 
sf
::
Ve˘‹2f
 
obje˘Size
;

116 
obje˘Size
.
x
 = 
¥›s
[3];

117 
obje˘Size
.
y
 = 
¥›s
[4];

118 
ty≥
 = (Ë
¥›s
[6];

119 if(
ty≥
 > 
MAXSTATICOBJECTTYPES
){

120 
ty≥
 = (Ë
WALL
;

121 
ªtu∫Code
 = 3;

123 
pAªa
->
	`ö£πStObj
((
°©icObje˘s
)
ty≥
,
obje˘Size
,
posôi⁄
,
¥›s
[5]);

127  
ªtu∫Code
;

128 
	}
}

130 
	gClFûeH™dÀr
::
	$imp‹tLevñDëaûs
(
ClAªa
 *
pAªa
){

131 
°r
[1000];

132 
öFûe
.
	`gëlöe
(
°r
, 1000);

135 
j
 = 
öNrOfObje˘s
 = 0;

136 
°r
[
j
] != ' ' && str[j] != ';'){

137 if(
°r
[
j
] < 58 && str[j] > 47){

138 
öNrOfObje˘s
 = 10 * inNrOfObje˘†+ (
°r
[
j
] - 48);

139 
j
++;

144 
j
 = 14;

145 
mu…ùlõr
 = 10;

146 
¥›s
[5];

147 
öFûe
.
	`gëlöe
(
°r
, 1000);

150 
k
 = 0; k<5; k++){

151 
¥›s
[
k
] = 0;

152 
°r
[
j
] != ';'){

153 if(
°r
[
j
] < 58 && str[j] > 47)

154 
¥›s
[
k
] = 
mu…ùlõr
 *Ör›s[k] + (
°r
[
j
] - 48);

157 
°d
::
cout
 << "Error whenÑeadingÜevel detals: LeveldetailÇotáÇumber.";

159 
j
++;

161 
j
++;

163 
i
 = 0; i<5; i++){

164 if(
¥›s
[
i
] < 0){

167 if(
i
 > 1 && 
¥›s
[i] > 255){

168 
°d
::
cout
 << "4: UnexpectedÅokenátÜine 2 of csv file whenÜoading. Only ';'ándÇumbers [0-9]áreállowed,Éxcept first column.";

173 
sf
::
Ve˘‹2i
 
myLevñSize
;

174 
sf
::
Cﬁ‹
 
myBgCﬁ‹
;

176 
myLevñSize
.
x
 = 
¥›s
[0];

177 
myLevñSize
.
y
 = 
¥›s
[1];

178 
myBgCﬁ‹
.
r
 = 
¥›s
[2];

179 
myBgCﬁ‹
.
g
 = 
¥›s
[3];

180 
myBgCﬁ‹
.
b
 = 
¥›s
[4];

182 
pAªa
->
	`£tLevñSize
(
myLevñSize
);

183 
pAªa
->
	`£tBgCﬁ‹
(
myBgCﬁ‹
);

186 
°d
::
cout
 << 
°r
 << "\¿Numbî o‡SèticObje˘s:" << 
öNrOfObje˘s
;

188 
	}
}

192 
	gClFûeH™dÀr
::
ªadLevñ
(
°d
::
°rög
 
fûeName
, 
ClAªa
 *
pAªa
){

193 
	gcode
 = 
›íExi°ögFûe
(
fûeName
.
c_°r
());

194 if(
	gcode
 != 0)

195  
code
;

196 
	gcode
 = 
imp‹tLevñDëaûs
(
pAªa
);

197 if(
	gcode
 != 0)

198  
code
;

199 
	gcode
 = 
imp‹tSèticObje˘s
(
pAªa
);

200 if(
	gcode
 != 0)

201  
code
;

202 
	göFûe
.
˛o£
();

208 
	gClFûeH™dÀr
::
›íFûe
(
°d
::
°rög
 
fûeName
){

209 if(
isAªa
){

210 
dñëe
 
myAªa
;

212 
	gmyAªa
 = 
√w
 
ClAªa
;

213 
	gisAªa
 = 
åue
;

215 
	gcode
 = 
›íExi°ögFûe
(
fûeName
.
c_°r
());

216 if(
	gcode
 != 0)

217  
code
;

218 
	gcode
 = 
imp‹tLevñDëaûs
(
myAªa
);

219 if(
	gcode
 != 0)

220  
code
;

221 
	gcode
 = 
imp‹tSèticObje˘s
(
myAªa
);

222 if(
	gcode
 != 0)

223  
code
;

224 
	göFûe
.
˛o£
();

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/Editor.cpp

1 
	~"../../ö˛ude/Edô‹/Edô‹.hµ
"

3 
	gEdô‹
::
Edô‹
(
°rög
 
UiP©h
, 
Glib
::
RefPå
<
Gtk
::
Aµliˇti⁄
> 
≠p
) :

4 
	$UiLﬂdî
(
UiP©h
)

6 
this
->
isO≥n
 = 
Ál£
;

7 
this
->
SimFûe
 = " ";

9 
Àvñ
 = 
√w
 
	`ClFûeH™dÀr
();

13 
SFMLAªa
 = 
√w
 
	`Simuœti⁄Aªa
(*
pSFMLVõw
, *
pBox
, 
pSizeX
, 
pSizeY
, 
pRŸ
, 
pAªaX
, 
pAªaY
, 
pObjLabñ
);

15 
°rög°ªam
 
c⁄vît
;

16 
c⁄vît
<<
GREY
<<
GREEN
<<
BROWN
;

17 
°rög
 
	`tmp
(
c⁄vît
.
	`°r
());

18 
pAªaCﬁ‹
->
	`≠≥nd
(
tmp
.
	`sub°r
(0,0), "Grau");

19 
pAªaCﬁ‹
->
	`≠≥nd
(
tmp
.
	`sub°r
(1,1), "Gr√ºn");

20 
pAªaCﬁ‹
->
	`≠≥nd
(
tmp
.
	`sub°r
(2,2), "Braun");

21 
pAªaCﬁ‹
->
	`£t_a˘ive
(1);

23 
	`ch™ge_comboBox
();

25 
pB¨
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_B¨_˛icked
));

26 
pWC
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_WC_˛icked
));

27 
pSège
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_Sège_˛icked
));

28 
pWÆl
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_WÆl_˛icked
));

29 
pFí˚
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_Fí˚_˛icked
));

30 
pExô
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_Exô_˛icked
));

32 
pCÀ¨
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
⁄_Buâ⁄_CÀ¨_˛icked
));

34 
pAªaCﬁ‹
->
	`sig«l_ch™ged
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
ch™ge_comboBox
));

36 
pLﬂdFûe
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
lﬂdFûe
));

37 
pSaveFûe
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
SaveFûe
));

38 
pSèπSim
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
SèπSim
));

39 
pSaveTo
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
this
, &
Edô‹
::
SaveTo
));

41 
pSizeX
->
	`£t_adju°mít
(
Gtk
::
Adju°mít
::
	`¸óã
(10.0, 10.0, 500.0, 0.1, 0.1));

42 
pSizeY
->
	`£t_adju°mít
(
Gtk
::
Adju°mít
::
	`¸óã
(10.0, 10.0, 500.0, 0.1, 0.1));

43 
pRŸ
->
	`£t_adju°mít
(
Gtk
::
Adju°mít
::
	`¸óã
(0.0, 0.0, 360.0, 0.1, 0.1));

45 
pAªaX
->
	`£t_adju°mít
(
Gtk
::
Adju°mít
::
	`¸óã
(748.0, 748.0, 40000.0, 1.0, 1.0));

46 
pAªaY
->
	`£t_adju°mít
(
Gtk
::
Adju°mít
::
	`¸óã
(710.0, 710.0, 4000.0, 1.0, 1.0));

48 
pAªa
 = 
SFMLAªa
->
	`gëAªa
();

50 
≠p
->
	`run
(*
pWödow
);

53 
	}
}

55 
	gEdô‹
::
£tCﬁ‹
(
sf
::
Cﬁ‹
 
pCﬁ‹
)

57 
pAªa
->
£tBgCﬁ‹
(
pCﬁ‹
);

58 
	gSFMLAªa
->
£tBgCﬁ‹
(
pCﬁ‹
);

61 
	gEdô‹
::
	$⁄_Buâ⁄_B¨_˛icked
()

63 
pObjLabñ
->
	`£t_œbñ
("Bar");

64 
pSizeX
->
	`£t_vÆue
(10.0);

65 
pSizeY
->
	`£t_vÆue
(10.0);

66 
pRŸ
->
	`£t_vÆue
(0.0);

67 
SFMLAªa
->
	`£tObje˘
(
BAR
, 
sf
::
Ve˘‹2
<>(0.0,0.0), sf::Vector2<>(10.0,10.0), 0.0);

68 
	}
}

70 
	gEdô‹
::
	$⁄_Buâ⁄_Sège_˛icked
()

72 
pObjLabñ
->
	`£t_œbñ
("Stage");

73 
pSizeX
->
	`£t_vÆue
(10.0);

74 
pSizeY
->
	`£t_vÆue
(10.0);

75 
pRŸ
->
	`£t_vÆue
(0.0);

76 
SFMLAªa
->
	`£tObje˘
(
STAGE
, 
sf
::
Ve˘‹2
<>(0.,0.), sf::Vector2<>(10.,10.), 0.0);

78 
	}
}

80 
	gEdô‹
::
	$⁄_Buâ⁄_WC_˛icked
()

82 
pObjLabñ
->
	`£t_œbñ
("WC");

83 
pSizeX
->
	`£t_vÆue
(10.0);

84 
pSizeY
->
	`£t_vÆue
(10.0);

85 
pRŸ
->
	`£t_vÆue
(0.0);

86 
SFMLAªa
->
	`£tObje˘
(
WC
, 
sf
::
Ve˘‹2
<>(0.,0.), sf::Vector2<>(10.,10.), 0.0);

87 
	}
}

90 
	gEdô‹
::
	$⁄_Buâ⁄_Fí˚_˛icked
()

92 
pObjLabñ
->
	`£t_œbñ
("Fence");

93 
pSizeX
->
	`£t_vÆue
(10.0);

94 
pSizeY
->
	`£t_vÆue
(10.0);

95 
pRŸ
->
	`£t_vÆue
(0.0);

96 
SFMLAªa
->
	`£tObje˘
(
FENCE
, 
sf
::
Ve˘‹2
<>(0.,0.), sf::Vector2<>(10.,10.), 0.0);

97 
	}
}

99 
	gEdô‹
::
	$⁄_Buâ⁄_WÆl_˛icked
()

101 
pObjLabñ
->
	`£t_œbñ
("Wall");

102 
pSizeX
->
	`£t_vÆue
(10.0);

103 
pSizeY
->
	`£t_vÆue
(10.0);

104 
pRŸ
->
	`£t_vÆue
(0.0);

105 
SFMLAªa
->
	`£tObje˘
(
WALL
, 
sf
::
Ve˘‹2
<>(0.,0.), sf::Vector2<>(10.,10.), 0.0);

106 
	}
}

108 
	gEdô‹
::
	$⁄_Buâ⁄_Exô_˛icked
()

110 
pObjLabñ
->
	`£t_œbñ
("Exit");

111 
pSizeX
->
	`£t_vÆue
(10.0);

112 
pSizeY
->
	`£t_vÆue
(10.0);

113 
pRŸ
->
	`£t_vÆue
(0.0);

114 
SFMLAªa
->
	`£tObje˘
(
GATE
, 
sf
::
Ve˘‹2
<>(0.,0.), sf::Vector2<>(10.,10.), 0.0);

115 
	}
}

117 
	gEdô‹
::
	$⁄_Buâ⁄_CÀ¨_˛icked
()

119 
SFMLAªa
->
	`˛órAªa
();

120 
pAªa
 = 
SFMLAªa
->
	`gëAªa
();

121 
	}
}

123 
	gEdô‹
::
	$ch™ge_comboBox
()

125 
°rög
 
id
 = 
pAªaCﬁ‹
->
	`gë_a˘ive_id
();

126 
i
 = 
	`©oi
(
id
.
	`c_°r
());

127 
pAªa
 = 
SFMLAªa
->
	`gëAªa
();

128 
i
)

130 
GREY
:

132 
this
->
	`£tCﬁ‹
(
sf
::
	`Cﬁ‹
(193,205,205));

134 
GREEN
:

136 
this
->
	`£tCﬁ‹
(
sf
::
	`Cﬁ‹
(162,205,90));

138 
BROWN
:

140 
this
->
	`£tCﬁ‹
(
sf
::
	`Cﬁ‹
(205,132, 63));

143 
°d
::
˚º
<<
i
<<°d::
ídl
;

146 
	}
}

148 
	gEdô‹
::
	$lﬂdFûe
()

150 
Gtk
::
FûeChoo£rDülog
 
	`dülog
("Bitte w√§hlen sieÉine Simulations Dateiáus",

151 
Gtk
::
FILE_CHOOSER_ACTION_OPEN
);

152 
dülog
.
	`£t_å™sõ¡_f‹
(*
this
);

155 
dülog
.
	`add_buâ⁄
(
Gtk
::
Stock
::
CANCEL
, Gtk::
RESPONSE_CANCEL
);

156 
dülog
.
	`add_buâ⁄
("Ausw√§hÀn", 
Gtk
::
RESPONSE_OK
);

158 
ªsu…
 = 
dülog
.
	`run
();

161 
ªsu…
) {

162 (
Gtk
::
RESPONSE_OK
): {

163 
this
->
SimFûe
 = 
dülog
.
	`gë_fûíame
();

164 
this
->
isO≥n
 = 
åue
;

165 
SFMLAªa
->
	`˛órAªa
();

166 
ClAªa
 *
pAªa
 = 
SFMLAªa
->
	`gëAªa
();

167 
Àvñ
->
	`ªadLevñ
(
dülog
.
	`gë_fûíame
(),
pAªa
);

168 
	`£tCﬁ‹
(
pAªa
->
	`gëBgCﬁ‹
());

169 
pAªaX
->
	`£t_vÆue
(
pAªa
->
	`gëLevñSize
().
x
);

170 
pAªaY
->
	`£t_vÆue
(
pAªa
->
	`gëLevñSize
().
y
);

172 
i
=1; i<=
pAªa
->
	`gëNumbîOfSèticObje˘s
();i++){

173 
obje˘
 = 
pAªa
->
	`gëTy≥
(
i
);

174 
°rög
 
œbñ
;

175 
obje˘
) {

176 
BAR
:

177 
œbñ
 = "Bar";

179 
STAGE
:

180 
œbñ
 = "Stage";

182 
WC
:

183 
œbñ
 = "WC";

185 
WALL
:

186 
œbñ
 = "Wall";

188 
FENCE
:

189 
œbñ
 = "Fence";

191 
GATE
:

192 
œbñ
 = "Exit";

196 
°rög°ªam
 
c⁄vît
;

197 
c⁄vît
<<
i
;

198 
Gtk
::
CheckBuâ⁄
 *
checkObj
 = 
	`m™age
(
√w
 Gtk::
	`CheckBuâ⁄
(
	`°rög
("Obje˘ Nr. "Ë+ 
c⁄vît
.
	`°r
(Ë+ såög(": "Ë+ 
œbñ
));

199 
pBox
->
	`∑ck_°¨t
(*
checkObj
);

200 
checkObj
->
	`sig«l_˛icked
().
	`c⁄√˘
(
sigc
::
	`mem_fun
(*
SFMLAªa
, &
Simuœti⁄Aªa
::
box_˛icked
));

201 
checkObj
->
	`show
();

202 
SFMLAªa
->
	`ö£πCheck
(
checkObj
);

206 (
Gtk
::
RESPONSE_CANCEL
): {

207 
cout
 << "C™˚»˛icked." <<
ídl
;

211 
cout
 << "U√x≥˘ed buâ⁄ clicked." << 
ídl
;

215 
	}
}

217 
	gEdô‹
::
	$SaveFûe
()

219 if(
this
->
SimFûe
.
	`Àngth
() < 1)

220 
this
->
	`SaveTo
();

222 if(
this
->
isO≥n
) {

223 
pAªa
->
	`£tLevñSize
(
sf
::
	`Ve˘‹2i
(
pAªaX
->
	`gë_vÆue
(), 
pAªaY
->get_value()));

224 
Àvñ
->
	`wrôeLevñ
(
this
->
SimFûe
, 
pAªa
);

227 
Gtk
::
FûeChoo£rDülog
 
	`dülog
("Bitte w√§hlen sieÉinen Ort zu speichernáus",

228 
Gtk
::
FILE_CHOOSER_ACTION_SAVE
);

229 
dülog
.
	`£t_å™sõ¡_f‹
(*
this
);

232 
dülog
.
	`add_buâ⁄
(
Gtk
::
Stock
::
CANCEL
, Gtk::
RESPONSE_CANCEL
);

233 
dülog
.
	`add_buâ⁄
("Sñe˘", 
Gtk
::
RESPONSE_OK
);

235 
ªsu…
 = 
dülog
.
	`run
();

238 
ªsu…
) {

239 (
Gtk
::
RESPONSE_OK
):

240 
SimFûe
 = 
dülog
.
	`gë_fûíame
();

241 
isO≥n
 = 
åue
;

242 
pAªa
->
	`£tLevñSize
(
sf
::
	`Ve˘‹2i
(
pAªaX
->
	`gë_vÆue
(), 
pAªaY
->get_value()));

243 i‡(
Àvñ
->
	`wrôeLevñ
(
SimFûe
, 
pAªa
) != 0)

244 
	`exô
(
EXIT_FAILURE
);

245 
this
->
SimFûe
 = 
dülog
.
	`gë_fûíame
();

249 (
Gtk
::
RESPONSE_CANCEL
):

250 
°d
::
cout
 << "C™˚»˛icked." << std::
ídl
;

254 
°d
::
cout
 << "U√x≥˘ed buâ⁄ clicked." << std::
ídl
;

258 
	}
}

260 
	gEdô‹
::
	$SaveTo
()

262 
Gtk
::
FûeChoo£rDülog
 
	`dülog
("Bitte w√§hlen sieÉinen Ort zu speichernáus",

263 
Gtk
::
FILE_CHOOSER_ACTION_SAVE
);

264 
dülog
.
	`£t_å™sõ¡_f‹
(*
this
);

267 
dülog
.
	`add_buâ⁄
(
Gtk
::
Stock
::
CANCEL
, Gtk::
RESPONSE_CANCEL
);

268 
dülog
.
	`add_buâ⁄
("Ausw√§hÀn", 
Gtk
::
RESPONSE_OK
);

270 
ªsu…
 = 
dülog
.
	`run
();

273 
ªsu…
) {

274 (
Gtk
::
RESPONSE_OK
):

275 
°d
::
cout
 << "Sñe˘ clicked." << std::
ídl
;

276 
°d
::
cout
 << "Fﬁdî sñe˘ed: " << 
dülog
.
	`gë_fûíame
()

277 << 
°d
::
ídl
;

278 
SimFûe
 = 
dülog
.
	`gë_fûíame
();

279 
isO≥n
 = 
åue
;

280 
pAªa
->
	`£tLevñSize
(
sf
::
	`Ve˘‹2i
(
pAªaX
->
	`gë_vÆue
(), 
pAªaY
->get_value()));

281 
Àvñ
->
	`wrôeLevñ
(
SimFûe
, 
pAªa
);

285 (
Gtk
::
RESPONSE_CANCEL
):

286 
°d
::
cout
 << "C™˚»˛icked." << std::
ídl
;

290 
°d
::
cout
 << "U√x≥˘ed buâ⁄ clicked." << std::
ídl
;

293 
	}
}

295 
	gEdô‹
::
	$SèπSim
()

297 if(
this
->
SimFûe
 == " ")

300 
°rög
 
	`°¨t
("P™icSim -‡" + 
SimFûe
);

301 
cout
<<
	`sy°em
(
°¨t
.
	`c_°r
());

304 
	}
}

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/SFML_Widget.cpp

1 
	~"../../ö˛ude/Edô‹/SFML_Widgë.hµ
"

3 
	gSFML_Widgë
::
SFML_Widgë
(
sf
::
VideoMode
 
mode
)

8 
£t_size_ªque°
(
mode
.
width
, mode.
height
);

10 
£t_has_wödow
(
Ál£
);

13 
	gSFML_Widgë
::~
	$SFML_Widgë
()

15 
	}
}

17 
SFML_Widgë
::
⁄_size_Æloˇã
(
Gtk
::
AŒoˇti⁄
& 
Æloˇti⁄
)

23 
this
->
£t_Æloˇti⁄
(
Æloˇti⁄
);

25 if(
	gm_ªfGdkWödow
)

27 
	gm_ªfGdkWödow
->
move_ªsize
(
Æloˇti⁄
.
gë_x
(),

28 
Æloˇti⁄
.
gë_y
(),

29 
Æloˇti⁄
.
gë_width
(),

30 
Æloˇti⁄
.
gë_height
() );

31 
	gªndîWödow
.
£tSize
(
sf
::
Ve˘‹2u
(
Æloˇti⁄
.
gë_width
(),

32 
Æloˇti⁄
.
gë_height
()));

36 
	gSFML_Widgë
::
	$⁄_ªÆize
()

38 
Gtk
::
Widgë
::
	`⁄_ªÆize
();

40 if(!
m_ªfGdkWödow
)

43 
GdkWödowAâr
 
©åibuãs
;

44 
	`mem£t
(&
©åibuãs
, 0, (attributes));

46 
Gtk
::
AŒoˇti⁄
 
Æloˇti⁄
 = 
	`gë_Æloˇti⁄
();

49 
©åibuãs
.
x
 = 
Æloˇti⁄
.
	`gë_x
();

50 
©åibuãs
.
y
 = 
Æloˇti⁄
.
	`gë_y
();

51 
©åibuãs
.
width
 = 
Æloˇti⁄
.
	`gë_width
();

52 
©åibuãs
.
height
 = 
Æloˇti⁄
.
	`gë_height
();

54 
©åibuãs
.
evít_mask
 = 
	`gë_evíts
 (Ë| 
Gdk
::
EXPOSURE_MASK
;

55 
©åibuãs
.
wödow_ty≥
 = 
GDK_WINDOW_CHILD
;

56 
©åibuãs
.
w˛ass
 = 
GDK_INPUT_OUTPUT
;

59 
m_ªfGdkWödow
 = 
Gdk
::
Wödow
::
	`¸óã
(
	`gë_wödow
(), &
©åibuãs
,

60 
GDK_WA_X
 | 
GDK_WA_Y
);

61 
	`£t_has_wödow
(
åue
);

62 
	`£t_wödow
(
m_ªfGdkWödow
);

65 #i‡
	`GTK_VERSION_GE
(3, 0)

66 
this
->
	`un£t_background_cﬁ‹
();

68 
this
->
	`gë_wödow
()->
	`£t_back_pixm≠
(
Glib
::
RefPå
<
Gdk
::
Pixm≠
>());

71 
this
->
	`£t_doubÀ_buf„ªd
(
Ál£
);

74 
m_ªfGdkWödow
->
	`£t_u£r_d©a
(
	`gobj
());

76 
ªndîWödow
.
	`¸óã
(
	`GET_WINDOW_HANDLE_FROM_GDK
(
m_ªfGdkWödow
->
	`gobj
()));

78 
	}
}

80 
	gSFML_Widgë
::
	$⁄_uƒólize
()

82 
m_ªfGdkWödow
.
	`˛ór
();

85 
Gtk
::
Widgë
::
	`⁄_uƒólize
();

86 
	}
}

88 
	gSFML_Widgë
::
	$di•œy
()

90 if(
m_ªfGdkWödow
)

92 
ªndîWödow
.
	`di•œy
();

94 
	}
}

96 
	gSFML_Widgë
::
	$övÆid©e
()

98 if(
m_ªfGdkWödow
)

100 
m_ªfGdkWödow
->
	`övÆid©e
(
åue
);

102 
	}
}

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/SimulationArea.cpp

1 
	~"../../ö˛ude/Edô‹/Simuœti⁄Aªa.hµ
"

3 
	gSimuœti⁄Aªa
::
Simuœti⁄Aªa
(
Gtk
::
Võwp‹t
& 
AªaWö
, Gtk::
Box
& 
Obje˘Box
, Gtk::
SpöBuâ⁄
 *
SizeX
,

4 
Gtk
::
SpöBuâ⁄
 *
SizeY
, Gtk::SpöBuâ⁄ *
RŸ
, Gtk::SpöBuâ⁄ *
pAªaSizeX
,

5 
Gtk
::
SpöBuâ⁄
 *
pAªaSizeY
, Gtk::
Labñ
 *
pObjLabñ
)

7 : 
SFML_Widgë
(
sf
::
	$VideoMode
(2000, 2000))

10 
AªaWö
.
	`add
(*
this
);

12 
	`show
();

14 
P‹t
 = &
AªaWö
;

16 
Aªa
 = 
√w
 
	`ClAªa
();

17 
this
->
Obje˘Box
 = &ObjectBox;

18 
£À˘edID
 = 0;

19 
this
->
SizeX
 = SizeX;

20 
this
->
SizeY
 = SizeY;

21 
this
->
RŸ
 = Rot;

22 
this
->
boxChecked
 = 
Ál£
;

23 
this
->
pAªaSizeX
 =ÖAreaSizeX;

24 
this
->
pAªaSizeY
 =ÖAreaSizeY;

25 
this
->
pObjLabñ
 =ÖObjLabel;

31 
Glib
::
	`sig«l_timeout
().
	`c⁄√˘
(
sigc
::
	`böd_ªtu∫
(sigc::
	`mem_fun
(
this
, &
Simuœti⁄Aªa
::
™im©e
),

32 
åue
),

39 
	`sig«l_døw
().
	`c⁄√˘
(
sigc
::
	`böd_ªtu∫
(

40 
sigc
::
	`hide
(

41 
sigc
::
	`mem_fun
(
this
, &
Simuœti⁄Aªa
::
døw
)),

42 
åue
));

45 
	`sig«l_size_Æloˇã
().
	`c⁄√˘
(
sigc
::
	`hide
(

46 
sigc
::
	`mem_fun
(
this
, &
Simuœti⁄Aªa
::
ªsize
)));

47 
	}
}

49 
	gSimuœti⁄Aªa
::
	$™im©e
()

51 
rightID
;

52 if(
boxChecked
) {

53 
i
 = 0; i<
CheckBuâ
.
	`size
(); i++) {

54 if(
CheckBuâ
[
i
]->
	`gë_a˘ive
()) {

55 
ID
;

57 
°rög
 
	`œbñ
(
CheckBuâ
[
i
]->
	`gë_œbñ
());

58 
size_t
 
°¨tPos
 = 
œbñ
.
	`föd_fú°_of
('.');

59 
size_t
 
ídPos
 = 
œbñ
.
	`föd_fú°_of
(':');

60 
°rög°ªam
 
	`c⁄vît
(
œbñ
.
	`sub°r
(
°¨tPos
+2, 
ídPos
 - (startPos+2)));

61 
˚º
<<
c⁄vît
.
	`°r
();

62 
c⁄vît
 >> 
ID
;

64 if(
£À˘edID
 !
ID
){

65 
SizeX
->
	`£t_vÆue
(
Aªa
->
	`gëSize
(
ID
).
x
);

66 
SizeY
->
	`£t_vÆue
(
Aªa
->
	`gëSize
(
ID
).
y
);

67 
RŸ
->
	`£t_vÆue
(
Aªa
->
	`gëRŸ©i⁄
(
ID
));

68 
°rög
 
œbñ
;

69 
Aªa
->
	`gëTy≥
(
ID
)) {

70 
BAR
:

71 
œbñ
 = "Bar";

73 
STAGE
:

74 
œbñ
 = "Stage";

76 
WC
:

77 
œbñ
 = "WC";

79 
WALL
:

80 
œbñ
 = "Wall";

82 
FENCE
:

83 
œbñ
 = "Fence";

85 
GATE
:

86 
œbñ
 = "Exit";

89 
pObjLabñ
->
	`£t_œbñ
(
œbñ
);

90 
rightID
 = 
ID
;

93 
CheckBuâ
[
i
]->
	`£t_a˘ive
(
Ál£
);

96 
£À˘edID
 = 
rightID
;

97 
boxChecked
 = 
Ál£
;

99 if(
£À˘edID
) {

100 
Aªa
->
	`£tSize
(
£À˘edID
, 
sf
::
	`Ve˘‹2f
(
SizeX
->
	`gë_vÆue
(), 
SizeY
->get_value()));

101 
Aªa
->
	`£tRŸ©i⁄
(
£À˘edID
, 
RŸ
->
	`gë_vÆue
());

103 if(
sf
::
Mou£
::
	`isBuâ⁄Pªs£d
(sf::Mou£::
Le·
)) {

104 
sf
::
Ve˘‹2i
 
pos
 = sf::
Mou£
::
	`gëPosôi⁄
(
ªndîWödow
);

105 
°d
::
˚º
<<
pos
.
x
<<" "<<pos.
y
<<°d::
ídl
;

107 if(
pos
.
x
 > 0 &&Öos.
y
 > 0)

108 
Aªa
->
	`£tPosôi⁄
(
£À˘edID
, 
sf
::
Ve˘‹2
<>(
pos
.
x
,Öos.
y
));

112 
	`övÆid©e
();

113 
	}
}

117 
	gSimuœti⁄Aªa
::
	$døw
()

120 
ªndîWödow
.
	`˛ór
(
bgCﬁ‹
);

122 
Aªa
->
	`døw
(
ªndîWödow
);

123 
	`di•œy
();

124 
	}
}

126 
	gSimuœti⁄Aªa
::
	$ªsize
()

169 
	}
}

171 
Simuœti⁄Aªa
::
£tObje˘
(
°©icObje˘s
 
obje˘
, 
sf
::
Ve˘‹2f
 
posôi⁄
, sf::Ve˘‹2‡
size
, 
rŸ©i⁄
)

173 
	g£À˘edID
 = 
Aªa
->
ö£πStObj
(
obje˘
, 
size
, 
posôi⁄
, 
rŸ©i⁄
);

174 
°rög
 
	gœbñ
;

175 
	gobje˘
) {

176 
	gBAR
:

177 
œbñ
 = "Bar";

179 
	gSTAGE
:

180 
œbñ
 = "Stage";

182 
	gWC
:

183 
œbñ
 = "WC";

185 
	gWALL
:

186 
œbñ
 = "Wall";

188 
	gFENCE
:

189 
œbñ
 = "Fence";

191 
	gGATE
:

192 
œbñ
 = "Exit";

196 
°rög°ªam
 
	gc⁄vît
;

197 
	gc⁄vît
<<
	g£À˘edID
;

198 
	gGtk
::
CheckBuâ⁄
 *
checkObj
 = 
m™age
(
√w
 
Gtk
::CheckBuâ⁄(
°rög
("Obje˘ Nr. "Ë+ 
c⁄vît
.
°r
(Ë+ såög(": "Ë+ 
œbñ
));

199 
	gObje˘Box
->
∑ck_°¨t
(*
checkObj
);

200 
	gcheckObj
->
£t_a˘ive
();

201 
	gcheckObj
->
sig«l_˛icked
().
c⁄√˘
(
sigc
::
mem_fun
(*
this
, &
Simuœti⁄Aªa
::
box_˛icked
));

202 
	gcheckObj
->
show
();

203 
	gCheckBuâ
.
push_back
(
checkObj
);

206 
	gSimuœti⁄Aªa
::
	$˛órAªa
()

208 
£À˘edID
 = 0;

209 
dñëe
 
Aªa
;

210 
Aªa
 = 
√w
 
	`ClAªa
();

211 
CheckBuâ
.
	`˛ór
();

212 
ve˘‹
<
Gtk
::
Widgë
*> 
chûdªns
 = 
Obje˘Box
->
	`gë_chûdªn
();

213 
size
 = 
chûdªns
.
	`size
();

214 
i
 = 0; i<
size
; i++) {

215 
Gtk
::
Widgë
 *
tmp
 = 
chûdªns
.
	`back
();

216 
chûdªns
.
	`p›_back
();

217 
Obje˘Box
->
	`ªmove
(*
tmp
);

218 
dñëe
 
tmp
;

220 
ªndîWödow
.
	`˛ór
();

221 
	}
}

223 
	gSimuœti⁄Aªa
::
	$box_˛icked
()

225 
boxChecked
 = 
åue
;

226 
	}
}

228 
ClAªa
 *
	gSimuœti⁄Aªa
::
	$gëAªa
()

230  
Aªa
;

231 
	}
}

233 
	gSimuœti⁄Aªa
::
ö£πCheck
(
Gtk
::
CheckBuâ⁄
 *
check
)

235 
this
->
CheckBuâ
.
push_back
(
check
);

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/UiLoader.cpp

1 
	~"../../ö˛ude/Edô‹/UiLﬂdî.hµ
"

3 
	gUiLﬂdî
::
	$UiLﬂdî
(
°rög
 
UiP©h
)

5 
this
->
UiP©h
 = UiPath;

7 
åy
 {

8 
this
->
buûdî
 = 
Gtk
::
Buûdî
::
	`¸óã_‰om_fûe
(
UiP©h
);

9 } 
	`ˇtch
(c⁄° 
Glib
::
FûeEº‹
& 
ex
) {

10 
°d
::
˚º
 << "FûeEº‹: " << 
ex
.
	`wh©
(Ë<< std::
ídl
;

11 
	`exô
(
EXIT_FAILURE
);

12 } 
	`ˇtch
(c⁄° 
Glib
::
M¨kupEº‹
& 
ex
) {

13 
°d
::
˚º
 << "M¨kupEº‹: " << 
ex
.
	`wh©
(Ë<< std::
ídl
;

14 
	`exô
(
EXIT_FAILURE
);

15 } 
	`ˇtch
(c⁄° 
Gtk
::
BuûdîEº‹
& 
ex
) {

16 
°d
::
˚º
 << "BuûdîEº‹: " << 
ex
.
	`wh©
(Ë<< std::
ídl
;

17 
	`exô
(
EXIT_FAILURE
);

21 
buûdî
->
	`gë_widgë
("Edô‹Wö", 
pWödow
);

24 
buûdî
->
	`gë_widgë
("SFMLWödow", 
pSFMLWödow
);

26 
buûdî
->
	`gë_widgë
("SFMLVõw", 
pSFMLVõw
);

29 
buûdî
->
	`gë_widgë
("LﬂdFûe", 
pLﬂdFûe
);

30 
buûdî
->
	`gë_widgë
("SaveFûe", 
pSaveFûe
);

31 
buûdî
->
	`gë_widgë
("SaveTo", 
pSaveTo
);

32 
buûdî
->
	`gë_widgë
("CÀ¨", 
pCÀ¨
);

33 
buûdî
->
	`gë_widgë
("SèπSim", 
pSèπSim
);

36 
buûdî
->
	`gë_widgë
("b¨", 
pB¨
);

37 
buûdî
->
	`gë_widgë
("WC", 
pWC
);

38 
buûdî
->
	`gë_widgë
("Sège", 
pSège
);

39 
buûdî
->
	`gë_widgë
("Fí˚", 
pFí˚
);

40 
buûdî
->
	`gë_widgë
("WÆl", 
pWÆl
);

41 
buûdî
->
	`gë_widgë
("Exô", 
pExô
);

44 
buûdî
->
	`gë_widgë
("Obje˘Labñ", 
pObjLabñ
);

46 
buûdî
->
	`gë_widgë
("size_x", 
pSizeX
);

47 
buûdî
->
	`gë_widgë
("size_y", 
pSizeY
);

48 
buûdî
->
	`gë_widgë
("rŸ©i⁄", 
pRŸ
);

51 
buûdî
->
	`gë_widgë
("Obje˘Føme", 
pObjFøme
);

53 
buûdî
->
	`gë_widgë
("AªaCﬁ‹", 
pAªaCﬁ‹
);

55 
buûdî
->
	`gë_widgë
("AªaSize_x", 
pAªaX
);

56 
buûdî
->
	`gë_widgë
("AªaSize_y", 
pAªaY
);

58 
buûdî
->
	`gë_widgë
("Obje˘Box", 
pBox
);

63 
	}
}

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/main.cpp

1 
	~"../../ö˛ude/Edô‹/Edô‹.hµ
"

3 
	$maö
(
¨gc
, *
¨gv
[])

5 
Glib
::
RefPå
<
Gtk
::
Aµliˇti⁄
> 
≠p
 = Gtk::Aµliˇti⁄::
	`¸óã
(
¨gc
, 
¨gv
, "SimEditor.app");

6 
Edô‹
 
	`Wödow
("SimEdô‹.gœde", 
≠p
);

8 
	}
}

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Simulator/Area.cpp

1 
	~"../../ö˛ude/Simuœt‹/Aªa.hµ
"

2 
	gClAªa
::~
	$ClAªa
()

4 
n
=0;Ç < 
sobje˘s
.
	`size
();Ç++)

6 
dñëe
 
sobje˘s
[
n
];

8 
	}
}

10 
	gClAªa
::
ö£πStObj
(
°©icObje˘s
 
ty≥
, c⁄° 
sf
::
Ve˘‹2f
 & 
sizeOfRe˘™gÀ
,

11 c⁄° 
sf
::
Ve˘‹2f
 & 
posôi⁄OfRe˘™gÀ
, 
rŸAngÀ
)

13 
	gid
++;

14 
	gsf
::
Re˘™gÀSh≠e
 *
ãmpRe
 = 
√w
 
sf
::RectangleShape();

15 
	gãmpRe
->
£tPosôi⁄
(
posôi⁄OfRe˘™gÀ
);

16 
	gãmpRe
->
£tSize
(
sizeOfRe˘™gÀ
);

17 
	gãmpRe
->
£tRŸ©i⁄
(
rŸAngÀ
);

18 if(
	gty≥
 =
GATE
)

19 
ãmpRe
->
£tFûlCﬁ‹
(
sf
::
Cﬁ‹
::
Red
);

20 
ClSèticObje˘
 *
	gãmpSt
 = 
√w
 ClSèticObje˘(
ãmpRe
, 
id
, (Ë
ty≥
);

21 
	gsobje˘s
.
push_back
(
ãmpSt
);

22  
	gid
;

26 
	gClAªa
::
døw
(
sf
::
RídîWödow
& 
wödow
)

28 
n
=0; 
	gn
 < 
	gsobje˘s
.
size
();Ç++)

30 
	gsobje˘s
[
n
]->
døw
(
wödow
);

35 
boﬁ
 
	gClAªa
::
vÆidPoöt
(
sf
::
Ve˘‹2f
 
poöt
)

37  
n
=0; 
	gn
 < 
	gsobje˘s
.
size
();Ç++)

39 if(
	gsobje˘s
[
n
]->
gëTy≥
(Ë!
GATE
 && 
sobje˘s
[n]->
I¡î£˘s
(
poöt
))

41  
Ál£
;

44  
	gåue
;

47 
boﬁ
 
	gClAªa
::
vÆidP©h
(
sf
::
Ve˘‹2f
 
°¨tPoöt
, sf::Ve˘‹2‡
ídPoöt
)

49  
n
=0; 
	gn
 < 
	gsobje˘s
.
size
();Ç++)

51 if(
	gsobje˘s
[
n
]->
isVÆidP©h
(
°¨tPoöt
, 
ídPoöt
))

53  
	gÁl£
;

56  
	gåue
;

62 c⁄° 
	gsf
::
Ve˘‹2f
 & 
ClAªa
::
	$gëPosôi⁄
(
id
)

64 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

66 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

68  
sobje˘s
[
n
]->
	`gëPosôi⁄
();

71 
	}
}

72 c⁄° 
	gsf
::
Ve˘‹2f
 & 
ClAªa
::
	$gëSize
(
id
)

74 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

76 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

78  
sobje˘s
[
n
]->
	`gëSize
();

81 
	}
}

82 
	gClAªa
::
	$gëRŸ©i⁄
(
id
)

84 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

86 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

88  
sobje˘s
[
n
]->
	`gëRŸ©i⁄
();

91 
	}
}

93 
	gClAªa
::
	$gëTy≥
(
id
)

95 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

97 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

99  
sobje˘s
[
n
]->
	`gëTy≥
();

102 
	}
}

104 
	gClAªa
::
gëIdByVe˘‹
(
sf
::
Ve˘‹2f
 
mou£
)

106  
n
=0; 
	gn
 < 
	gsobje˘s
.
size
();Ç++)

108 if(
	gsobje˘s
[
n
]->
I¡î£˘s
(
mou£
))

110  
	gsobje˘s
[
n
]->
gëID
();

117 c⁄° 
	gsf
::
Ve˘‹2f
 & 
ClAªa
::
	$gëSour˚
(
id
)

119 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

121 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

123  
sobje˘s
[
n
]->
	`gëCíãr
();

126 
	}
}

132 
	gClAªa
::
£tPosôi⁄
(
id
, c⁄° 
sf
::
Ve˘‹2f
 &
posôi⁄
)

134 
n
 = 0; 
	gn
 < 
	gsobje˘s
.
size
();n++)

136 i‡(
	gsobje˘s
[
n
]->
gëID
(Ë=
id
)

138 
sobje˘s
[
n
]->
£tPosôi⁄
(
posôi⁄
);

142 
	gClAªa
::
£tSize
(
id
, c⁄° 
sf
::
Ve˘‹2f
 &
√wSize
)

144 
n
 = 0; 
	gn
 < 
	gsobje˘s
.
size
();n++)

146 i‡(
	gsobje˘s
[
n
]->
gëID
(Ë=
id
)

148 
sobje˘s
[
n
]->
£tSize
(
√wSize
);

152 
	gClAªa
::
	$£tRŸ©i⁄
(
id
, 
rŸ©i⁄
)

154 
n
 = 0;Ç < 
sobje˘s
.
	`size
();n++)

156 i‡(
sobje˘s
[
n
]->
	`gëID
(Ë=
id
)

158 
sobje˘s
[
n
]->
	`£tRŸ©i⁄
(
rŸ©i⁄
);

161 
	}
}

	@/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Simulator/StaticObject.cpp

1 
	~"../../ö˛ude/Simuœt‹/SèticObje˘.hµ
"

2 
	~<m©h.h
>

4 
	gClSèticObje˘
::
ClSèticObje˘
(
sf
::
Re˘™gÀSh≠e
 *
Re˘c⁄°
, 
id
, 
Ty≥
)

6 
	gRe˘
 = 
Re˘c⁄°
;

7 
	gthis
->
	gTy≥
 = 
Ty≥
;

9 
	gthis
->
	gid
 = 
id
;

11 
	gRe˘
->
£tOrigö
(
Re˘
->
gëSize
().
x
/2,Re˘->gëSize().
y
/2);

12 
	gãxt
.
£tPosôi⁄
(
Re˘
->
gëPosôi⁄
().
x
,Re˘->gëPosôi⁄().
y
);

13 
gëText‰omTy≥
(
Ty≥
);

14 
	gf⁄t
.
lﬂdFromFûe
("fonts/LiberationSerif-Regular.ttf");

15 
	gãxt
.
£tF⁄t
(
f⁄t
);

16 
	gãxt
.
£tCh¨a˘îSize
(60);

17 
	gãxt
.
£tCﬁ‹
(
sf
::
Cﬁ‹
::
Bœck
);

20 
	gãxt
.
£tOrigö
(
ãxt
.
gëLoˇlBounds
().
width
/2,ãxt.gëLoˇlBounds().
height
);

22 if(
	gRe˘
->
gëRŸ©i⁄
()>90 && Rect->getRotation()<271)

24 
	gãxt
.
£tRŸ©i⁄
(
Re˘
->
gëRŸ©i⁄
()-180);

28 
	gãxt
.
£tRŸ©i⁄
(
Re˘
->
gëRŸ©i⁄
());

31 (
	gRe˘
->
gëSize
().
	gx
<
	gãxt
.
gëLoˇlBounds
().
	gwidth
 || Re˘->gëSize().
	gy
<Åext.gëLoˇlBounds().
	gheight
Ë&&Åext.
gëCh¨a˘îSize
()> 30)

33 
	gãxt
.
£tCh¨a˘îSize
(
ãxt
.
gëCh¨a˘îSize
()-1);

34 
	gãxt
.
£tOrigö
(
ãxt
.
gëLoˇlBounds
().
width
/2,ãxt.gëLoˇlBounds().
height
);

38 if(
	gTy≥
!=
FENCE
 && 
Ty≥
!=
WALL
)

40 
löe
.
£tSize
(
sf
::
Ve˘‹2f
(
Re˘
->
gëSize
().
x
,3));

41 
	glöe
.
£tFûlCﬁ‹
(
sf
::
Cﬁ‹
::
Red
);

42 
	glöe
.
£tPosôi⁄
(
Re˘
->
gëPosôi⁄
());

43 
	glöe
.
£tOrigö
(
Re˘
->
gëSize
().
x
/2,-Re˘->gëSize().
y
/2+
löe
.getSize().y);

44 
	glöe
.
£tRŸ©i⁄
(
Re˘
->
gëRŸ©i⁄
());

50 
	gClSèticObje˘
::
	$gëTy≥
()

52  
Ty≥
;

53 
	}
}

55 
	gClSèticObje˘
::~
	$ClSèticObje˘
()

57 
dñëe
 
Re˘
;

58 
	}
}

60 
	gClSèticObje˘
::
døw
(
sf
::
RídîWödow
& 
wödow
)

63 
wödow
.
døw
(*
Re˘
);

65 
	gwödow
.
døw
(
löe
);

66 
	gwödow
.
døw
(
ãxt
);

69 
boﬁ
 
	gClSèticObje˘
::
I¡î£˘s
–c⁄° 
sf
::
Ve˘‹2f
 &
Posôi⁄
)

71  
Re˘
->
gëGlobÆBounds
().
c⁄èös
(
Posôi⁄
);

73 
	gClSèticObje˘
::
	$gëID
()

75  
id
;

76 
	}
}

77 c⁄° 
	gsf
::
Ve˘‹2f
 &
ClSèticObje˘
::
	$gëPosôi⁄
()

79  
Re˘
->
	`gëPosôi⁄
();

80 
	}
}

81 c⁄° 
	gsf
::
Ve˘‹2f
 &
ClSèticObje˘
::
	$gëSize
()

83  
Re˘
->
	`gëSize
();

84 
	}
}

86 
	gClSèticObje˘
::
	$gëRŸ©i⁄
()

88  
Re˘
->
	`gëRŸ©i⁄
();

89 
	}
}

91 
	gClSèticObje˘
::
£tPosôi⁄
(c⁄° 
sf
::
Ve˘‹2f
 &
posôi⁄
)

93 
Re˘
->
£tPosôi⁄
(
posôi⁄
);

94 
£âext
();

96 
	gClSèticObje˘
::
	$£tRŸ©i⁄
(
rŸ©i⁄
)

98 
Re˘
->
	`£tRŸ©i⁄
(
rŸ©i⁄
);

99 
this
->
	`£âext
();

100 
	}
}

101 
	gClSèticObje˘
::
£tSize
(c⁄° 
sf
::
Ve˘‹2f
 &
√wSize
)

103 
Re˘
->
£tSize
(
√wSize
);

104 
£âext
();

107 
	gClSèticObje˘
::
	$gëText‰omTy≥
(
ty≥
)

109 
ty≥
)

111 
STAGE
:

112 
ãxt
.
	`£tSåög
("Stage");

114 
BAR
:

115 
ãxt
.
	`£tSåög
("Bar");

117 
WC
:

118 
ãxt
.
	`£tSåög
("WC");

120 
WALL
:

121 
ãxt
.
	`£tSåög
("Wall");

123 
FENCE
:

124 
ãxt
.
	`£tSåög
("Fence");

126 
GATE
:

127 
ãxt
.
	`£tSåög
("Exit");

130 
	}
}

132 c⁄° 
	gsf
::
Ve˘‹2f
 & 
ClSèticObje˘
::
	$gëCíãr
()

134  
Re˘
->
	`gëPosôi⁄
();

135 
	}
}

137 
	gClSèticObje˘
::
	$£âext
()

139 
Re˘
->
	`£tOrigö
(Re˘->
	`gëSize
().
x
/2,Re˘->gëSize().
y
/2);

140 
ãxt
.
	`£tPosôi⁄
(
Re˘
->
	`gëPosôi⁄
().
x
,Re˘->gëPosôi⁄().
y
);

141 
ãxt
.
	`£tCh¨a˘îSize
(60);

152 
ãxt
.
	`£tOrigö
—ext.
	`gëLoˇlBounds
().
width
/2,ãxt.gëLoˇlBounds().
height
);

154 if(
Re˘
->
	`gëRŸ©i⁄
()>90 && Rect->getRotation()<271)

156 
ãxt
.
	`£tRŸ©i⁄
(
Re˘
->
	`gëRŸ©i⁄
()-180);

160 
ãxt
.
	`£tRŸ©i⁄
(
Re˘
->
	`gëRŸ©i⁄
());

163 (
Re˘
->
	`gëSize
().
x
<
ãxt
.
	`gëLoˇlBounds
().
width
 || Re˘->gëSize().
y
<Åext.gëLoˇlBounds().
height
Ë&&Åext.
	`gëCh¨a˘îSize
()> 30)

165 
ãxt
.
	`£tCh¨a˘îSize
—ext.
	`gëCh¨a˘îSize
()-1);

166 
ãxt
.
	`£tOrigö
—ext.
	`gëLoˇlBounds
().
width
/2,ãxt.gëLoˇlBounds().
height
);

170 if(
Ty≥
!=
FENCE
 && Ty≥!=
WALL
)

172 
löe
.
	`£tSize
(
sf
::
	`Ve˘‹2f
(
Re˘
->
	`gëSize
().
x
,3));

173 
löe
.
	`£tFûlCﬁ‹
(
sf
::
Cﬁ‹
::
Red
);

174 
löe
.
	`£tPosôi⁄
(
Re˘
->
	`gëPosôi⁄
());

175 
löe
.
	`£tOrigö
(
Re˘
->
	`gëSize
().
x
/2,-Re˘->gëSize().
y
/2+line.getSize().y);

176 
löe
.
	`£tRŸ©i⁄
(
Re˘
->
	`gëRŸ©i⁄
());

178 
	}
}

180 
boﬁ
 
	gClSèticObje˘
::
isVÆidP©h
(
sf
::
Ve˘‹2f
 
°¨tPoöt
, sf::Ve˘‹2‡
ídPoöt
)

182 if(
Ty≥
==
GATE
Ë 
Ál£
;

183 
	gsf
::
Re˘
<> 
ã°Re˘
;

185 if(
	g°¨tPoöt
.
	gy
 =
ídPoöt
.
y
)

187 if(
°¨tPoöt
.
x
 < 
ídPoöt
.x)

189 
ã°Re˘
.
À·
 = 
°¨tPoöt
.
x
;

193 
	gã°Re˘
.
	gÀ·
 = 
ídPoöt
.
x
;

196 
	gã°Re˘
.
	gt›
 = 
°¨tPoöt
.
y
;

198 
	gã°Re˘
.
	gwidth
 = 
abs
(
°¨tPoöt
.
x
-
ídPoöt
.x);

199 
	gã°Re˘
.
	gheight
 = 1;

200  
	gRe˘
->
gëGlobÆBounds
().
öãr£˘s
(
ã°Re˘
);

204 if(
	g°¨tPoöt
.
	gy
 < 
	gídPoöt
.y)

206 
	gã°Re˘
.
	gt›
 = 
°¨tPoöt
.
y
;

210 
	gã°Re˘
.
	gt›
 = 
ídPoöt
.
y
;

213 
	gã°Re˘
.
	gÀ·
 = 
°¨tPoöt
.
x
;

215 
	gã°Re˘
.
	gheight
 = 
abs
(
°¨tPoöt
.
y
-
ídPoöt
.y);

216 
	gã°Re˘
.
	gwidth
 = 1;

217  
	gRe˘
->
gëGlobÆBounds
().
öãr£˘s
(
ã°Re˘
);

	@/usr/include/SFML/Graphics.hpp

25 #i‚de‡
SFML_GRAPHICS_HPP


26 
	#SFML_GRAPHICS_HPP


	)

32 
	~<SFML/Wödow.hµ
>

33 
	~<SFML/Gøphics/BÀndMode.hµ
>

34 
	~<SFML/Gøphics/Cﬁ‹.hµ
>

35 
	~<SFML/Gøphics/F⁄t.hµ
>

36 
	~<SFML/Gøphics/Glyph.hµ
>

37 
	~<SFML/Gøphics/Image.hµ
>

38 
	~<SFML/Gøphics/RídîSèãs.hµ
>

39 
	~<SFML/Gøphics/RídîTextuª.hµ
>

40 
	~<SFML/Gøphics/RídîWödow.hµ
>

41 
	~<SFML/Gøphics/Shadî.hµ
>

42 
	~<SFML/Gøphics/Sh≠e.hµ
>

43 
	~<SFML/Gøphics/Cú˛eSh≠e.hµ
>

44 
	~<SFML/Gøphics/Re˘™gÀSh≠e.hµ
>

45 
	~<SFML/Gøphics/C⁄vexSh≠e.hµ
>

46 
	~<SFML/Gøphics/S¥ôe.hµ
>

47 
	~<SFML/Gøphics/Text.hµ
>

48 
	~<SFML/Gøphics/Textuª.hµ
>

49 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

50 
	~<SFML/Gøphics/Vîãx.hµ
>

51 
	~<SFML/Gøphics/VîãxAºay.hµ
>

52 
	~<SFML/Gøphics/Võw.hµ
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


123 #unde‡
__MATHDECL_1


124 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

125 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

126 
¨gs
, 
Æüs
)

	)

127 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

128 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
,

206 
	#FP_NAN
 
FP_NAN


	)

207 
FP_INFINITE
,

208 
	#FP_INFINITE
 
FP_INFINITE


	)

209 
FP_ZERO
,

210 
	#FP_ZERO
 
FP_ZERO


	)

211 
FP_SUBNORMAL
,

212 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

213 
FP_NORMAL


214 
	#FP_NORMAL
 
FP_NORMAL


	)

218 #ifde‡
__NO_LONG_DOUBLE_MATH


219 
	#Â˛assify
(
x
) \

220 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

222 
	#Â˛assify
(
x
) \

223 ( (
x
) ==  () \

224 ? 
	`__Â˛assifyf
 (
x
) \

225 :  (
x
) ==  () \

226 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

230 #ifde‡
__NO_LONG_DOUBLE_MATH


231 
	#signbô
(
x
) \

232 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

234 
	#signbô
(
x
) \

235 ( (
x
) ==  () \

236 ? 
	`__signbôf
 (
x
) \

237 :  (
x
) ==  () \

238 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

242 #ifde‡
__NO_LONG_DOUBLE_MATH


243 
	#isföôe
(
x
) \

244 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

246 
	#isföôe
(
x
) \

247 ( (
x
) ==  () \

248 ? 
	`__föôef
 (
x
) \

249 :  (
x
) ==  () \

250 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

254 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

258 #ifde‡
__NO_LONG_DOUBLE_MATH


259 
	#i¢™
(
x
) \

260 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

262 
	#i¢™
(
x
) \

263 ( (
x
) ==  () \

264 ? 
	`__i¢™f
 (
x
) \

265 :  (
x
) ==  () \

266 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

270 #ifde‡
__NO_LONG_DOUBLE_MATH


271 
	#isöf
(
x
) \

272 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

274 
	#isöf
(
x
) \

275 ( (
x
) ==  () \

276 ? 
	`__isöff
 (
x
) \

277 :  (
x
) ==  () \

278 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

282 
	#MATH_ERRNO
 1

	)

283 
	#MATH_ERREXCEPT
 2

	)

288 #i‚de‡
__FAST_MATH__


289 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

294 #ifdef 
__USE_MISC


298 
_IEEE_
 = -1,

299 
_SVID_
,

300 
_XOPEN_
,

301 
_POSIX_
,

302 
_ISOC_


303 } 
	t_LIB_VERSION_TYPE
;

308 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

312 #ifde‡
__USE_SVID


318 #ifde‡
__˝lu•lus


319 
__ex˚±i⁄


321 
ex˚±i⁄


324 
ty≥
;

325 *
«me
;

326 
¨g1
;

327 
¨g2
;

328 
ªtvÆ
;

329 
	}
};

331 #ifde‡
__˝lu•lus


332 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

334 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

337 
	#X_TLOSS
 1.41484755040568800000e+16

	)

340 
	#DOMAIN
 1

	)

341 
	#SING
 2

	)

342 
	#OVERFLOW
 3

	)

343 
	#UNDERFLOW
 4

	)

344 
	#TLOSS
 5

	)

345 
	#PLOSS
 6

	)

348 
	#HUGE
 3.40282347e+38F

	)

352 #ifde‡
__USE_XOPEN


354 
	#MAXFLOAT
 3.40282347e+38F

	)

361 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


362 
	#M_E
 2.7182818284590452354

	)

363 
	#M_LOG2E
 1.4426950408889634074

	)

364 
	#M_LOG10E
 0.43429448190325182765

	)

365 
	#M_LN2
 0.69314718055994530942

	)

366 
	#M_LN10
 2.30258509299404568402

	)

367 
	#M_PI
 3.14159265358979323846

	)

368 
	#M_PI_2
 1.57079632679489661923

	)

369 
	#M_PI_4
 0.78539816339744830962

	)

370 
	#M_1_PI
 0.31830988618379067154

	)

371 
	#M_2_PI
 0.63661977236758134308

	)

372 
	#M_2_SQRTPI
 1.12837916709551257390

	)

373 
	#M_SQRT2
 1.41421356237309504880

	)

374 
	#M_SQRT1_2
 0.70710678118654752440

	)

380 #ifde‡
__USE_GNU


381 
	#M_El
 2.7182818284590452353602874713526625L

	)

382 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

383 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

384 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

385 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

386 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

387 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

388 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

389 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

390 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

391 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

392 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

393 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

400 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


401 
	#__NO_MATH_INLINES
 1

	)

404 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

411 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

412 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

413 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

414 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

415 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

416 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

420 #ifde‡
__USE_EXTERN_INLINES


421 
	~<bôs/m©hölöe.h
>

426 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

427 
	~<bôs/m©h-föôe.h
>

430 #ifde‡
__USE_ISOC99


434 #i‚de‡
isgª©î


435 
	#isgª©î
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

442 #i‚de‡
isgª©îequÆ


443 
	#isgª©îequÆ
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

450 #i‚de‡
i¶ess


451 
	#i¶ess
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

458 #i‚de‡
i¶es£quÆ


459 
	#i¶es£quÆ
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

466 #i‚de‡
i¶essgª©î


467 
	#i¶essgª©î
(
x
, 
y
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

470 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

474 #i‚de‡
isun‹dîed


475 
	#isun‹dîed
(
u
, 
v
) \

476 (
__exãnsi⁄__
 \

477 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

478 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

483 
	g__END_DECLS


	@/usr/include/SFML/Graphics/BlendMode.hpp

25 #i‚de‡
SFML_BLENDMODE_HPP


26 
	#SFML_BLENDMODE_HPP


	)

28 
«me•a˚
 
	gsf


35 
	eBÀndMode


37 
	gBÀndAÕha
,

38 
	gBÀndAdd
,

39 
	gBÀndMu…ùly
,

40 
	gBÀndN⁄e


	@/usr/include/SFML/Graphics/CircleShape.hpp

25 #i‚de‡
SFML_CIRCLESHAPE_HPP


26 
	#SFML_CIRCLESHAPE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Sh≠e.hµ
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_GRAPHICS_API
 
	gCú˛eSh≠e
 : 
public
 
Sh≠e


43 
public
 :

52 
ex∂icô
 
Cú˛eSh≠e
(
ødius
 = 0, 
poötCou¡
 = 30);

62 
£tRadius
(
ødius
);

72 
gëRadius
() const;

82 
£tPoötCou¡
(
cou¡
);

92 
vútuÆ
 
gëPoötCou¡
() const;

104 
vútuÆ
 
Ve˘‹2f
 
gëPoöt
(
ödex
) const;

106 
	g¥iv©e
 :

111 
m_ødius
;

112 
	gm_poötCou¡
;

	@/usr/include/SFML/Graphics/Color.hpp

25 #i‚de‡
SFML_COLOR_HPP


26 
	#SFML_COLOR_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cSFML_GRAPHICS_API
 
	gCﬁ‹


42 
	gpublic
 :

51 
Cﬁ‹
();

62 
Cﬁ‹
(
Uöt8
 
ªd
, Uöt8 
gªí
, Uöt8 
blue
, Uöt8 
Æpha
 = 255);

67 c⁄° 
Cﬁ‹
 
	gBœck
;

68 c⁄° 
Cﬁ‹
 
	gWhôe
;

69 c⁄° 
Cﬁ‹
 
	gRed
;

70 c⁄° 
Cﬁ‹
 
	gGªí
;

71 c⁄° 
Cﬁ‹
 
	gBlue
;

72 c⁄° 
Cﬁ‹
 
	gYñlow
;

73 c⁄° 
Cﬁ‹
 
	gMagíè
;

74 c⁄° 
Cﬁ‹
 
	gCy™
;

75 c⁄° 
Cﬁ‹
 
	gTøn•¨ít
;

80 
Uöt8
 
	gr
;

81 
Uöt8
 
	gg
;

82 
Uöt8
 
	gb
;

83 
Uöt8
 
	ga
;

98 
SFML_GRAPHICS_API
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Cﬁ‹
& 
À·
, c⁄° 
	gCﬁ‹
& 
	gright
);

112 
SFML_GRAPHICS_API
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Cﬁ‹
& 
À·
, c⁄° 
	gCﬁ‹
& 
	gright
);

127 
SFML_GRAPHICS_API
 
Cﬁ‹
 
	g›î©‹
 +(c⁄° 
	gCﬁ‹
& 
	gÀ·
, c⁄° Cﬁ‹& 
	gright
);

144 
SFML_GRAPHICS_API
 
Cﬁ‹
 
	g›î©‹
 *(c⁄° 
	gCﬁ‹
& 
	gÀ·
, c⁄° Cﬁ‹& 
	gright
);

160 
SFML_GRAPHICS_API
 
	gCﬁ‹
& 
	g›î©‹
 +=(
Cﬁ‹
& 
À·
, c⁄° Cﬁ‹& 
	gright
);

178 
SFML_GRAPHICS_API
 
	gCﬁ‹
& 
	g›î©‹
 *=(
Cﬁ‹
& 
À·
, c⁄° Cﬁ‹& 
	gright
);

	@/usr/include/SFML/Graphics/ConvexShape.hpp

25 #i‚de‡
SFML_CONVEXSHAPE_HPP


26 
	#SFML_CONVEXSHAPE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Sh≠e.hµ
>

33 
	~<ve˘‹
>

36 
«me•a˚
 
	gsf


42 ˛as†
	cSFML_GRAPHICS_API
 
	gC⁄vexSh≠e
 : 
public
 
Sh≠e


44 
public
 :

52 
ex∂icô
 
C⁄vexSh≠e
(
poötCou¡
 = 0);

64 
£tPoötCou¡
(
cou¡
);

74 
vútuÆ
 
gëPoötCou¡
() const;

91 
£tPoöt
(
ödex
, c⁄° 
Ve˘‹2f
& 
poöt
);

105 
vútuÆ
 
Ve˘‹2f
 
gëPoöt
(
ödex
) const;

107 
	g¥iv©e
 :

112 
°d
::
ve˘‹
<
Ve˘‹2f
> 
m_poöts
;

	@/usr/include/SFML/Graphics/Font.hpp

25 #i‚de‡
SFML_FONT_HPP


26 
	#SFML_FONT_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Glyph.hµ
>

33 
	~<SFML/Gøphics/Textuª.hµ
>

34 
	~<SFML/Gøphics/Re˘.hµ
>

35 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

36 
	~<SFML/Sy°em/Såög.hµ
>

37 
	~<m≠
>

38 
	~<°rög
>

39 
	~<ve˘‹
>

42 
«me•a˚
 
	gsf


44 
˛ass
 
	gI≈utSåóm
;

50 ˛as†
	cSFML_GRAPHICS_API
 
	gF⁄t


52 
	gpublic
 :

60 
F⁄t
();

68 
F⁄t
(c⁄° F⁄t& 
c›y
);

76 ~
F⁄t
();

94 
boﬁ
 
lﬂdFromFûe
(c⁄° 
°d
::
°rög
& 
fûíame
);

113 
boﬁ
 
lﬂdFromMem‹y
(c⁄° * 
d©a
, 
°d
::
size_t
 
sizeInByãs
);

131 
boﬁ
 
lﬂdFromSåóm
(
I≈utSåóm
& 
°ªam
);

143 c⁄° 
	gGlyph
& 
gëGlyph
(
Uöt32
 
codePoöt
, 
ch¨a˘îSize
, 
boﬁ
 
bﬁd
) const;

161 
gëKînög
(
Uöt32
 
fú°
, Uöt32 
£c⁄d
, 
ch¨a˘îSize
) const;

174 
gëLöeS∑cög
(
ch¨a˘îSize
) const;

188 c⁄° 
	gTextuª
& 
gëTextuª
(
ch¨a˘îSize
) const;

198 
	gF⁄t
& 
	g›î©‹
 =(c⁄° 
F⁄t
& 
right
);

212 c⁄° 
	gF⁄t
& 
gëDeÁu…F⁄t
();

214 
	g¥iv©e
 :

220 
	sRow


222 
Row
(
rowT›
, 
rowHeight
Ë: 
width
(0), 
t›
‘owT›), 
height
(rowHeight) {}

224 
	gwidth
;

225 
	gt›
;

226 
	gheight
;

232 
	g°d
::
	tm≠
<
	tUöt32
, 
	tGlyph
> 
	tGlyphTabÀ
;

238 
	sPage


240 
Page
();

242 
GlyphTabÀ
 
	gglyphs
;

243 
	gsf
::
Textuª
 
ãxtuª
;

244 
	g√xtRow
;

245 
	g°d
::
ve˘‹
<
Row
> 
rows
;

252 
˛ónup
();

264 
Glyph
 
lﬂdGlyph
(
Uöt32
 
codePoöt
, 
ch¨a˘îSize
, 
boﬁ
 
bﬁd
) const;

276 
I¡Re˘
 
födGlyphRe˘
(
Page
& 
∑ge
, 
width
, 
height
) const;

286 
boﬁ
 
£tCuºítSize
(
ch¨a˘îSize
) const;

291 
	g°d
::
	tm≠
<, 
	tPage
> 
	tPageTabÀ
;

296 * 
	gm_libøry
;

297 * 
	gm_Á˚
;

298 * 
	gm_°ªamRec
;

299 * 
	gm_ªfCou¡
;

300 
muèbÀ
 
PageTabÀ
 
	gm_∑ges
;

301 
muèbÀ
 
	g°d
::
ve˘‹
<
Uöt8
> 
m_pixñBuf„r
;

	@/usr/include/SFML/Graphics/Glyph.hpp

25 #i‚de‡
SFML_GLYPH_HPP


26 
	#SFML_GLYPH_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Re˘.hµ
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_GRAPHICS_API
 
	gGlyph


43 
	gpublic
 :

49 
Glyph
(Ë: 
adv™˚
(0) {}

54 
adv™˚
;

55 
I¡Re˘
 
	gbounds
;

56 
I¡Re˘
 
	gãxtuªRe˘
;

	@/usr/include/SFML/Graphics/Image.hpp

25 #i‚de‡
SFML_IMAGE_HPP


26 
	#SFML_IMAGE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Cﬁ‹.hµ
>

33 
	~<SFML/Gøphics/Re˘.hµ
>

34 
	~<°rög
>

35 
	~<ve˘‹
>

38 
«me•a˚
 
	gsf


40 
˛ass
 
	gI≈utSåóm
;

46 ˛as†
	cSFML_GRAPHICS_API
 
	gImage


48 
	gpublic
 :

56 
Image
();

66 
¸óã
(
width
, 
height
, c⁄° 
Cﬁ‹
& 
cﬁ‹
 = Color(0, 0, 0));

81 
¸óã
(
width
, 
height
, c⁄° 
Uöt8
* 
pixñs
);

98 
boﬁ
 
lﬂdFromFûe
(c⁄° 
°d
::
°rög
& 
fûíame
);

116 
boﬁ
 
lﬂdFromMem‹y
(c⁄° * 
d©a
, 
°d
::
size_t
 
size
);

133 
boﬁ
 
lﬂdFromSåóm
(
I≈utSåóm
& 
°ªam
);

150 
boﬁ
 
ßveToFûe
(c⁄° 
°d
::
°rög
& 
fûíame
) const;

158 
Ve˘‹2u
 
gëSize
() const;

171 
¸óãMaskFromCﬁ‹
(c⁄° 
Cﬁ‹
& 
cﬁ‹
, 
Uöt8
 
Æpha
 = 0);

193 
c›y
(c⁄° 
Image
& 
sour˚
, 
de°X
, 
de°Y
, c⁄° 
I¡Re˘
& 
sour˚Re˘
 = I¡Re˘(0, 0, 0, 0), 
boﬁ
 
≠∂yAÕha
 = 
Ál£
);

209 
£tPixñ
(
x
, 
y
, c⁄° 
Cﬁ‹
& 
cﬁ‹
);

226 
Cﬁ‹
 
gëPixñ
(
x
, 
y
) const;

241 c⁄° 
Uöt8
* 
gëPixñsPå
() const;

247 
ÊùH‹iz⁄èŒy
();

253 
ÊùVîtiˇŒy
();

255 
	g¥iv©e
 :

260 
Ve˘‹2u
 
m_size
;

261 
	g°d
::
ve˘‹
<
Uöt8
> 
m_pixñs
;

	@/usr/include/SFML/Graphics/RectangleShape.hpp

25 #i‚de‡
SFML_RECTANGLESHAPE_HPP


26 
	#SFML_RECTANGLESHAPE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Sh≠e.hµ
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_GRAPHICS_API
 
	gRe˘™gÀSh≠e
 : 
public
 
Sh≠e


43 
public
 :

51 
ex∂icô
 
Re˘™gÀSh≠e
(c⁄° 
Ve˘‹2f
& 
size
 = Vector2f(0, 0));

61 
£tSize
(c⁄° 
Ve˘‹2f
& 
size
);

71 c⁄° 
	gVe˘‹2f
& 
gëSize
() const;

79 
vútuÆ
 
gëPoötCou¡
() const;

91 
vútuÆ
 
Ve˘‹2f
 
gëPoöt
(
ödex
) const;

93 
	g¥iv©e
 :

98 
Ve˘‹2f
 
m_size
;

	@/usr/include/SFML/Graphics/RenderStates.hpp

25 #i‚de‡
SFML_RENDERSTATES_HPP


26 
	#SFML_RENDERSTATES_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/BÀndMode.hµ
>

33 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

36 
«me•a˚
 
	gsf


38 
˛ass
 
	gShadî
;

39 
˛ass
 
	gTextuª
;

45 ˛as†
	cSFML_GRAPHICS_API
 
	gRídîSèãs


47 
	gpublic
 :

61 
RídîSèãs
();

69 
RídîSèãs
(
BÀndMode
 
theBÀndMode
);

77 
RídîSèãs
(c⁄° 
Tønsf‹m
& 
theTønsf‹m
);

85 
RídîSèãs
(c⁄° 
Textuª
* 
theTextuª
);

93 
RídîSèãs
(c⁄° 
Shadî
* 
theShadî
);

104 
RídîSèãs
(
BÀndMode
 
theBÀndMode
, c⁄° 
Tønsf‹m
& 
theTønsf‹m
,

105 c⁄° 
Textuª
* 
theTextuª
, c⁄° 
Shadî
* 
theShadî
);

110 c⁄° 
RídîSèãs
 
	gDeÁu…
;

115 
BÀndMode
 
	gbÀndMode
;

116 
Tønsf‹m
 
	gå™sf‹m
;

117 c⁄° 
Textuª
* 
	gãxtuª
;

118 c⁄° 
Shadî
* 
	gshadî
;

	@/usr/include/SFML/Graphics/RenderTexture.hpp

25 #i‚de‡
SFML_RENDERTEXTURE_HPP


26 
	#SFML_RENDERTEXTURE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Textuª.hµ
>

33 
	~<SFML/Gøphics/RídîT¨gë.hµ
>

36 
«me•a˚
 
	gsf


38 
«me•a˚
 
	g¥iv


40 
˛ass
 
	gRídîTextuªIm∂
;

47 ˛as†
	cSFML_GRAPHICS_API
 
	gRídîTextuª
 : 
public
 
RídîT¨gë


49 
public
 :

60 
RídîTextuª
();

66 
	gvútuÆ
 ~
RídîTextuª
();

86 
boﬁ
 
¸óã
(
width
, 
height
, boﬁ 
dïthBuf„r
 = 
Ál£
);

99 
£tSmoŸh
(
boﬁ
 
smoŸh
);

109 
boﬁ
 
isSmoŸh
() const;

126 
boﬁ
 
£tA˘ive
(boﬁ 
a˘ive
 = 
åue
);

137 
di•œy
();

148 
vútuÆ
 
Ve˘‹2u
 
gëSize
() const;

164 c⁄° 
	gTextuª
& 
gëTextuª
() const;

166 
	g¥iv©e
 :

179 
vútuÆ
 
boﬁ
 
a˘iv©e
(boﬁ 
a˘ive
);

184 
	g¥iv
::
RídîTextuªIm∂
* 
m_im∂
;

185 
Textuª
 
	gm_ãxtuª
;

	@/usr/include/SFML/Graphics/RenderWindow.hpp

25 #i‚de‡
SFML_RENDERWINDOW_HPP


26 
	#SFML_RENDERWINDOW_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/RídîT¨gë.hµ
>

33 
	~<SFML/Gøphics/Image.hµ
>

34 
	~<SFML/Wödow/Wödow.hµ
>

35 
	~<°rög
>

38 
«me•a˚
 
	gsf


44 
˛ass
 
SFML_GRAPHICS_API
 
	gRídîWödow
 : 
public
 
Wödow
,Öubli¯
	gRídîT¨gë


46 
	gpublic
 :

55 
RídîWödow
();

76 
RídîWödow
(
VideoMode
 
mode
, c⁄° 
°d
::
°rög
& 
tôÀ
, 
Uöt32
 
°yÀ
 = 
StyÀ
::
DeÁu…
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

93 
ex∂icô
 
RídîWödow
(
WödowH™dÀ
 
h™dÀ
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

101 
	gvútuÆ
 ~
RídîWödow
();

112 
vútuÆ
 
Ve˘‹2u
 
gëSize
() const;

128 
Image
 
ˇ±uª
() const;

130 
	g¥Ÿe˘ed
:

140 
vútuÆ
 
⁄Cª©e
();

149 
vútuÆ
 
⁄Resize
();

151 
	g¥iv©e
 :

161 
vútuÆ
 
boﬁ
 
a˘iv©e
(boﬁ 
a˘ive
);

	@/usr/include/SFML/Graphics/Shader.hpp

25 #i‚de‡
SFML_SHADER_HPP


26 
	#SFML_SHADER_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

33 
	~<SFML/Gøphics/Cﬁ‹.hµ
>

34 
	~<SFML/Wödow/GlResour˚.hµ
>

35 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

36 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

37 
	~<SFML/Sy°em/Ve˘‹3.hµ
>

38 
	~<m≠
>

39 
	~<°rög
>

42 
«me•a˚
 
	gsf


44 
˛ass
 
	gI≈utSåóm
;

45 
˛ass
 
	gTextuª
;

51 
˛ass
 
SFML_GRAPHICS_API
 
	gShadî
 : 
GlResour˚
, 
	gN⁄C›yabÀ


53 
	gpublic
 :

59 
	eTy≥


61 
Vîãx
,

62 
	gFøgmít


70 
	sCuºítTextuªTy≥
 {};

71 
CuºítTextuªTy≥
 
	gCuºítTextuª
;

73 
	gpublic
 :

81 
Shadî
();

87 ~
Shadî
();

108 
boﬁ
 
lﬂdFromFûe
(c⁄° 
°d
::
°rög
& 
fûíame
, 
Ty≥
 
ty≥
);

129 
boﬁ
 
lﬂdFromFûe
(c⁄° 
°d
::
°rög
& 
vîãxShadîFûíame
, c⁄° std::°rög& 
‰agmítShadîFûíame
);

149 
boﬁ
 
lﬂdFromMem‹y
(c⁄° 
°d
::
°rög
& 
shadî
, 
Ty≥
 
ty≥
);

170 
boﬁ
 
lﬂdFromMem‹y
(c⁄° 
°d
::
°rög
& 
vîãxShadî
, c⁄° std::°rög& 
‰agmítShadî
);

190 
boﬁ
 
lﬂdFromSåóm
(
I≈utSåóm
& 
°ªam
, 
Ty≥
 
ty≥
);

211 
boﬁ
 
lﬂdFromSåóm
(
I≈utSåóm
& 
vîãxShadîSåóm
, I≈utSåóm& 
‰agmítShadîSåóm
);

232 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, 
x
);

254 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, 
x
, 
y
);

277 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, 
x
, 
y
, 
z
);

301 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, 
x
, 
y
, 
z
, 
w
);

322 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, c⁄° 
Ve˘‹2f
& 
ve˘‹
);

343 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, c⁄° 
Ve˘‹3f
& 
ve˘‹
);

370 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, c⁄° 
Cﬁ‹
& 
cﬁ‹
);

393 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, c⁄° 
sf
::
Tønsf‹m
& 
å™sf‹m
);

425 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, c⁄° 
Textuª
& 
ãxtuª
);

448 
£tP¨amëî
(c⁄° 
°d
::
°rög
& 
«me
, 
CuºítTextuªTy≥
);

466 
böd
() const;

478 
unböd
() const;

490 
boﬁ
 
isAvaûabÀ
();

492 
	g¥iv©e
 :

506 
boﬁ
 
compûe
(c⁄° * 
vîãxShadîCode
, c⁄° * 
‰agmítShadîCode
);

515 
bödTextuªs
() const;

520 
	g°d
::
	tm≠
<, c⁄° 
	tTextuª
*> 
	tTextuªTabÀ
;

525 
	gm_shadîProgøm
;

526 
	gm_cuºítTextuª
;

527 
TextuªTabÀ
 
	gm_ãxtuªs
;

	@/usr/include/SFML/Graphics/Shape.hpp

25 #i‚de‡
SFML_SHAPE_HPP


26 
	#SFML_SHAPE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/DøwabÀ.hµ
>

33 
	~<SFML/Gøphics/Tønsf‹mabÀ.hµ
>

34 
	~<SFML/Gøphics/VîãxAºay.hµ
>

35 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

38 
«me•a˚
 
	gsf


44 
˛ass
 
SFML_GRAPHICS_API
 
	gSh≠e
 : 
public
 
DøwabÀ
,Öubli¯
	gTønsf‹mabÀ


46 
	gpublic
 :

52 
vútuÆ
 ~
Sh≠e
();

74 
£tTextuª
(c⁄° 
Textuª
* 
ãxtuª
, 
boﬁ
 
ª£tRe˘
 = 
Ál£
);

88 
£tTextuªRe˘
(c⁄° 
I¡Re˘
& 
ª˘
);

105 
£tFûlCﬁ‹
(c⁄° 
Cﬁ‹
& 
cﬁ‹
);

118 
£tOuéöeCﬁ‹
(c⁄° 
Cﬁ‹
& 
cﬁ‹
);

132 
£tOuéöeThick√ss
(
thick√ss
);

146 c⁄° 
Textuª
* 
gëTextuª
() const;

156 c⁄° 
	gI¡Re˘
& 
gëTextuªRe˘
() const;

166 c⁄° 
	gCﬁ‹
& 
gëFûlCﬁ‹
() const;

176 c⁄° 
	gCﬁ‹
& 
gëOuéöeCﬁ‹
() const;

186 
gëOuéöeThick√ss
() const;

196 
vútuÆ
 
gëPoötCou¡
() const = 0;

210 
vútuÆ
 
Ve˘‹2f
 
gëPoöt
(
ödex
) const = 0;

224 
FlﬂtRe˘
 
gëLoˇlBounds
() const;

238 
FlﬂtRe˘
 
gëGlobÆBounds
() const;

240 
	g¥Ÿe˘ed
 :

246 
Sh≠e
();

256 
upd©e
();

258 
	g¥iv©e
 :

267 
vútuÆ
 
døw
(
RídîT¨gë
& 
èrgë
, 
RídîSèãs
 
°©es
) const;

273 
upd©eFûlCﬁ‹s
();

279 
upd©eTexCo‹ds
();

285 
upd©eOuéöe
();

291 
upd©eOuéöeCﬁ‹s
();

293 
	g¥iv©e
 :

298 c⁄° 
Textuª
* 
m_ãxtuª
;

299 
I¡Re˘
 
	gm_ãxtuªRe˘
;

300 
Cﬁ‹
 
	gm_fûlCﬁ‹
;

301 
Cﬁ‹
 
	gm_ouéöeCﬁ‹
;

302 
	gm_ouéöeThick√ss
;

303 
VîãxAºay
 
	gm_vîti˚s
;

304 
VîãxAºay
 
	gm_ouéöeVîti˚s
;

305 
FlﬂtRe˘
 
	gm_ösideBounds
;

306 
FlﬂtRe˘
 
	gm_bounds
;

	@/usr/include/SFML/Graphics/Sprite.hpp

25 #i‚de‡
SFML_SPRITE_HPP


26 
	#SFML_SPRITE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/DøwabÀ.hµ
>

33 
	~<SFML/Gøphics/Tønsf‹mabÀ.hµ
>

34 
	~<SFML/Gøphics/Vîãx.hµ
>

35 
	~<SFML/Gøphics/Re˘.hµ
>

38 
«me•a˚
 
	gsf


40 
˛ass
 
	gTextuª
;

47 
˛ass
 
SFML_GRAPHICS_API
 
	gS¥ôe
 : 
public
 
DøwabÀ
,Öubli¯
	gTønsf‹mabÀ


49 
	gpublic
 :

57 
S¥ôe
();

67 
ex∂icô
 
S¥ôe
(c⁄° 
Textuª
& 
ãxtuª
);

78 
S¥ôe
(c⁄° 
Textuª
& 
ãxtuª
, c⁄° 
I¡Re˘
& 
ª˘™gÀ
);

99 
£tTextuª
(c⁄° 
Textuª
& 
ãxtuª
, 
boﬁ
 
ª£tRe˘
 = 
Ál£
);

113 
£tTextuªRe˘
(c⁄° 
I¡Re˘
& 
ª˘™gÀ
);

128 
£tCﬁ‹
(c⁄° 
Cﬁ‹
& 
cﬁ‹
);

142 c⁄° 
Textuª
* 
gëTextuª
() const;

152 c⁄° 
	gI¡Re˘
& 
gëTextuªRe˘
() const;

162 c⁄° 
	gCﬁ‹
& 
gëCﬁ‹
() const;

176 
FlﬂtRe˘
 
gëLoˇlBounds
() const;

190 
FlﬂtRe˘
 
gëGlobÆBounds
() const;

192 
	g¥iv©e
 :

201 
vútuÆ
 
døw
(
RídîT¨gë
& 
èrgë
, 
RídîSèãs
 
°©es
) const;

207 
upd©ePosôi⁄s
();

213 
upd©eTexCo‹ds
();

218 
Vîãx
 
	gm_vîti˚s
[4];

219 c⁄° 
Textuª
* 
	gm_ãxtuª
;

220 
I¡Re˘
 
	gm_ãxtuªRe˘
;

	@/usr/include/SFML/Graphics/Text.hpp

25 #i‚de‡
SFML_TEXT_HPP


26 
	#SFML_TEXT_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/DøwabÀ.hµ
>

33 
	~<SFML/Gøphics/Tønsf‹mabÀ.hµ
>

34 
	~<SFML/Gøphics/F⁄t.hµ
>

35 
	~<SFML/Gøphics/Re˘.hµ
>

36 
	~<SFML/Gøphics/VîãxAºay.hµ
>

37 
	~<SFML/Sy°em/Såög.hµ
>

38 
	~<°rög
>

39 
	~<ve˘‹
>

42 
«me•a˚
 
	gsf


48 
˛ass
 
SFML_GRAPHICS_API
 
	gText
 : 
public
 
DøwabÀ
,Öubli¯
	gTønsf‹mabÀ


50 
	gpublic
 :

56 
	eStyÀ


58 
Reguœr
 = 0,

59 
	gBﬁd
 = 1 << 0,

60 
	gIèlic
 = 1 << 1,

61 
	gUndîlöed
 = 1 << 2

70 
Text
();

80 
ex∂icô
 
Text
(c⁄° 
Såög
& 
°rög
, c⁄° 
F⁄t
& 
f⁄t
 = F⁄t::
gëDeÁu…F⁄t
(), 
ch¨a˘îSize
 = 30);

101 
£tSåög
(c⁄° 
Såög
& 
°rög
);

120 
£tF⁄t
(c⁄° 
F⁄t
& 
f⁄t
);

132 
£tCh¨a˘îSize
(
size
);

146 
£tStyÀ
(
Uöt32
 
°yÀ
);

158 
£tCﬁ‹
(c⁄° 
Cﬁ‹
& 
cﬁ‹
);

177 c⁄° 
	gSåög
& 
gëSåög
() const;

190 c⁄° 
	gF⁄t
& 
gëF⁄t
() const;

200 
gëCh¨a˘îSize
() const;

210 
Uöt32
 
gëStyÀ
() const;

220 c⁄° 
	gCﬁ‹
& 
gëCﬁ‹
() const;

237 
Ve˘‹2f
 
födCh¨a˘îPos
(
°d
::
size_t
 
ödex
) const;

251 
FlﬂtRe˘
 
gëLoˇlBounds
() const;

265 
FlﬂtRe˘
 
gëGlobÆBounds
() const;

267 
	g¥iv©e
 :

276 
vútuÆ
 
døw
(
RídîT¨gë
& 
èrgë
, 
RídîSèãs
 
°©es
) const;

282 
upd©eGeomëry
();

287 
Såög
 
	gm_°rög
;

288 c⁄° 
F⁄t
* 
	gm_f⁄t
;

289 
	gm_ch¨a˘îSize
;

290 
Uöt32
 
	gm_°yÀ
;

291 
Cﬁ‹
 
	gm_cﬁ‹
;

292 
VîãxAºay
 
	gm_vîti˚s
;

293 
FlﬂtRe˘
 
	gm_bounds
;

	@/usr/include/SFML/Graphics/Texture.hpp

25 #i‚de‡
SFML_TEXTURE_HPP


26 
	#SFML_TEXTURE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Image.hµ
>

33 
	~<SFML/Wödow/GlResour˚.hµ
>

36 
«me•a˚
 
	gsf


38 
˛ass
 
	gWödow
;

39 
˛ass
 
	gRídîT¨gë
;

40 
˛ass
 
	gRídîTextuª
;

41 
˛ass
 
	gI≈utSåóm
;

47 ˛as†
	cSFML_GRAPHICS_API
 
	gTextuª
 : 
GlResour˚


49 
public
 :

55 
	eCo‹dö©eTy≥


57 
N‹mÆized
,

58 
	gPixñs


61 
	gpublic
 :

69 
Textuª
();

77 
Textuª
(c⁄° Textuª& 
c›y
);

83 ~
Textuª
();

96 
boﬁ
 
¸óã
(
width
, 
height
);

127 
boﬁ
 
lﬂdFromFûe
(c⁄° 
°d
::
°rög
& 
fûíame
, c⁄° 
I¡Re˘
& 
¨ó
 = IntRect());

159 
boﬁ
 
lﬂdFromMem‹y
(c⁄° * 
d©a
, 
°d
::
size_t
 
size
, c⁄° 
I¡Re˘
& 
¨ó
 = IntRect());

190 
boﬁ
 
lﬂdFromSåóm
(
sf
::
I≈utSåóm
& 
°ªam
, c⁄° 
I¡Re˘
& 
¨ó
 = IntRect());

214 
boﬁ
 
lﬂdFromImage
(c⁄° 
Image
& 
image
, c⁄° 
I¡Re˘
& 
¨ó
 = IntRect());

222 
Ve˘‹2u
 
gëSize
() const;

237 
Image
 
c›yToImage
() const;

255 
upd©e
(c⁄° 
Uöt8
* 
pixñs
);

277 
upd©e
(c⁄° 
Uöt8
* 
pixñs
, 
width
, 
height
, 
x
, 
y
);

297 
upd©e
(c⁄° 
Image
& 
image
);

314 
upd©e
(c⁄° 
Image
& 
image
, 
x
, 
y
);

334 
upd©e
(c⁄° 
Wödow
& 
wödow
);

351 
upd©e
(c⁄° 
Wödow
& 
wödow
, 
x
, 
y
);

373 
böd
(
Co‹dö©eTy≥
 
co‹dö©eTy≥
 = 
N‹mÆized
) const;

389 
£tSmoŸh
(
boﬁ
 
smoŸh
);

399 
boﬁ
 
isSmoŸh
() const;

423 
£tRïóãd
(
boﬁ
 
ª≥©ed
);

433 
boﬁ
 
isRïóãd
() const;

443 
	gTextuª
& 
	g›î©‹
 =(c⁄° 
Textuª
& 
right
);

455 
gëMaximumSize
();

457 
	g¥iv©e
 :

459 
‰õnd
 
˛ass
 
RídîTextuª
;

460 
‰õnd
 
˛ass
 
	gRídîT¨gë
;

475 
gëVÆidSize
(
size
);

480 
Ve˘‹2u
 
	gm_size
;

481 
Ve˘‹2u
 
	gm_a˘uÆSize
;

482 
	gm_ãxtuª
;

483 
boﬁ
 
	gm_isSmoŸh
;

484 
boﬁ
 
	gm_isRïóãd
;

485 
muèbÀ
 
boﬁ
 
	gm_pixñsFlù≥d
;

486 
Uöt64
 
	gm_ˇcheId
;

	@/usr/include/SFML/Graphics/Transform.hpp

25 #i‚de‡
SFML_TRANSFORM_HPP


26 
	#SFML_TRANSFORM_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Re˘.hµ
>

33 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

36 
«me•a˚
 
	gsf


42 ˛as†
	cSFML_GRAPHICS_API
 
	gTønsf‹m


44 
	gpublic
 :

52 
Tønsf‹m
();

68 
Tønsf‹m
(
a00
, 
a01
, 
a02
,

69 
a10
, 
a11
, 
a12
,

70 
a20
, 
a21
, 
a22
);

87 c⁄° * 
gëM©rix
() const;

98 
Tønsf‹m
 
gëInvî£
() const;

109 
Ve˘‹2f
 
å™sf‹mPoöt
(
x
, 
y
) const;

119 
Ve˘‹2f
 
å™sf‹mPoöt
(c⁄° Ve˘‹2f& 
poöt
) const;

135 
FlﬂtRe˘
 
å™sf‹mRe˘
(c⁄° FlﬂtRe˘& 
ª˘™gÀ
) const;

149 
	gTønsf‹m
& 
comböe
(c⁄° 
Tønsf‹m
& 
å™sf‹m
);

169 
	gTønsf‹m
& 
å™¶©e
(
x
, 
y
);

188 
	gTønsf‹m
& 
å™¶©e
(c⁄° 
Ve˘‹2f
& 
off£t
);

207 
	gTønsf‹m
& 
rŸ©e
(
™gÀ
);

233 
	gTønsf‹m
& 
rŸ©e
(
™gÀ
, 
˚¡îX
, 
˚¡îY
);

258 
	gTønsf‹m
& 
rŸ©e
(
™gÀ
, c⁄° 
Ve˘‹2f
& 
˚¡î
);

278 
	gTønsf‹m
& 
sˇÀ
(
sˇÀX
, 
sˇÀY
);

305 
	gTønsf‹m
& 
sˇÀ
(
sˇÀX
, 
sˇÀY
, 
˚¡îX
, 
˚¡îY
);

324 
	gTønsf‹m
& 
sˇÀ
(c⁄° 
Ve˘‹2f
& 
Á˘‹s
);

349 
	gTønsf‹m
& 
sˇÀ
(c⁄° 
Ve˘‹2f
& 
Á˘‹s
, c⁄° Ve˘‹2f& 
˚¡î
);

354 c⁄° 
Tønsf‹m
 
	gIdítôy
;

356 
	g¥iv©e
:

361 
m_m©rix
[16];

376 
SFML_GRAPHICS_API
 
Tønsf‹m
 
	g›î©‹
 *(c⁄° 
	gTønsf‹m
& 
	gÀ·
, c⁄° Tønsf‹m& 
	gright
);

390 
SFML_GRAPHICS_API
 
	gTønsf‹m
& 
	g›î©‹
 *=(
Tønsf‹m
& 
À·
, c⁄° Tønsf‹m& 
	gright
);

404 
SFML_GRAPHICS_API
 
Ve˘‹2f
 
	g›î©‹
 *(c⁄° 
	gTønsf‹m
& 
	gÀ·
, c⁄° 
	gVe˘‹2f
& 
	gright
);

	@/usr/include/SFML/Graphics/Vertex.hpp

25 #i‚de‡
SFML_VERTEX_HPP


26 
	#SFML_VERTEX_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Cﬁ‹.hµ
>

33 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

36 
«me•a˚
 
	gsf


42 ˛as†
	cSFML_GRAPHICS_API
 
	gVîãx


44 
	gpublic
 :

50 
Vîãx
();

60 
Vîãx
(c⁄° 
Ve˘‹2f
& 
thePosôi⁄
);

71 
Vîãx
(c⁄° 
Ve˘‹2f
& 
thePosôi⁄
, c⁄° 
Cﬁ‹
& 
theCﬁ‹
);

82 
Vîãx
(c⁄° 
Ve˘‹2f
& 
thePosôi⁄
, c⁄° Ve˘‹2f& 
theTexCo‹ds
);

92 
Vîãx
(c⁄° 
Ve˘‹2f
& 
thePosôi⁄
, c⁄° 
Cﬁ‹
& 
theCﬁ‹
, c⁄° Ve˘‹2f& 
theTexCo‹ds
);

97 
Ve˘‹2f
 
	gposôi⁄
;

98 
Cﬁ‹
 
	gcﬁ‹
;

99 
Ve˘‹2f
 
	gãxCo‹ds
;

	@/usr/include/SFML/Graphics/VertexArray.hpp

25 #i‚de‡
SFML_VERTEXARRAY_HPP


26 
	#SFML_VERTEXARRAY_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Vîãx.hµ
>

33 
	~<SFML/Gøphics/PrimôiveTy≥.hµ
>

34 
	~<SFML/Gøphics/Re˘.hµ
>

35 
	~<SFML/Gøphics/DøwabÀ.hµ
>

36 
	~<ve˘‹
>

39 
«me•a˚
 
	gsf


45 ˛as†
	cSFML_GRAPHICS_API
 
	gVîãxAºay
 : 
public
 
DøwabÀ


47 
public
 :

55 
VîãxAºay
();

64 
ex∂icô
 
VîãxAºay
(
PrimôiveTy≥
 
ty≥
, 
vîãxCou¡
 = 0);

72 
gëVîãxCou¡
() const;

88 
	gVîãx
& 
	g›î©‹
 [](
	gödex
);

104 c⁄° 
	gVîãx
& 
	g›î©‹
 [](
	gödex
) const;

115 
˛ór
();

129 
ªsize
(
vîãxCou¡
);

137 
≠≥nd
(c⁄° 
Vîãx
& 
vîãx
);

153 
£tPrimôiveTy≥
(
PrimôiveTy≥
 
ty≥
);

161 
PrimôiveTy≥
 
gëPrimôiveTy≥
() const;

172 
FlﬂtRe˘
 
gëBounds
() const;

174 
	g¥iv©e
 :

183 
vútuÆ
 
døw
(
RídîT¨gë
& 
èrgë
, 
RídîSèãs
 
°©es
) const;

185 
	g¥iv©e
:

190 
°d
::
ve˘‹
<
Vîãx
> 
m_vîti˚s
;

191 
PrimôiveTy≥
 
	gm_¥imôiveTy≥
;

	@/usr/include/SFML/Graphics/View.hpp

25 #i‚de‡
SFML_VIEW_HPP


26 
	#SFML_VIEW_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Re˘.hµ
>

33 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

34 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

37 
«me•a˚
 
	gsf


43 ˛as†
	cSFML_GRAPHICS_API
 
	gVõw


45 
	gpublic
 :

53 
Võw
();

61 
ex∂icô
 
Võw
(c⁄° 
FlﬂtRe˘
& 
ª˘™gÀ
);

70 
Võw
(c⁄° 
Ve˘‹2f
& 
˚¡î
, c⁄° Ve˘‹2f& 
size
);

81 
£tCíãr
(
x
, 
y
);

91 
£tCíãr
(c⁄° 
Ve˘‹2f
& 
˚¡î
);

102 
£tSize
(
width
, 
height
);

112 
£tSize
(c⁄° 
Ve˘‹2f
& 
size
);

124 
£tRŸ©i⁄
(
™gÀ
);

141 
£tVõwp‹t
(c⁄° 
FlﬂtRe˘
& 
võwp‹t
);

153 
ª£t
(c⁄° 
FlﬂtRe˘
& 
ª˘™gÀ
);

163 c⁄° 
	gVe˘‹2f
& 
gëCíãr
() const;

173 c⁄° 
	gVe˘‹2f
& 
gëSize
() const;

183 
gëRŸ©i⁄
() const;

193 c⁄° 
	gFlﬂtRe˘
& 
gëVõwp‹t
() const;

204 
move
(
off£tX
, 
off£tY
);

214 
move
(c⁄° 
Ve˘‹2f
& 
off£t
);

224 
rŸ©e
(
™gÀ
);

241 
zoom
(
Á˘‹
);

253 c⁄° 
	gTønsf‹m
& 
gëTønsf‹m
() const;

265 c⁄° 
	gTønsf‹m
& 
gëInvî£Tønsf‹m
() const;

267 
	g¥iv©e
 :

272 
Ve˘‹2f
 
m_˚¡î
;

273 
Ve˘‹2f
 
	gm_size
;

274 
	gm_rŸ©i⁄
;

275 
FlﬂtRe˘
 
	gm_võwp‹t
;

276 
muèbÀ
 
Tønsf‹m
 
	gm_å™sf‹m
;

277 
muèbÀ
 
Tønsf‹m
 
	gm_övî£Tønsf‹m
;

278 
muèbÀ
 
boﬁ
 
	gm_å™sf‹mUpd©ed
;

279 
muèbÀ
 
boﬁ
 
	gm_övTønsf‹mUpd©ed
;

	@/usr/include/SFML/Window.hpp

25 #i‚de‡
SFML_SFML_WINDOW_HPP


26 
	#SFML_SFML_WINDOW_HPP


	)

32 
	~<SFML/Sy°em.hµ
>

33 
	~<SFML/Wödow/C⁄ãxt.hµ
>

34 
	~<SFML/Wödow/C⁄ãxtSëtögs.hµ
>

35 
	~<SFML/Wödow/Evít.hµ
>

36 
	~<SFML/Wödow/Joy°ick.hµ
>

37 
	~<SFML/Wödow/Keybﬂrd.hµ
>

38 
	~<SFML/Wödow/Mou£.hµ
>

39 
	~<SFML/Wödow/VideoMode.hµ
>

40 
	~<SFML/Wödow/Wödow.hµ
>

41 
	~<SFML/Wödow/WödowStyÀ.hµ
>

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/SFML/Graphics/Drawable.hpp

25 #i‚de‡
SFML_DRAWABLE_HPP


26 
	#SFML_DRAWABLE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/RídîSèãs.hµ
>

35 
«me•a˚
 
	gsf


37 
˛ass
 
	gRídîT¨gë
;

44 ˛as†
	cSFML_GRAPHICS_API
 
	gDøwabÀ


46 
	gpublic
 :

52 
vútuÆ
 ~
DøwabÀ
() {}

54 
¥Ÿe˘ed
 :

56 
‰õnd
 
˛ass
 
RídîT¨gë
;

69 
vútuÆ
 
døw
(
RídîT¨gë
& 
èrgë
, 
RídîSèãs
 
°©es
) const = 0;

	@/usr/include/SFML/Graphics/Export.hpp

25 #i‚de‡
SFML_GRAPHICS_EXPORT_HPP


26 
	#SFML_GRAPHICS_EXPORT_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

37 #i‡
deföed
(
SFML_GRAPHICS_EXPORTS
)

39 
	#SFML_GRAPHICS_API
 
SFML_API_EXPORT


	)

43 
	#SFML_GRAPHICS_API
 
SFML_API_IMPORT


	)

	@/usr/include/SFML/Graphics/PrimitiveType.hpp

25 #i‚de‡
SFML_PRIMITIVETYPE_HPP


26 
	#SFML_PRIMITIVETYPE_HPP


	)

28 
«me•a˚
 
	gsf


39 
	ePrimôiveTy≥


41 
	gPoöts
,

42 
	gLöes
,

43 
	gLöesSåù
,

44 
	gTrüngÀs
,

45 
	gTrüngÀsSåù
,

46 
	gTrüngÀsF™
,

47 
	gQuads


	@/usr/include/SFML/Graphics/Rect.hpp

25 #i‚de‡
SFML_RECT_HPP


26 
	#SFML_RECT_HPP


	)

31 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

32 
	~<Æg‹ôhm
>

35 
«me•a˚
 
	gsf


41 
	gãm∂©e
 <
ty≥«me
 
	gT
>

42 ˛as†
	cRe˘


44 
	gpublic
 :

53 
Re˘
();

67 
Re˘
(
T
 
ª˘Le·
, T 
ª˘T›
, T 
ª˘Width
, T 
ª˘Height
);

79 
Re˘
(c⁄° 
Ve˘‹2
<
T
>& 
posôi⁄
, c⁄° Ve˘‹2<T>& 
size
);

92 
	gãm∂©e
 <
ty≥«me
 
	gU
>

93 
ex∂icô
 
Re˘
(c⁄° Re˘<
U
>& 
ª˘™gÀ
);

106 
boﬁ
 
c⁄èös
(
T
 
x
, T 
y
) const;

118 
boﬁ
 
c⁄èös
(c⁄° 
Ve˘‹2
<
T
>& 
poöt
) const;

130 
boﬁ
 
öãr£˘s
(c⁄° 
Re˘
<
T
>& 
ª˘™gÀ
) const;

146 
boﬁ
 
öãr£˘s
(c⁄° 
Re˘
<
T
>& 
ª˘™gÀ
, Re˘<T>& 
öãr£˘i⁄
) const;

151 
T
 
	gÀ·
;

152 
T
 
	gt›
;

153 
T
 
	gwidth
;

154 
T
 
	gheight
;

169 
	gãm∂©e
 <
ty≥«me
 
	gT
>

170 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Re˘
<
T
>& 
À·
, c⁄° 
	gRe˘
<
	gT
>& 
	gright
);

184 
	gãm∂©e
 <
ty≥«me
 
	gT
>

185 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Re˘
<
T
>& 
À·
, c⁄° 
	gRe˘
<
	gT
>& 
	gright
);

187 
	~<SFML/Gøphics/Re˘.öl
>

190 
	gRe˘
<> 
	tI¡Re˘
;

191 
	gRe˘
<> 
	tFlﬂtRe˘
;

	@/usr/include/SFML/Graphics/RenderTarget.hpp

25 #i‚de‡
SFML_RENDERTARGET_HPP


26 
	#SFML_RENDERTARGET_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Cﬁ‹.hµ
>

33 
	~<SFML/Gøphics/Re˘.hµ
>

34 
	~<SFML/Gøphics/Võw.hµ
>

35 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

36 
	~<SFML/Gøphics/BÀndMode.hµ
>

37 
	~<SFML/Gøphics/RídîSèãs.hµ
>

38 
	~<SFML/Gøphics/PrimôiveTy≥.hµ
>

39 
	~<SFML/Gøphics/Vîãx.hµ
>

40 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

43 
«me•a˚
 
	gsf


45 
˛ass
 
	gDøwabÀ
;

51 ˛as†
	cSFML_GRAPHICS_API
 
	gRídîT¨gë
 : 
N⁄C›yabÀ


53 
public
 :

59 
vútuÆ
 ~
RídîT¨gë
();

70 
˛ór
(c⁄° 
Cﬁ‹
& 
cﬁ‹
 = Color(0, 0, 0, 255));

91 
£tVõw
(c⁄° 
Võw
& 
võw
);

101 c⁄° 
	gVõw
& 
gëVõw
() const;

114 c⁄° 
	gVõw
& 
gëDeÁu…Võw
() const;

129 
I¡Re˘
 
gëVõwp‹t
(c⁄° 
Võw
& 
võw
) const;

152 
Ve˘‹2f
 
c⁄vîtCo‹ds
(c⁄° 
Ve˘‹2i
& 
poöt
) const;

177 
Ve˘‹2f
 
c⁄vîtCo‹ds
(c⁄° 
Ve˘‹2i
& 
poöt
, c⁄° 
Võw
& 
võw
) const;

186 
døw
(c⁄° 
DøwabÀ
& 
døwabÀ
, c⁄° 
RídîSèãs
& 
°©es
 = RídîSèãs::
DeÁu…
);

197 
døw
(c⁄° 
Vîãx
* 
vîti˚s
, 
vîãxCou¡
,

198 
PrimôiveTy≥
 
ty≥
, c⁄° 
RídîSèãs
& 
°©es
 = RídîSèãs::
DeÁu…
);

206 
vútuÆ
 
Ve˘‹2u
 
gëSize
() const = 0;

240 
pushGLSèãs
();

251 
p›GLSèãs
();

274 
ª£tGLSèãs
();

276 
	g¥Ÿe˘ed
 :

282 
RídîT¨gë
();

291 
öôülize
();

297 
≠∂yCuºítVõw
();

305 
≠∂yBÀndMode
(
BÀndMode
 
mode
);

313 
≠∂yTønsf‹m
(c⁄° 
Tønsf‹m
& 
å™sf‹m
);

321 
≠∂yTextuª
(c⁄° 
Textuª
* 
ãxtuª
);

329 
≠∂yShadî
(c⁄° 
Shadî
* 
shadî
);

331 
	g¥iv©e
 :

345 
vútuÆ
 
boﬁ
 
a˘iv©e
(boﬁ 
a˘ive
) = 0;

351 
	sSèãsCache


353 íum {
	gVîãxCacheSize
 = 4};

355 
boﬁ
 
	gglSèãsSë
;

356 
boﬁ
 
	gvõwCh™ged
;

357 
BÀndMode
 
	gœ°BÀndMode
;

358 
Uöt64
 
	gœ°TextuªId
;

359 
boﬁ
 
	gu£VîãxCache
;

360 
Vîãx
 
	gvîãxCache
[
VîãxCacheSize
];

366 
Võw
 
	gm_deÁu…Võw
;

367 
Võw
 
	gm_võw
;

368 
SèãsCache
 
	gm_ˇche
;

	@/usr/include/SFML/Graphics/Transformable.hpp

25 #i‚de‡
SFML_TRANSFORMABLE_HPP


26 
	#SFML_TRANSFORMABLE_HPP


	)

31 
	~<SFML/Gøphics/Exp‹t.hµ
>

32 
	~<SFML/Gøphics/Tønsf‹m.hµ
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_GRAPHICS_API
 
	gTønsf‹mabÀ


43 
	gpublic
 :

49 
Tønsf‹mabÀ
();

55 
	gvútuÆ
 ~
Tønsf‹mabÀ
();

70 
£tPosôi⁄
(
x
, 
y
);

84 
£tPosôi⁄
(c⁄° 
Ve˘‹2f
& 
posôi⁄
);

98 
£tRŸ©i⁄
(
™gÀ
);

113 
£tSˇÀ
(
Á˘‹X
, 
Á˘‹Y
);

127 
£tSˇÀ
(c⁄° 
Ve˘‹2f
& 
Á˘‹s
);

145 
£tOrigö
(
x
, 
y
);

162 
£tOrigö
(c⁄° 
Ve˘‹2f
& 
‹igö
);

172 c⁄° 
	gVe˘‹2f
& 
gëPosôi⁄
() const;

184 
gëRŸ©i⁄
() const;

194 c⁄° 
	gVe˘‹2f
& 
gëSˇÀ
() const;

204 c⁄° 
	gVe˘‹2f
& 
gëOrigö
() const;

223 
move
(
off£tX
, 
off£tY
);

240 
move
(c⁄° 
Ve˘‹2f
& 
off£t
);

255 
rŸ©e
(
™gÀ
);

274 
sˇÀ
(
Á˘‹X
, 
Á˘‹Y
);

292 
sˇÀ
(c⁄° 
Ve˘‹2f
& 
Á˘‹
);

302 c⁄° 
	gTønsf‹m
& 
gëTønsf‹m
() const;

312 c⁄° 
	gTønsf‹m
& 
gëInvî£Tønsf‹m
() const;

314 
	g¥iv©e
 :

319 
Ve˘‹2f
 
m_‹igö
;

320 
Ve˘‹2f
 
	gm_posôi⁄
;

321 
	gm_rŸ©i⁄
;

322 
Ve˘‹2f
 
	gm_sˇÀ
;

323 
muèbÀ
 
Tønsf‹m
 
	gm_å™sf‹m
;

324 
muèbÀ
 
boﬁ
 
	gm_å™sf‹mNìdUpd©e
;

325 
muèbÀ
 
Tønsf‹m
 
	gm_övî£Tønsf‹m
;

326 
muèbÀ
 
boﬁ
 
	gm_övî£Tønsf‹mNìdUpd©e
;

	@/usr/include/SFML/System.hpp

25 #i‚de‡
SFML_SYSTEM_HPP


26 
	#SFML_SYSTEM_HPP


	)

32 
	~<SFML/C⁄fig.hµ
>

33 
	~<SFML/Sy°em/Clock.hµ
>

34 
	~<SFML/Sy°em/Eº.hµ
>

35 
	~<SFML/Sy°em/I≈utSåóm.hµ
>

36 
	~<SFML/Sy°em/Lock.hµ
>

37 
	~<SFML/Sy°em/Muãx.hµ
>

38 
	~<SFML/Sy°em/SÀï.hµ
>

39 
	~<SFML/Sy°em/Såög.hµ
>

40 
	~<SFML/Sy°em/Thªad.hµ
>

41 
	~<SFML/Sy°em/ThªadLoˇl.hµ
>

42 
	~<SFML/Sy°em/ThªadLoˇlPå.hµ
>

43 
	~<SFML/Sy°em/Utf.hµ
>

44 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

45 
	~<SFML/Sy°em/Ve˘‹3.hµ
>

	@/usr/include/SFML/System/NonCopyable.hpp

25 #i‚de‡
SFML_NONCOPYABLE_HPP


26 
	#SFML_NONCOPYABLE_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_SYSTEM_API
 
	gN⁄C›yabÀ


43 
	g¥Ÿe˘ed
 :

53 
N⁄C›yabÀ
() {}

55 
¥iv©e
 :

67 
N⁄C›yabÀ
(const NonCopyable&);

79 
	gN⁄C›yabÀ
& 
	g›î©‹
 =(c⁄° 
N⁄C›yabÀ
&);

	@/usr/include/SFML/System/String.hpp

25 #i‚de‡
SFML_STRING_HPP


26 
	#SFML_STRING_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<loˇÀ
>

33 
	~<°rög
>

36 
«me•a˚
 
	gsf


43 ˛as†
	cSFML_SYSTEM_API
 
	gSåög


45 
	gpublic
 :

50 
°d
::
	tbasic_°rög
<
	tUöt32
>::
	tôî©‹
 
	tIãøt‹
;

51 
	g°d
::
	tbasic_°rög
<
	tUöt32
>::
	tc⁄°_ôî©‹
 
	tC⁄°Iãøt‹
;

56 c⁄° 
	g°d
::
size_t
 
InvÆidPos
;

64 
Såög
();

76 
Såög
(
™siCh¨
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

84 
Såög
(
wch¨_t
 
wideCh¨
);

92 
Såög
(
Uöt32
 
utf32Ch¨
);

104 
Såög
(c⁄° * 
™siSåög
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

116 
Såög
(c⁄° 
°d
::
°rög
& 
™siSåög
, c⁄° std::
loˇÀ
&Üocale = std::locale());

124 
Såög
(c⁄° 
wch¨_t
* 
wideSåög
);

132 
Såög
(c⁄° 
°d
::
w°rög
& 
wideSåög
);

140 
Såög
(c⁄° 
Uöt32
* 
utf32Såög
);

148 
Såög
(c⁄° 
°d
::
basic_°rög
<
Uöt32
>& 
utf32Såög
);

156 
Såög
(c⁄° Såög& 
c›y
);

173 
›î©‹
 
	g°d
::
°rög
() const;

188 
›î©‹
 
	g°d
::
w°rög
() const;

205 
	g°d
::
°rög
 
toAnsiSåög
(c⁄° 
°d
::
loˇÀ
&Üocale = std::locale()) const;

218 
	g°d
::
w°rög
 
toWideSåög
() const;

228 
	gSåög
& 
	g›î©‹
 =(c⁄° 
Såög
& 
right
);

238 
	gSåög
& 
	g›î©‹
 +=(c⁄° 
Såög
& 
right
);

251 
Uöt32
 
	g›î©‹
 [](
	g°d
::
size_t
 
ödex
) const;

264 
	gUöt32
& 
	g›î©‹
 [](
	g°d
::
size_t
 
ödex
);

274 
˛ór
();

284 
	g°d
::
size_t
 
gëSize
() const;

294 
boﬁ
 
isEm±y
() const;

306 
îa£
(
°d
::
size_t
 
posôi⁄
, std::size_à
cou¡
 = 1);

318 
ö£π
(
°d
::
size_t
 
posôi⁄
, c⁄° 
Såög
& 
°r
);

332 
	g°d
::
size_t
 
föd
(c⁄° 
Såög
& 
°r
, 
°d
::size_à
°¨t
 = 0) const;

345 c⁄° 
Uöt32
* 
gëD©a
() const;

355 
Iãøt‹
 
begö
();

365 
C⁄°Iãøt‹
 
begö
() const;

379 
Iãøt‹
 
íd
();

393 
C⁄°Iãøt‹
 
íd
() const;

395 
	g¥iv©e
 :

397 
‰õnd
 
SFML_SYSTEM_API
 
boﬁ
 
›î©‹
 ==(c⁄° 
Såög
& 
À·
, c⁄° 
	gSåög
& 
	gright
);

398 
‰õnd
 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gSåög
& 
	gÀ·
, c⁄° Såög& 
	gright
);

403 
	g°d
::
basic_°rög
<
Uöt32
> 
m_°rög
;

416 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Såög
& 
À·
, c⁄° 
	gSåög
& 
	gright
);

428 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Såög
& 
À·
, c⁄° 
	gSåög
& 
	gright
);

440 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gSåög
& 
	gÀ·
, c⁄° Såög& 
	gright
);

452 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gSåög
& 
	gÀ·
, c⁄° Såög& 
	gright
);

464 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 <=(c⁄° 
Såög
& 
À·
, c⁄° 
	gSåög
& 
	gright
);

476 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 >=(c⁄° 
Såög
& 
À·
, c⁄° 
	gSåög
& 
	gright
);

488 
SFML_SYSTEM_API
 
Såög
 
	g›î©‹
 +(c⁄° 
	gSåög
& 
	gÀ·
, c⁄° Såög& 
	gright
);

	@/usr/include/SFML/System/Vector2.hpp

25 #i‚de‡
SFML_VECTOR2_HPP


26 
	#SFML_VECTOR2_HPP


	)

29 
«me•a˚
 
	gsf


36 
	gãm∂©e
 <
ty≥«me
 
	gT
>

37 ˛as†
	cVe˘‹2


39 
	gpublic
 :

47 
Ve˘‹2
();

56 
Ve˘‹2
(
T
 
X
, T 
Y
);

69 
	gãm∂©e
 <
ty≥«me
 
	gU
>

70 
ex∂icô
 
Ve˘‹2
(c⁄° Ve˘‹2<
U
>& 
ve˘‹
);

75 
T
 
	gx
;

76 
T
 
	gy
;

88 
	gãm∂©e
 <
ty≥«me
 
	gT
>

89 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹2<T>& 
	gright
);

104 
	gãm∂©e
 <
ty≥«me
 
	gT
>

105 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 +=(
Ve˘‹2
<
T
>& 
À·
, c⁄° Ve˘‹2<T>& 
	gright
);

120 
	gãm∂©e
 <
ty≥«me
 
	gT
>

121 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 -=(
Ve˘‹2
<
T
>& 
À·
, c⁄° Ve˘‹2<T>& 
	gright
);

133 
	gãm∂©e
 <
ty≥«me
 
	gT
>

134 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 +(c⁄° Ve˘‹2<T>& 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
);

146 
	gãm∂©e
 <
ty≥«me
 
	gT
>

147 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹2<T>& 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
);

159 
	gãm∂©e
 <
ty≥«me
 
	gT
>

160 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 *(c⁄° Ve˘‹2<T>& 
	gÀ·
, 
T
 
	gright
);

172 
	gãm∂©e
 <
ty≥«me
 
	gT
>

173 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 *(
T
 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
);

188 
	gãm∂©e
 <
ty≥«me
 
	gT
>

189 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 *=(
Ve˘‹2
<
T
>& 
À·
, T 
	gright
);

201 
	gãm∂©e
 <
ty≥«me
 
	gT
>

202 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 /(c⁄° Ve˘‹2<T>& 
	gÀ·
, 
T
 
	gright
);

217 
	gãm∂©e
 <
ty≥«me
 
	gT
>

218 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 /=(
Ve˘‹2
<
T
>& 
À·
, T 
	gright
);

232 
	gãm∂©e
 <
ty≥«me
 
	gT
>

233 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Ve˘‹2
<
T
>& 
À·
, c⁄° 
	gVe˘‹2
<
	gT
>& 
	gright
);

247 
	gãm∂©e
 <
ty≥«me
 
	gT
>

248 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Ve˘‹2
<
T
>& 
À·
, c⁄° 
	gVe˘‹2
<
	gT
>& 
	gright
);

250 
	~<SFML/Sy°em/Ve˘‹2.öl
>

253 
	gVe˘‹2
<> 
	tVe˘‹2i
;

254 
	gVe˘‹2
<> 
	tVe˘‹2u
;

255 
	gVe˘‹2
<> 
	tVe˘‹2f
;

	@/usr/include/SFML/System/Vector3.hpp

25 #i‚de‡
SFML_VECTOR3_HPP


26 
	#SFML_VECTOR3_HPP


	)

29 
«me•a˚
 
	gsf


36 
	gãm∂©e
 <
ty≥«me
 
	gT
>

37 ˛as†
	cVe˘‹3


39 
	gpublic
 :

47 
Ve˘‹3
();

57 
Ve˘‹3
(
T
 
X
, T 
Y
, T 
Z
);

70 
	gãm∂©e
 <
ty≥«me
 
	gU
>

71 
ex∂icô
 
Ve˘‹3
(c⁄° Ve˘‹3<
U
>& 
ve˘‹
);

76 
T
 
	gx
;

77 
T
 
	gy
;

78 
T
 
	gz
;

90 
	gãm∂©e
 <
ty≥«me
 
	gT
>

91 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹3<T>& 
	gÀ·
);

106 
	gãm∂©e
 <
ty≥«me
 
	gT
>

107 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 +=(
Ve˘‹3
<
T
>& 
À·
, c⁄° Ve˘‹3<T>& 
	gright
);

122 
	gãm∂©e
 <
ty≥«me
 
	gT
>

123 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 -=(
Ve˘‹3
<
T
>& 
À·
, c⁄° Ve˘‹3<T>& 
	gright
);

135 
	gãm∂©e
 <
ty≥«me
 
	gT
>

136 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 +(c⁄° Ve˘‹3<T>& 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
);

148 
	gãm∂©e
 <
ty≥«me
 
	gT
>

149 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹3<T>& 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
);

161 
	gãm∂©e
 <
ty≥«me
 
	gT
>

162 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 *(c⁄° Ve˘‹3<T>& 
	gÀ·
, 
T
 
	gright
);

174 
	gãm∂©e
 <
ty≥«me
 
	gT
>

175 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 *(
T
 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
);

190 
	gãm∂©e
 <
ty≥«me
 
	gT
>

191 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 *=(
Ve˘‹3
<
T
>& 
À·
, T 
	gright
);

203 
	gãm∂©e
 <
ty≥«me
 
	gT
>

204 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 /(c⁄° Ve˘‹3<T>& 
	gÀ·
, 
T
 
	gright
);

219 
	gãm∂©e
 <
ty≥«me
 
	gT
>

220 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 /=(
Ve˘‹3
<
T
>& 
À·
, T 
	gright
);

234 
	gãm∂©e
 <
ty≥«me
 
	gT
>

235 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Ve˘‹3
<
T
>& 
À·
, c⁄° 
	gVe˘‹3
<
	gT
>& 
	gright
);

249 
	gãm∂©e
 <
ty≥«me
 
	gT
>

250 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Ve˘‹3
<
T
>& 
À·
, c⁄° 
	gVe˘‹3
<
	gT
>& 
	gright
);

252 
	~<SFML/Sy°em/Ve˘‹3.öl
>

255 
	gVe˘‹3
<> 
	tVe˘‹3i
;

256 
	gVe˘‹3
<> 
	tVe˘‹3f
;

	@/usr/include/SFML/Window/Context.hpp

25 #i‚de‡
SFML_CONTEXT_HPP


26 
	#SFML_CONTEXT_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

32 
	~<SFML/Wödow/GlResour˚.hµ
>

33 
	~<SFML/Wödow/C⁄ãxtSëtögs.hµ
>

34 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

37 
«me•a˚
 
	gsf


39 
«me•a˚
 
	g¥iv


41 
˛ass
 
	gGlC⁄ãxt
;

48 
˛ass
 
SFML_WINDOW_API
 
	gC⁄ãxt
 : 
GlResour˚
, 
	gN⁄C›yabÀ


50 
	gpublic
 :

58 
C⁄ãxt
();

66 ~
C⁄ãxt
();

76 
boﬁ
 
£tA˘ive
(boﬁ 
a˘ive
);

78 
	gpublic
 :

91 
C⁄ãxt
(c⁄° 
C⁄ãxtSëtögs
& 
£âögs
, 
width
, 
height
);

93 
	g¥iv©e
 :

98 
¥iv
::
GlC⁄ãxt
* 
m_c⁄ãxt
;

	@/usr/include/SFML/Window/ContextSettings.hpp

25 #i‚de‡
SFML_CONTEXTSETTINGS_HPP


26 
	#SFML_CONTEXTSETTINGS_HPP


	)

29 
«me•a˚
 
	gsf


36 
	sC⁄ãxtSëtögs


48 
ex∂icô
 
C⁄ãxtSëtögs
(
dïth
 = 0, 
°ícû
 = 0, 
™tülüsög
 = 0, 
maj‹
 = 2, 
mö‹
 = 0) :

49 
dïthBôs
 (
dïth
),

50 
°ícûBôs
 (
°ícû
),

51 
™tülüsögLevñ
(
™tülüsög
),

52 
maj‹Vîsi⁄
 (
maj‹
),

53 
mö‹Vîsi⁄
 (
mö‹
)

60 
	gdïthBôs
;

61 
	g°ícûBôs
;

62 
	g™tülüsögLevñ
;

63 
	gmaj‹Vîsi⁄
;

64 
	gmö‹Vîsi⁄
;

	@/usr/include/SFML/Window/Event.hpp

25 #i‚de‡
SFML_EVENT_HPP


26 
	#SFML_EVENT_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

32 
	~<SFML/Wödow/Joy°ick.hµ
>

33 
	~<SFML/Wödow/Keybﬂrd.hµ
>

34 
	~<SFML/Wödow/Mou£.hµ
>

37 
«me•a˚
 
	gsf


43 ˛as†
	cEvít


45 
	gpublic
 :

51 
	sSizeEvít


53 
width
;

54 
	gheight
;

61 
	sKeyEvít


63 
	gKeybﬂrd
::
Key
 
code
;

64 
boﬁ
 
	gÆt
;

65 
boﬁ
 
	gc⁄åﬁ
;

66 
boﬁ
 
	gshi·
;

67 
boﬁ
 
	gsy°em
;

74 
	sTextEvít


76 
Uöt32
 
	gunicode
;

83 
	sMou£MoveEvít


85 
	gx
;

86 
	gy
;

94 
	sMou£Buâ⁄Evít


96 
	gMou£
::
Buâ⁄
 
buâ⁄
;

97 
	gx
;

98 
	gy
;

105 
	sMou£WhìlEvít


107 
	gdñè
;

108 
	gx
;

109 
	gy
;

117 
	sJoy°ickC⁄√˘Evít


119 
	gjoy°ickId
;

126 
	sJoy°ickMoveEvít


128 
	gjoy°ickId
;

129 
	gJoy°ick
::
Axis
 
axis
;

130 
	gposôi⁄
;

138 
	sJoy°ickBuâ⁄Evít


140 
	gjoy°ickId
;

141 
	gbuâ⁄
;

148 
	eEvítTy≥


150 
	gClo£d
,

151 
	gResized
,

152 
	gLo°Focus
,

153 
	gGaöedFocus
,

154 
	gTextE¡îed
,

155 
	gKeyPªs£d
,

156 
	gKeyRñó£d
,

157 
	gMou£WhìlMoved
,

158 
	gMou£Buâ⁄Pªs£d
,

159 
	gMou£Buâ⁄Rñó£d
,

160 
	gMou£Moved
,

161 
	gMou£E¡îed
,

162 
	gMou£Le·
,

163 
	gJoy°ickBuâ⁄Pªs£d
,

164 
	gJoy°ickBuâ⁄Rñó£d
,

165 
	gJoy°ickMoved
,

166 
	gJoy°ickC⁄√˘ed
,

167 
	gJoy°ickDisc⁄√˘ed
,

169 
	gCou¡


175 
EvítTy≥
 
	gty≥
;

179 
SizeEvít
 
	gsize
;

180 
KeyEvít
 
	gkey
;

181 
TextEvít
 
	gãxt
;

182 
Mou£MoveEvít
 
	gmou£Move
;

183 
Mou£Buâ⁄Evít
 
	gmou£Buâ⁄
;

184 
Mou£WhìlEvít
 
	gmou£Whìl
;

185 
Joy°ickMoveEvít
 
	gjoy°ickMove
;

186 
Joy°ickBuâ⁄Evít
 
	gjoy°ickBuâ⁄
;

187 
Joy°ickC⁄√˘Evít
 
	gjoy°ickC⁄√˘
;

	@/usr/include/SFML/Window/GlResource.hpp

25 #i‚de‡
SFML_GLRESOURCE_HPP


26 
	#SFML_GLRESOURCE_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cSFML_WINDOW_API
 
	gGlResour˚


42 
	g¥Ÿe˘ed
 :

48 
GlResour˚
();

54 ~
GlResour˚
();

60 
ísuªGlC⁄ãxt
();

	@/usr/include/SFML/Window/Joystick.hpp

25 #i‚de‡
SFML_JOYSTICK_HPP


26 
	#SFML_JOYSTICK_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cSFML_WINDOW_API
 
	gJoy°ick


42 
	gpublic
 :

50 
Cou¡
 = 8,

51 
	gBuâ⁄Cou¡
 = 32,

52 
	gAxisCou¡
 = 8

59 
	eAxis


61 
	gX
,

62 
	gY
,

63 
	gZ
,

64 
	gR
,

65 
	gU
,

66 
	gV
,

67 
	gPovX
,

68 
	gPovY


79 
boﬁ
 
isC⁄√˘ed
(
joy°ick
);

91 
gëBuâ⁄Cou¡
(
joy°ick
);

104 
boﬁ
 
hasAxis
(
joy°ick
, 
Axis
 
axis
);

117 
boﬁ
 
isBuâ⁄Pªs£d
(
joy°ick
, 
buâ⁄
);

130 
gëAxisPosôi⁄
(
joy°ick
, 
Axis
 
axis
);

141 
upd©e
();

	@/usr/include/SFML/Window/Keyboard.hpp

25 #i‚de‡
SFML_KEYBOARD_HPP


26 
	#SFML_KEYBOARD_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cSFML_WINDOW_API
 
	gKeybﬂrd


42 
	gpublic
 :

48 
	eKey


50 
A
,

51 
	gB
,

52 
	gC
,

53 
	gD
,

54 
	gE
,

55 
	gF
,

56 
	gG
,

57 
	gH
,

58 
	gI
,

59 
	gJ
,

60 
	gK
,

61 
	gL
,

62 
	gM
,

63 
	gN
,

64 
	gO
,

65 
	gP
,

66 
	gQ
,

67 
	gR
,

68 
	gS
,

69 
	gT
,

70 
	gU
,

71 
	gV
,

72 
	gW
,

73 
	gX
,

74 
	gY
,

75 
	gZ
,

76 
	gNum0
,

77 
	gNum1
,

78 
	gNum2
,

79 
	gNum3
,

80 
	gNum4
,

81 
	gNum5
,

82 
	gNum6
,

83 
	gNum7
,

84 
	gNum8
,

85 
	gNum9
,

86 
	gEsˇ≥
,

87 
	gLC⁄åﬁ
,

88 
	gLShi·
,

89 
	gLA…
,

90 
	gLSy°em
,

91 
	gRC⁄åﬁ
,

92 
	gRShi·
,

93 
	gRA…
,

94 
	gRSy°em
,

95 
	gMíu
,

96 
	gLBøckë
,

97 
	gRBøckë
,

98 
	gSemiCﬁ⁄
,

99 
	gComma
,

100 
	gPîiod
,

101 
	gQuŸe
,

102 
	gSœsh
,

103 
	gBackSœsh
,

104 
	gTûde
,

105 
	gEquÆ
,

106 
	gDash
,

107 
	gS∑˚
,

108 
	gRëu∫
,

109 
	gBack
,

110 
	gTab
,

111 
	gPageUp
,

112 
	gPageDown
,

113 
	gEnd
,

114 
	gHome
,

115 
	gIn£π
,

116 
	gDñëe
,

117 
	gAdd
,

118 
	gSubåa˘
,

119 
	gMu…ùly
,

120 
	gDivide
,

121 
	gLe·
,

122 
	gRight
,

123 
	gUp
,

124 
	gDown
,

125 
	gNum∑d0
,

126 
	gNum∑d1
,

127 
	gNum∑d2
,

128 
	gNum∑d3
,

129 
	gNum∑d4
,

130 
	gNum∑d5
,

131 
	gNum∑d6
,

132 
	gNum∑d7
,

133 
	gNum∑d8
,

134 
	gNum∑d9
,

135 
	gF1
,

136 
	gF2
,

137 
	gF3
,

138 
	gF4
,

139 
	gF5
,

140 
	gF6
,

141 
	gF7
,

142 
	gF8
,

143 
	gF9
,

144 
	gF10
,

145 
	gF11
,

146 
	gF12
,

147 
	gF13
,

148 
	gF14
,

149 
	gF15
,

150 
	gPau£
,

152 
	gKeyCou¡


163 
boﬁ
 
isKeyPªs£d
(
Key
 
key
);

	@/usr/include/SFML/Window/Mouse.hpp

25 #i‚de‡
SFML_MOUSE_HPP


26 
	#SFML_MOUSE_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

35 
«me•a˚
 
	gsf


37 
˛ass
 
	gWödow
;

43 ˛as†
	cSFML_WINDOW_API
 
	gMou£


45 
	gpublic
 :

51 
	eBuâ⁄


53 
Le·
,

54 
	gRight
,

55 
	gMiddÀ
,

56 
	gXBuâ⁄1
,

57 
	gXBuâ⁄2
,

59 
	gBuâ⁄Cou¡


70 
boﬁ
 
isBuâ⁄Pªs£d
(
Buâ⁄
 
buâ⁄
);

81 
Ve˘‹2i
 
gëPosôi⁄
();

94 
Ve˘‹2i
 
gëPosôi⁄
(c⁄° 
Wödow
& 
ªœtiveTo
);

105 
£tPosôi⁄
(c⁄° 
Ve˘‹2i
& 
posôi⁄
);

117 
£tPosôi⁄
(c⁄° 
Ve˘‹2i
& 
posôi⁄
, c⁄° 
Wödow
& 
ªœtiveTo
);

	@/usr/include/SFML/Window/VideoMode.hpp

25 #i‚de‡
SFML_VIDEOMODE_HPP


26 
	#SFML_VIDEOMODE_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

32 
	~<ve˘‹
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_WINDOW_API
 
	gVideoMode


43 
	gpublic
 :

51 
VideoMode
();

61 
VideoMode
(
modeWidth
, 
modeHeight
, 
modeBôsPîPixñ
 = 32);

69 
VideoMode
 
gëDeskt›Mode
();

85 c⁄° 
	g°d
::
ve˘‹
<
VideoMode
>& 
gëFuŒs¸ìnModes
();

97 
boﬁ
 
isVÆid
() const;

102 
	gwidth
;

103 
	gheight
;

104 
	gbôsPîPixñ
;

117 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
VideoMode
& 
À·
, c⁄° 
	gVideoMode
& 
	gright
);

129 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
VideoMode
& 
À·
, c⁄° 
	gVideoMode
& 
	gright
);

141 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gVideoMode
& 
	gÀ·
, c⁄° VideoMode& 
	gright
);

153 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gVideoMode
& 
	gÀ·
, c⁄° VideoMode& 
	gright
);

165 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 <=(c⁄° 
VideoMode
& 
À·
, c⁄° 
	gVideoMode
& 
	gright
);

177 
SFML_WINDOW_API
 
boﬁ
 
	g›î©‹
 >=(c⁄° 
VideoMode
& 
À·
, c⁄° 
	gVideoMode
& 
	gright
);

	@/usr/include/SFML/Window/Window.hpp

25 #i‚de‡
SFML_WINDOW_HPP


26 
	#SFML_WINDOW_HPP


	)

31 
	~<SFML/Wödow/Exp‹t.hµ
>

32 
	~<SFML/Wödow/C⁄ãxtSëtögs.hµ
>

33 
	~<SFML/Wödow/VideoMode.hµ
>

34 
	~<SFML/Wödow/WödowH™dÀ.hµ
>

35 
	~<SFML/Wödow/WödowStyÀ.hµ
>

36 
	~<SFML/Wödow/GlResour˚.hµ
>

37 
	~<SFML/Sy°em/Clock.hµ
>

38 
	~<SFML/Sy°em/Ve˘‹2.hµ
>

39 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

40 
	~<°rög
>

43 
«me•a˚
 
	gsf


45 
«me•a˚
 
	g¥iv


47 
˛ass
 
	gGlC⁄ãxt
;

48 
˛ass
 
	gWödowIm∂
;

51 
˛ass
 
	gEvít
;

57 
˛ass
 
SFML_WINDOW_API
 
	gWödow
 : 
GlResour˚
, 
	gN⁄C›yabÀ


59 
	gpublic
 :

68 
Wödow
();

89 
Wödow
(
VideoMode
 
mode
, c⁄° 
°d
::
°rög
& 
tôÀ
, 
Uöt32
 
°yÀ
 = 
StyÀ
::
DeÁu…
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

105 
ex∂icô
 
Wödow
(
WödowH™dÀ
 
h™dÀ
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

113 
	gvútuÆ
 ~
Wödow
();

128 
¸óã
(
VideoMode
 
mode
, c⁄° 
°d
::
°rög
& 
tôÀ
, 
Uöt32
 
°yÀ
 = 
StyÀ
::
DeÁu…
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

141 
¸óã
(
WödowH™dÀ
 
h™dÀ
, c⁄° 
C⁄ãxtSëtögs
& 
£âögs
 = ContextSettings());

153 
˛o£
();

165 
boﬁ
 
isO≥n
() const;

178 c⁄° 
	gC⁄ãxtSëtögs
& 
gëSëtögs
() const;

203 
boﬁ
 
pﬁlEvít
(
Evít
& 
evít
);

230 
boﬁ
 
waôEvít
(
Evít
& 
evít
);

240 
Ve˘‹2i
 
gëPosôi⁄
() const;

254 
£tPosôi⁄
(c⁄° 
Ve˘‹2i
& 
posôi⁄
);

267 
Ve˘‹2u
 
gëSize
() const;

277 
£tSize
(c⁄° 
Ve˘‹2u
 
size
);

287 
£tTôÀ
(c⁄° 
°d
::
°rög
& 
tôÀ
);

304 
£tIc⁄
(
width
, 
height
, c⁄° 
Uöt8
* 
pixñs
);

314 
£tVisibÀ
(
boﬁ
 
visibÀ
);

329 
£tVîtiˇlSyncE«bÀd
(
boﬁ
 
íabÀd
);

339 
£tMou£Curs‹VisibÀ
(
boﬁ
 
visibÀ
);

353 
£tKeyRïótE«bÀd
(
boﬁ
 
íabÀd
);

370 
£tFømî©eLimô
(
limô
);

383 
£tJoy°ickThªshﬁd
(
thªshﬁd
);

400 
boﬁ
 
£tA˘ive
(boﬁ 
a˘ive
 = 
åue
) const;

410 
di•œy
();

424 
WödowH™dÀ
 
gëSy°emH™dÀ
() const;

426 
	g¥Ÿe˘ed
 :

436 
vútuÆ
 
⁄Cª©e
();

445 
vútuÆ
 
⁄Resize
();

447 
	g¥iv©e
:

461 
boﬁ
 
fûãrEvít
(c⁄° 
Evít
& 
evít
);

467 
öôülize
();

472 
	g¥iv
::
WödowIm∂
* 
m_im∂
;

473 
	g¥iv
::
GlC⁄ãxt
* 
m_c⁄ãxt
;

474 
Clock
 
	gm_˛ock
;

475 
Time
 
	gm_‰ameTimeLimô
;

	@/usr/include/SFML/Window/WindowStyle.hpp

25 #i‚de‡
SFML_WINDOWSTYLE_HPP


26 
	#SFML_WINDOWSTYLE_HPP


	)

29 
«me•a˚
 
	gsf


31 
«me•a˚
 
	gStyÀ


40 
	gN⁄e
 = 0,

41 
	gTôÀb¨
 = 1 << 0,

42 
	gResize
 = 1 << 1,

43 
	gClo£
 = 1 << 2,

44 
	gFuŒs¸ìn
 = 1 << 3,

46 
	gDeÁu…
 = 
TôÀb¨
 | 
Resize
 | 
Clo£


	@/usr/include/SFML/Config.hpp

25 #i‚de‡
SFML_CONFIG_HPP


26 
	#SFML_CONFIG_HPP


	)

32 
	#SFML_VERSION_MAJOR
 2

	)

33 
	#SFML_VERSION_MINOR
 0

	)

39 #i‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
)

42 
	#SFML_SYSTEM_WINDOWS


	)

43 #i‚de‡
NOMINMAX


44 
	#NOMINMAX


	)

47 #ñi‡
deföed
(
löux
Ë|| deföed(
__löux
)

50 
	#SFML_SYSTEM_LINUX


	)

52 #ñi‡
deföed
(
__APPLE__
Ë|| deföed(
MACOSX
Ë|| deföed(
macötosh
Ë|| deföed(
Macötosh
)

55 
	#SFML_SYSTEM_MACOS


	)

57 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD_kî√l__
)

60 
	#SFML_SYSTEM_FREEBSD


	)

65 #îr‹ 
This
 
›î©ög
 
sy°em
 
is
 
nŸ
 
suµ‹ãd
 
by
 
SFML
 
libøry


73 #i‡
deföed
(
__m68k__
Ë|| deföed(
mc68000
Ë|| deföed(
_M_M68K
Ë|| (deföed(
__MIPS__
Ë&& deföed(
__MISPEB__
)) || \

74 
deföed
(
__µc__
Ë|| deföed(
__POWERPC__
Ë|| deföed(
_M_PPC
Ë|| deföed(
__•¨c__
Ë|| 
	$deföed
(
__hµa__
)

77 
	#SFML_ENDIAN_BIG


	)

82 
	#SFML_ENDIAN_LITTLE


	)

90 #i‡!
	`deföed
(
NDEBUG
)

92 
	#SFML_DEBUG


	)

100 #i‡!
	`deföed
(
SFML_STATIC
)

102 #i‡
	`deföed
(
SFML_SYSTEM_WINDOWS
)

105 
	#SFML_API_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

106 
	#SFML_API_IMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

109 #ifde‡
_MSC_VER


111 #¥agm®
	`w¨nög
(
dißbÀ
 : 4251)

117 #i‡
__GNUC__
 >= 4

121 
	#SFML_API_EXPORT
 
	`__©åibuã__
 ((
	`__visibûôy__
 ("deÁu…")))

	)

122 
	#SFML_API_IMPORT
 
	`__©åibuã__
 ((
	`__visibûôy__
 ("deÁu…")))

	)

127 
	#SFML_API_EXPORT


	)

128 
	#SFML_API_IMPORT


	)

137 
	#SFML_API_EXPORT


	)

138 
	#SFML_API_IMPORT


	)

146 
«me•a˚
 
sf


153 sig√d 
	tI¡8
;

154 
	tUöt8
;

157 sig√d 
	tI¡16
;

158 
	tUöt16
;

161 sig√d 
	tI¡32
;

162 
	tUöt32
;

165 #i‡
	`deföed
(
_MSC_VER
)

166 sig√d 
	t__öt64
 
	tI¡64
;

167 
	t__öt64
 
	tUöt64
;

169 sig√d 
	tI¡64
;

170 
	tUöt64
;

173 
	}
}

	@/usr/include/SFML/Graphics/Rect.inl

27 
	gãm∂©e
 <
ty≥«me
 
	gT
>

28 
	gRe˘
<
	gT
>::
	$Re˘
() :

29 
	`À·
 (0),

30 
	`t›
 (0),

31 
	`width
 (0),

32 
	$height
(0)

35 
	}
}

39 
	gãm∂©e
 <
ty≥«me
 
	gT
>

40 
	gRe˘
<
	gT
>::
	$Re˘
(
T
 
ª˘Le·
, T 
ª˘T›
, T 
ª˘Width
, T 
ª˘Height
) :

41 
	`À·
 (
ª˘Le·
),

42 
	`t›
 (
ª˘T›
),

43 
	`width
 (
ª˘Width
),

44 
	$height
(
ª˘Height
)

47 
	}
}

51 
	gãm∂©e
 <
ty≥«me
 
	gT
>

52 
	gRe˘
<
	gT
>::
Re˘
(c⁄° 
Ve˘‹2
<
T
>& 
posôi⁄
, c⁄° Ve˘‹2<T>& 
size
) :

53 
À·
 (
posôi⁄
.
x
),

54 
t›
 (
posôi⁄
.
y
),

55 
width
 (
size
.
x
),

56 
	$height
(
size
.
y
)

59 
	}
}

63 
	gãm∂©e
 <
ty≥«me
 
	gT
>

64 
	gãm∂©e
 <
ty≥«me
 
	gU
>

65 
	gRe˘
<
	gT
>::
Re˘
(c⁄° Re˘<
U
>& 
ª˘™gÀ
) :

66 
À·
 (
°©ic_ˇ°
<
T
>(
ª˘™gÀ
.left)),

67 
t›
 (
°©ic_ˇ°
<
T
>(
ª˘™gÀ
.top)),

68 
width
 (
°©ic_ˇ°
<
T
>(
ª˘™gÀ
.width)),

69 
height
(
°©ic_ˇ°
<
T
>(
ª˘™gÀ
.height))

75 
	gãm∂©e
 <
ty≥«me
 
	gT
>

76 
boﬁ
 
	gRe˘
<
	gT
>::
	$c⁄èös
(
T
 
x
, T 
y
) const

78  (
x
 >
À·
Ë&& (x <Üe· + 
width
Ë&& (
y
 >
t›
Ë&& (y <Å› + 
height
);

79 
	}
}

83 
	gãm∂©e
 <
ty≥«me
 
	gT
>

84 
boﬁ
 
	gRe˘
<
	gT
>::
c⁄èös
(c⁄° 
Ve˘‹2
<
T
>& 
poöt
) const

86  
c⁄èös
(
poöt
.
x
,Öoöt.
y
);

91 
	gãm∂©e
 <
ty≥«me
 
	gT
>

92 
boﬁ
 
	gRe˘
<
	gT
>::
öãr£˘s
(c⁄° 
Re˘
<
T
>& 
ª˘™gÀ
) const

94 
Re˘
<
T
> 
öãr£˘i⁄
;

95  
öãr£˘s
(
ª˘™gÀ
, 
öãr£˘i⁄
);

100 
	gãm∂©e
 <
ty≥«me
 
	gT
>

101 
boﬁ
 
	gRe˘
<
	gT
>::
öãr£˘s
(c⁄° 
Re˘
<
T
>& 
ª˘™gÀ
, Re˘<T>& 
öãr£˘i⁄
) const

104 
T
 
	göãrLe·
 = 
°d
::
max
(
À·
, 
ª˘™gÀ
.left);

105 
T
 
	göãrT›
 = 
°d
::
max
(
t›
, 
ª˘™gÀ
.top);

106 
T
 
	göãrRight
 = 
°d
::
mö
(
À·
 + 
width
, 
ª˘™gÀ
.left +Ñectangle.width);

107 
T
 
	göãrBŸtom
 = 
°d
::
mö
(
t›
 + 
height
, 
ª˘™gÀ
.top +Ñectangle.height);

110 i‡((
	göãrLe·
 < 
	göãrRight
Ë&& (
	göãrT›
 < 
	göãrBŸtom
))

112 
	göãr£˘i⁄
 = 
Re˘
<
T
>(
öãrLe·
, 
	göãrT›
, 
	göãrRight
 - 
	göãrLe·
, 
	göãrBŸtom
 - interTop);

113  
	gåue
;

117 
	göãr£˘i⁄
 = 
Re˘
<
T
>(0, 0, 0, 0);

118  
	gÁl£
;

124 
	gãm∂©e
 <
ty≥«me
 
	gT
>

125 
ölöe
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Re˘
<
T
>& 
À·
, c⁄° 
	gRe˘
<
	gT
>& 
	gright
)

127  (
	gÀ·
.À· =
right
.
À·
Ë&& (À·.
width
 ==Ñight.width) &&

128 (
À·
.
t›
 =
right
.t›Ë&& (À·.
height
 ==Ñight.height);

133 
	gãm∂©e
 <
ty≥«me
 
	gT
>

134 
ölöe
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Re˘
<
T
>& 
À·
, c⁄° 
	gRe˘
<
	gT
>& 
	gright
)

136  !(
	gÀ·
 =
right
);

	@/usr/include/SFML/System/Clock.hpp

25 #i‚de‡
SFML_CLOCK_HPP


26 
	#SFML_CLOCK_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/Time.hµ
>

35 
«me•a˚
 
	gsf


41 ˛as†
	cSFML_SYSTEM_API
 
	gClock


43 
	gpublic
 :

51 
Clock
();

63 
Time
 
gëEœp£dTime
() const;

74 
Time
 
ª°¨t
();

76 
	g¥iv©e
 :

81 
Time
 
m_°¨tTime
;

	@/usr/include/SFML/System/Err.hpp

25 #i‚de‡
SFML_ERR_HPP


26 
	#SFML_ERR_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<o°ªam
>

35 
«me•a˚
 
	gsf


41 
SFML_SYSTEM_API
 
	g°d
::
o°ªam
& 
îr
();

	@/usr/include/SFML/System/Export.hpp

25 #i‚de‡
SFML_SYSTEM_EXPORT_HPP


26 
	#SFML_SYSTEM_EXPORT_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

37 #i‡
deföed
(
SFML_SYSTEM_EXPORTS
)

39 
	#SFML_SYSTEM_API
 
SFML_API_EXPORT


	)

43 
	#SFML_SYSTEM_API
 
SFML_API_IMPORT


	)

	@/usr/include/SFML/System/InputStream.hpp

25 #i‚de‡
SFML_INPUTSTREAM_HPP


26 
	#SFML_INPUTSTREAM_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cI≈utSåóm


42 
	gpublic
 :

48 
vútuÆ
 ~
I≈utSåóm
() {}

59 
vútuÆ
 
I¡64
 
ªad
(* 
d©a
, I¡64 
size
) = 0;

69 
vútuÆ
 
I¡64
 
£ek
(I¡64 
posôi⁄
) = 0;

77 
vútuÆ
 
I¡64
 
ãŒ
() = 0;

85 
vútuÆ
 
I¡64
 
gëSize
() = 0;

	@/usr/include/SFML/System/Lock.hpp

25 #i‚de‡
SFML_LOCK_HPP


26 
	#SFML_LOCK_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

35 
«me•a˚
 
	gsf


37 
˛ass
 
	gMuãx
;

43 ˛as†
	cSFML_SYSTEM_API
 
	gLock
 : 
N⁄C›yabÀ


45 
public
 :

55 
ex∂icô
 
Lock
(
Muãx
& 
muãx
);

63 ~
Lock
();

65 
	g¥iv©e
 :

70 
Muãx
& 
m_muãx
;

	@/usr/include/SFML/System/Mutex.hpp

25 #i‚de‡
SFML_MUTEX_HPP


26 
	#SFML_MUTEX_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

35 
«me•a˚
 
	gsf


37 
«me•a˚
 
	g¥iv


39 
˛ass
 
	gMuãxIm∂
;

47 ˛as†
	cSFML_SYSTEM_API
 
	gMuãx
 : 
N⁄C›yabÀ


49 
public
 :

55 
Muãx
();

61 ~
Muãx
();

73 
lock
();

81 
u∆ock
();

83 
	g¥iv©e
 :

88 
¥iv
::
MuãxIm∂
* 
m_muãxIm∂
;

	@/usr/include/SFML/System/Sleep.hpp

25 #i‚de‡
SFML_SLEEP_HPP


26 
	#SFML_SLEEP_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/Time.hµ
>

35 
«me•a˚
 
	gsf


47 
SFML_SYSTEM_API
 
¶ìp
(
Time
 
duøti⁄
);

	@/usr/include/SFML/System/Thread.hpp

25 #i‚de‡
SFML_THREAD_HPP


26 
	#SFML_THREAD_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

33 
	~<c°dlib
>

36 
«me•a˚
 
	gsf


38 
«me•a˚
 
	g¥iv


40 
˛ass
 
	gThªadIm∂
;

41 
	gThªadFunc
;

48 ˛as†
	cSFML_SYSTEM_API
 
	gThªad
 : 
N⁄C›yabÀ


50 
public
 :

74 
ãm∂©e
 <
ty≥«me
 
F
>

75 
Thªad
(
F
 
fun˘i⁄
);

102 
	gãm∂©e
 <
ty≥«me
 
	gF
,Åy≥«mê
	gA
>

103 
Thªad
(
F
 
fun˘i⁄
, 
A
 
¨gumít
);

125 
	gãm∂©e
 <
ty≥«me
 
	gC
>

126 
Thªad
((
C
::*
fun˘i⁄
)(), C* 
obje˘
);

135 ~
Thªad
();

146 
œunch
();

159 
waô
();

172 
ãrmö©e
();

174 
	g¥iv©e
 :

176 
‰õnd
 
˛ass
 
¥iv
::
ThªadIm∂
;

184 
run
();

189 
	g¥iv
::
ThªadIm∂
* 
m_im∂
;

190 
	g¥iv
::
ThªadFunc
* 
m_íåyPoöt
;

193 
	~<SFML/Sy°em/Thªad.öl
>

	@/usr/include/SFML/System/ThreadLocal.hpp

25 #i‚de‡
SFML_THREADLOCAL_HPP


26 
	#SFML_THREADLOCAL_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

32 
	~<SFML/Sy°em/N⁄C›yabÀ.hµ
>

33 
	~<c°dlib
>

36 
«me•a˚
 
	gsf


38 
«me•a˚
 
	g¥iv


40 
˛ass
 
	gThªadLoˇlIm∂
;

47 ˛as†
	cSFML_SYSTEM_API
 
	gThªadLoˇl
 : 
N⁄C›yabÀ


49 
public
 :

57 
ThªadLoˇl
(* 
vÆue
 = 
NULL
);

63 ~
ThªadLoˇl
();

71 
£tVÆue
(* 
vÆue
);

79 * 
gëVÆue
() const;

81 
	g¥iv©e
 :

86 
¥iv
::
ThªadLoˇlIm∂
* 
m_im∂
;

	@/usr/include/SFML/System/ThreadLocalPtr.hpp

25 #i‚de‡
SFML_THREADLOCALPTR_HPP


26 
	#SFML_THREADLOCALPTR_HPP


	)

31 
	~<SFML/Sy°em/ThªadLoˇl.hµ
>

34 
«me•a˚
 
	gsf


40 
	gãm∂©e
 <
ty≥«me
 
	gT
>

41 ˛as†
	cThªadLoˇlPå
 : 
¥iv©e
 
ThªadLoˇl


43 
public
 :

51 
ThªadLoˇlPå
(
T
* 
vÆue
 = 
NULL
);

62 
	gT
& 
	g›î©‹
 *() const;

73 
T
* 
	g›î©‹
 ->() const;

82 
›î©‹
 
	gT
*() const;

92 
	gThªadLoˇlPå
<
	gT
>& 
	g›î©‹
 =(
T
* 
vÆue
);

102 
	gThªadLoˇlPå
<
	gT
>& 
	g›î©‹
 =(c⁄° 
ThªadLoˇlPå
<
T
>& 
right
);

107 
	~<SFML/Sy°em/ThªadLoˇlPå.öl
>

	@/usr/include/SFML/System/Utf.hpp

25 #i‚de‡
SFML_UTF_HPP


26 
	#SFML_UTF_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

32 
	~<Æg‹ôhm
>

33 
	~<loˇÀ
>

34 
	~<°rög
>

35 
	~<c°dlib
>

38 
«me•a˚
 
	gsf


40 
	gãm∂©e
 <
	gN
>

41 
˛ass
 
	gUtf
;

47 
	gãm∂©e
 <>

48 
˛ass
 
	gUtf
<8>

50 
	gpublic
 :

66 
ãm∂©e
 <
ty≥«me
 
In
>

67 
In
 
decode
(I¿
begö
, I¿
íd
, 
Uöt32
& 
ouçut
, Uöt32 
ª∂a˚mít
 = 0);

82 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

83 
Out
 
ícode
(
Uöt32
 
öput
, Ouà
ouçut
, 
Uöt8
 
ª∂a˚mít
 = 0);

97 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

98 
In
 
√xt
(I¿
begö
, I¿
íd
);

113 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

114 
	g°d
::
size_t
 
cou¡
(
In
 
begö
, I¿
íd
);

130 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

131 
Out
 
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

143 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

144 
Out
 
‰omWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

156 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

157 
Out
 
‰omL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

174 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

175 
Out
 
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

188 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

189 
Out
 
toWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
wch¨_t
 
ª∂a˚mít
 = 0);

202 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

203 
Out
 
toL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0);

220 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

221 
Out
 
toUtf8
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

233 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

234 
Out
 
toUtf16
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

246 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

247 
Out
 
toUtf32
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

254 
	gãm∂©e
 <>

255 
˛ass
 
	gUtf
<16>

257 
	gpublic
 :

273 
ãm∂©e
 <
ty≥«me
 
In
>

274 
In
 
decode
(I¿
begö
, I¿
íd
, 
Uöt32
& 
ouçut
, Uöt32 
ª∂a˚mít
 = 0);

289 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

290 
Out
 
ícode
(
Uöt32
 
öput
, Ouà
ouçut
, 
Uöt16
 
ª∂a˚mít
 = 0);

304 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

305 
In
 
√xt
(I¿
begö
, I¿
íd
);

320 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

321 
	g°d
::
size_t
 
cou¡
(
In
 
begö
, I¿
íd
);

337 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

338 
Out
 
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

350 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

351 
Out
 
‰omWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

363 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

364 
Out
 
‰omL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

381 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

382 
Out
 
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

395 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

396 
Out
 
toWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
wch¨_t
 
ª∂a˚mít
 = 0);

409 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

410 
Out
 
toL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0);

422 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

423 
Out
 
toUtf8
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

440 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

441 
Out
 
toUtf16
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

453 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

454 
Out
 
toUtf32
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

461 
	gãm∂©e
 <>

462 
˛ass
 
	gUtf
<32>

464 
	gpublic
 :

481 
ãm∂©e
 <
ty≥«me
 
In
>

482 
In
 
decode
(I¿
begö
, I¿
íd
, 
Uöt32
& 
ouçut
, Uöt32 
ª∂a˚mít
 = 0);

498 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

499 
Out
 
ícode
(
Uöt32
 
öput
, Ouà
ouçut
, Uöt32 
ª∂a˚mít
 = 0);

513 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

514 
In
 
√xt
(I¿
begö
, I¿
íd
);

528 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

529 
	g°d
::
size_t
 
cou¡
(
In
 
begö
, I¿
íd
);

545 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

546 
Out
 
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

558 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

559 
Out
 
‰omWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

571 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

572 
Out
 
‰omL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

589 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

590 
Out
 
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

603 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

604 
Out
 
toWide
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
wch¨_t
 
ª∂a˚mít
 = 0);

617 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

618 
Out
 
toL©ö1
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
 = 0);

630 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

631 
Out
 
toUtf8
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

643 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

644 
Out
 
toUtf16
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

661 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

662 
Out
 
toUtf32
(
In
 
begö
, I¿
íd
, Ouà
ouçut
);

677 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

678 
Uöt32
 
decodeAnsi
(
In
 
öput
, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

692 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

693 
Uöt32
 
decodeWide
(
In
 
öput
);

710 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

711 
Out
 
ícodeAnsi
(
Uöt32
 
codïoöt
, Ouà
ouçut
, 
ª∂a˚mít
 = 0, c⁄° 
°d
::
loˇÀ
&Üocale = std::locale());

727 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

728 
Out
 
ícodeWide
(
Uöt32
 
codïoöt
, Ouà
ouçut
, 
wch¨_t
 
ª∂a˚mít
 = 0);

731 
	~<SFML/Sy°em/Utf.öl
>

734 
	gUtf
<8> 
	tUtf8
;

735 
	gUtf
<16> 
	tUtf16
;

736 
	gUtf
<32> 
	tUtf32
;

	@/usr/include/SFML/System/Vector2.inl

27 
	gãm∂©e
 <
ty≥«me
 
	gT
>

28 
ölöe
 
	gVe˘‹2
<
	gT
>::
	$Ve˘‹2
() :

29 
	`x
(0),

30 
	$y
(0)

33 
	}
}

37 
	gãm∂©e
 <
ty≥«me
 
	gT
>

38 
ölöe
 
	gVe˘‹2
<
	gT
>::
	$Ve˘‹2
(
T
 
X
, T 
Y
) :

39 
	`x
(
X
),

40 
	$y
(
Y
)

43 
	}
}

47 
	gãm∂©e
 <
ty≥«me
 
	gT
>

48 
	gãm∂©e
 <
ty≥«me
 
	gU
>

49 
ölöe
 
	gVe˘‹2
<
	gT
>::
Ve˘‹2
(c⁄° Ve˘‹2<
U
>& 
ve˘‹
) :

50 
x
(
°©ic_ˇ°
<
T
>(
ve˘‹
.x)),

51 
y
(
°©ic_ˇ°
<
T
>(
ve˘‹
.y))

57 
	gãm∂©e
 <
ty≥«me
 
	gT
>

58 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹2<T>& 
	gright
)

60  
	gVe˘‹2
<
	gT
>(-
	gright
.
	gx
, -right.
	gy
);

65 
	gãm∂©e
 <
ty≥«me
 
	gT
>

66 
ölöe
 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 +=(
Ve˘‹2
<
T
>& 
À·
, c⁄° Ve˘‹2<T>& 
	gright
)

68 
	gÀ·
.
	gx
 +
right
.
x
;

69 
	gÀ·
.
	gy
 +
right
.
y
;

71  
	gÀ·
;

76 
	gãm∂©e
 <
ty≥«me
 
	gT
>

77 
ölöe
 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 -=(
Ve˘‹2
<
T
>& 
À·
, c⁄° Ve˘‹2<T>& 
	gright
)

79 
	gÀ·
.
	gx
 -
right
.
x
;

80 
	gÀ·
.
	gy
 -
right
.
y
;

82  
	gÀ·
;

87 
	gãm∂©e
 <
ty≥«me
 
	gT
>

88 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 +(c⁄° Ve˘‹2<T>& 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
)

90  
	gVe˘‹2
<
	gT
>(
	gÀ·
.
	gx
 + 
	gright
.x,Üe·.
	gy
 +Ñight.y);

95 
	gãm∂©e
 <
ty≥«me
 
	gT
>

96 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹2<T>& 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
)

98  
	gVe˘‹2
<
	gT
>(
	gÀ·
.
	gx
 - 
	gright
.x,Üe·.
	gy
 -Ñight.y);

103 
	gãm∂©e
 <
ty≥«me
 
	gT
>

104 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 *(c⁄° Ve˘‹2<T>& 
	gÀ·
, 
T
 
	gright
)

106  
	gVe˘‹2
<
	gT
>(
	gÀ·
.
x
 * 
	gright
,Üe·.
y
 *Ñight);

111 
	gãm∂©e
 <
ty≥«me
 
	gT
>

112 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 *(
T
 
	gÀ·
, c⁄° Ve˘‹2<T>& 
	gright
)

114  
	gVe˘‹2
<
	gT
>(
	gright
.
x
 * 
	gÀ·
,Ñight.
y
 *Üeft);

119 
	gãm∂©e
 <
ty≥«me
 
	gT
>

120 
ölöe
 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 *=(
Ve˘‹2
<
T
>& 
À·
, T 
	gright
)

122 
	gÀ·
.
	gx
 *
right
;

123 
	gÀ·
.
	gy
 *
right
;

125  
	gÀ·
;

130 
	gãm∂©e
 <
ty≥«me
 
	gT
>

131 
ölöe
 
	gVe˘‹2
<
	gT
> 
	g›î©‹
 /(c⁄° Ve˘‹2<T>& 
	gÀ·
, 
T
 
	gright
)

133  
	gVe˘‹2
<
	gT
>(
	gÀ·
.
	gx
 / 
	gright
,Üe·.
	gy
 /Ñight);

138 
	gãm∂©e
 <
ty≥«me
 
	gT
>

139 
ölöe
 
	gVe˘‹2
<
	gT
>& 
	g›î©‹
 /=(
Ve˘‹2
<
T
>& 
À·
, T 
	gright
)

141 
	gÀ·
.
	gx
 /
right
;

142 
	gÀ·
.
	gy
 /
right
;

144  
	gÀ·
;

149 
	gãm∂©e
 <
ty≥«me
 
	gT
>

150 
ölöe
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Ve˘‹2
<
T
>& 
À·
, c⁄° 
	gVe˘‹2
<
	gT
>& 
	gright
)

152  (
	gÀ·
.
	gx
 =
right
.
x
Ë&& (
À·
.
y
 ==Ñight.y);

157 
	gãm∂©e
 <
ty≥«me
 
	gT
>

158 
ölöe
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Ve˘‹2
<
T
>& 
À·
, c⁄° 
	gVe˘‹2
<
	gT
>& 
	gright
)

160  (
	gÀ·
.
	gx
 !
right
.
x
Ë|| (
À·
.
y
 !=Ñight.y);

	@/usr/include/SFML/System/Vector3.inl

27 
	gãm∂©e
 <
ty≥«me
 
	gT
>

28 
ölöe
 
	gVe˘‹3
<
	gT
>::
	$Ve˘‹3
() :

29 
	`x
(0),

30 
	`y
(0),

31 
	$z
(0)

34 
	}
}

38 
	gãm∂©e
 <
ty≥«me
 
	gT
>

39 
ölöe
 
	gVe˘‹3
<
	gT
>::
	$Ve˘‹3
(
T
 
X
, T 
Y
, T 
Z
) :

40 
	`x
(
X
),

41 
	`y
(
Y
),

42 
	$z
(
Z
)

45 
	}
}

49 
	gãm∂©e
 <
ty≥«me
 
	gT
>

50 
	gãm∂©e
 <
ty≥«me
 
	gU
>

51 
ölöe
 
	gVe˘‹3
<
	gT
>::
Ve˘‹3
(c⁄° Ve˘‹3<
U
>& 
ve˘‹
) :

52 
x
(
°©ic_ˇ°
<
T
>(
ve˘‹
.x)),

53 
y
(
°©ic_ˇ°
<
T
>(
ve˘‹
.y)),

54 
z
(
°©ic_ˇ°
<
T
>(
ve˘‹
.z))

60 
	gãm∂©e
 <
ty≥«me
 
	gT
>

61 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹3<T>& 
	gÀ·
)

63  
	gVe˘‹3
<
	gT
>(-
	gÀ·
.
	gx
, -À·.
	gy
, -À·.
	gz
);

68 
	gãm∂©e
 <
ty≥«me
 
	gT
>

69 
ölöe
 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 +=(
Ve˘‹3
<
T
>& 
À·
, c⁄° Ve˘‹3<T>& 
	gright
)

71 
	gÀ·
.
	gx
 +
right
.
x
;

72 
	gÀ·
.
	gy
 +
right
.
y
;

73 
	gÀ·
.
	gz
 +
right
.
z
;

75  
	gÀ·
;

80 
	gãm∂©e
 <
ty≥«me
 
	gT
>

81 
ölöe
 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 -=(
Ve˘‹3
<
T
>& 
À·
, c⁄° Ve˘‹3<T>& 
	gright
)

83 
	gÀ·
.
	gx
 -
right
.
x
;

84 
	gÀ·
.
	gy
 -
right
.
y
;

85 
	gÀ·
.
	gz
 -
right
.
z
;

87  
	gÀ·
;

92 
	gãm∂©e
 <
ty≥«me
 
	gT
>

93 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 +(c⁄° Ve˘‹3<T>& 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
)

95  
	gVe˘‹3
<
	gT
>(
	gÀ·
.
	gx
 + 
	gright
.x,Üe·.
	gy
 +Ñight.y,Üe·.
	gz
 +Ñight.z);

100 
	gãm∂©e
 <
ty≥«me
 
	gT
>

101 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 -(c⁄° Ve˘‹3<T>& 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
)

103  
	gVe˘‹3
<
	gT
>(
	gÀ·
.
	gx
 - 
	gright
.x,Üe·.
	gy
 -Ñight.y,Üe·.
	gz
 -Ñight.z);

108 
	gãm∂©e
 <
ty≥«me
 
	gT
>

109 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 *(c⁄° Ve˘‹3<T>& 
	gÀ·
, 
T
 
	gright
)

111  
	gVe˘‹3
<
	gT
>(
	gÀ·
.
x
 * 
	gright
,Üe·.
y
 *Ñight,Üe·.
z
 *Ñight);

116 
	gãm∂©e
 <
ty≥«me
 
	gT
>

117 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 *(
T
 
	gÀ·
, c⁄° Ve˘‹3<T>& 
	gright
)

119  
	gVe˘‹3
<
	gT
>(
	gright
.
x
 * 
	gÀ·
,Ñight.
y
 *Üe·,Ñight.
z
 *Üeft);

124 
	gãm∂©e
 <
ty≥«me
 
	gT
>

125 
ölöe
 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 *=(
Ve˘‹3
<
T
>& 
À·
, T 
	gright
)

127 
	gÀ·
.
	gx
 *
right
;

128 
	gÀ·
.
	gy
 *
right
;

129 
	gÀ·
.
	gz
 *
right
;

131  
	gÀ·
;

136 
	gãm∂©e
 <
ty≥«me
 
	gT
>

137 
ölöe
 
	gVe˘‹3
<
	gT
> 
	g›î©‹
 /(c⁄° Ve˘‹3<T>& 
	gÀ·
, 
T
 
	gright
)

139  
	gVe˘‹3
<
	gT
>(
	gÀ·
.
	gx
 / 
	gright
,Üe·.
	gy
 /Ñight,Üe·.
	gz
 /Ñight);

144 
	gãm∂©e
 <
ty≥«me
 
	gT
>

145 
ölöe
 
	gVe˘‹3
<
	gT
>& 
	g›î©‹
 /=(
Ve˘‹3
<
T
>& 
À·
, T 
	gright
)

147 
	gÀ·
.
	gx
 /
right
;

148 
	gÀ·
.
	gy
 /
right
;

149 
	gÀ·
.
	gz
 /
right
;

151  
	gÀ·
;

156 
	gãm∂©e
 <
ty≥«me
 
	gT
>

157 
ölöe
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Ve˘‹3
<
T
>& 
À·
, c⁄° 
	gVe˘‹3
<
	gT
>& 
	gright
)

159  (
	gÀ·
.
	gx
 =
right
.
x
Ë&& (
À·
.
y
 =right.yË&& (À·.
z
 ==Ñight.z);

164 
	gãm∂©e
 <
ty≥«me
 
	gT
>

165 
ölöe
 
boﬁ
 
	g›î©‹
 !=(c⁄° 
Ve˘‹3
<
T
>& 
À·
, c⁄° 
	gVe˘‹3
<
	gT
>& 
	gright
)

167  (
	gÀ·
.
	gx
 !
right
.
x
Ë|| (
À·
.
y
 !right.yË|| (À·.
z
 !=Ñight.z);

	@/usr/include/SFML/Window/Export.hpp

25 #i‚de‡
SFML_WINDOW_EXPORT_HPP


26 
	#SFML_WINDOW_EXPORT_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

37 #i‡
deföed
(
SFML_WINDOW_EXPORTS
)

39 
	#SFML_WINDOW_API
 
SFML_API_EXPORT


	)

43 
	#SFML_WINDOW_API
 
SFML_API_IMPORT


	)

	@/usr/include/SFML/Window/WindowHandle.hpp

25 #i‚de‡
SFML_WINDOWHANDLE_HPP


26 
	#SFML_WINDOWHANDLE_HPP


	)

31 
	~<SFML/C⁄fig.hµ
>

34 #i‡
deföed
(
SFML_SYSTEM_WINDOWS
)

35 
	gHWND__
;

38 
«me•a˚
 
	gsf


44 #i‡
deföed
(
SFML_SYSTEM_WINDOWS
)

47 
HWND__
* 
	tWödowH™dÀ
;

49 #ñi‡
deföed
(
SFML_SYSTEM_LINUX
Ë|| deföed(
SFML_SYSTEM_FREEBSD
)

52 
	tWödowH™dÀ
;

54 #ñi‡
deföed
(
SFML_SYSTEM_MACOS
)

57 * 
	tWödowH™dÀ
;

	@/usr/include/SFML/System/Thread.inl

25 
«me•a˚
 
	g¥iv


28 
	sThªadFunc


30 
	gvútuÆ
 ~
ThªadFunc
() {}

31 
vútuÆ
 
run
() = 0;

35 
	gãm∂©e
 <
ty≥«me
 
	gT
>

36 
	gThªadFun˘‹
 : 
ThªadFunc


38 
ThªadFun˘‹
(
T
 
fun˘‹
Ë: 
m_fun˘‹
(functor) {}

39 
vútuÆ
 
run
(Ë{
m_fun˘‹
();}

40 
T
 
	gm_fun˘‹
;

44 
	gãm∂©e
 <
ty≥«me
 
	gF
,Åy≥«mê
	gA
>

45 
	gThªadFun˘‹WôhArg
 : 
ThªadFunc


47 
ThªadFun˘‹WôhArg
(
F
 
fun˘i⁄
, 
A
 
¨g
Ë: 
m_fun˘i⁄
(fun˘i⁄), 
m_¨g
(arg) {}

48 
vútuÆ
 
run
(Ë{
m_fun˘i⁄
(
m_¨g
);}

49 
F
 
	gm_fun˘i⁄
;

50 
A
 
	gm_¨g
;

54 
	gãm∂©e
 <
ty≥«me
 
	gC
>

55 
	gThªadMembîFunc
 : 
ThªadFunc


57 
ThªadMembîFunc
((
C
::*
fun˘i⁄
)(), C* 
obje˘
Ë: 
m_fun˘i⁄
(fun˘i⁄), 
m_obje˘
(object) {}

58 
vútuÆ
 
run
(Ë{(
	gm_obje˘
->*
	gm_fun˘i⁄
)();}

59 (
	gC
::*
m_fun˘i⁄
)();

60 
C
* 
	gm_obje˘
;

67 
	gãm∂©e
 <
ty≥«me
 
	gF
>

68 
	gThªad
::
	$Thªad
(
F
 
fun˘‹
) :

69 
	`m_im∂
 (
NULL
),

70 
	`m_íåyPoöt
(
√w
 
¥iv
::
ThªadFun˘‹
<
F
>(
fun˘‹
))

72 
	}
}

76 
ãm∂©e
 <
ty≥«me
 
F
,Åy≥«mê
	gA
>

77 
	gThªad
::
	$Thªad
(
F
 
fun˘i⁄
, 
A
 
¨gumít
) :

78 
	`m_im∂
 (
NULL
),

79 
	`m_íåyPoöt
(
√w
 
¥iv
::
ThªadFun˘‹WôhArg
<
F
, 
A
>(
fun˘i⁄
, 
¨gumít
))

81 
	}
}

85 
	gãm∂©e
 <
ty≥«me
 
	gC
>

86 
	gThªad
::
Thªad
((
C
::*
fun˘i⁄
)(), C* 
obje˘
) :

87 
m_im∂
 (
NULL
),

88 
m_íåyPoöt
(
√w
 
¥iv
::
ThªadMembîFunc
<
C
>(
fun˘i⁄
, 
obje˘
))

	@/usr/include/SFML/System/ThreadLocalPtr.inl

26 
«me•a˚
 
	gsf


29 
	gãm∂©e
 <
ty≥«me
 
	gT
>

30 
	gThªadLoˇlPå
<
	gT
>::
ThªadLoˇlPå
(
T
* 
vÆue
) :

31 
ThªadLoˇl
(
vÆue
)

37 
ãm∂©e
 <
ty≥«me
 
T
>

38 
T
& 
ThªadLoˇlPå
<T>::
›î©‹
 *() const

40  *
°©ic_ˇ°
<
T
*>(
gëVÆue
());

45 
	gãm∂©e
 <
ty≥«me
 
	gT
>

46 
T
* 
	gThªadLoˇlPå
<
	gT
>::
›î©‹
 ->() const

48  
°©ic_ˇ°
<
T
*>(
gëVÆue
());

53 
	gãm∂©e
 <
ty≥«me
 
	gT
>

54 
	gThªadLoˇlPå
<
	gT
>::
›î©‹
 
T
*() const

56  
°©ic_ˇ°
<
T
*>(
gëVÆue
());

61 
	gãm∂©e
 <
ty≥«me
 
	gT
>

62 
	gThªadLoˇlPå
<
	gT
>& ThªadLoˇlPå<T>::
›î©‹
 =(
T
* 
vÆue
)

64 
£tVÆue
(
vÆue
);

65  *
	gthis
;

70 
	gãm∂©e
 <
ty≥«me
 
	gT
>

71 
	gThªadLoˇlPå
<
	gT
>& ThªadLoˇlPå<T>::
›î©‹
 =(c⁄° 
ThªadLoˇlPå
<
T
>& 
right
)

73 
£tVÆue
(
right
.
gëVÆue
());

74  *
	gthis
;

	@/usr/include/SFML/System/Time.hpp

25 #i‚de‡
SFML_TIME_HPP


26 
	#SFML_TIME_HPP


	)

31 
	~<SFML/Sy°em/Exp‹t.hµ
>

34 
«me•a˚
 
	gsf


40 ˛as†
	cSFML_SYSTEM_API
 
	gTime


42 
	gpublic
 :

50 
Time
();

60 
asSec⁄ds
() const;

70 
I¡32
 
asMûli£c⁄ds
() const;

80 
I¡64
 
asMi¸o£c⁄ds
() const;

85 c⁄° 
Time
 
	gZîo
;

87 
	g¥iv©e
 :

89 
‰õnd
 
SFML_SYSTEM_API
 
Time
 
£c⁄ds
();

90 
‰õnd
 
SFML_SYSTEM_API
 
Time
 
mûli£c⁄ds
(
I¡32
);

91 
‰õnd
 
SFML_SYSTEM_API
 
Time
 
mi¸o£c⁄ds
(
I¡64
);

102 
ex∂icô
 
Time
(
I¡64
 
mi¸o£c⁄ds
);

104 
	g¥iv©e
 :

109 
I¡64
 
m_mi¸o£c⁄ds
;

123 
SFML_SYSTEM_API
 
Time
 
£c⁄ds
(
amou¡
);

136 
SFML_SYSTEM_API
 
Time
 
mûli£c⁄ds
(
I¡32
 
amou¡
);

149 
SFML_SYSTEM_API
 
Time
 
mi¸o£c⁄ds
(
I¡64
 
amou¡
);

161 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 ==(
Time
 
À·
, Timê
	gright
);

173 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 !=(
Time
 
À·
, Timê
	gright
);

185 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 <(
Time
 
	gÀ·
, Timê
	gright
);

197 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 >(
Time
 
	gÀ·
, Timê
	gright
);

209 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 <=(
Time
 
À·
, Timê
	gright
);

221 
SFML_SYSTEM_API
 
boﬁ
 
	g›î©‹
 >=(
Time
 
À·
, Timê
	gright
);

232 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 -(Timê
	gright
);

244 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 +(Timê
	gÀ·
, Timê
	gright
);

256 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 +=(
Time
& 
À·
, Timê
	gright
);

268 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 -(Timê
	gÀ·
, Timê
	gright
);

280 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 -=(
Time
& 
À·
, Timê
	gright
);

292 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 *(Timê
	gÀ·
, 
	gright
);

304 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 *(Timê
	gÀ·
, 
I¡64
 
	gright
);

316 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 *(
	gÀ·
, Timê
	gright
);

328 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 *(
I¡64
 
	gÀ·
, Timê
	gright
);

340 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 *=(
Time
& 
À·
, 
	gright
);

352 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 *=(
Time
& 
À·
, 
I¡64
 
	gright
);

364 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 /(Timê
	gÀ·
, 
	gright
);

376 
SFML_SYSTEM_API
 
Time
 
	g›î©‹
 /(Timê
	gÀ·
, 
I¡64
 
	gright
);

388 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 /=(
Time
& 
À·
, 
	gright
);

400 
SFML_SYSTEM_API
 
	gTime
& 
	g›î©‹
 /=(
Time
& 
À·
, 
I¡64
 
	gright
);

	@/usr/include/SFML/System/Utf.inl

38 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

39 
In
 
	gUtf
<8>::
	$decode
(
In
 
begö
, I¿
íd
, 
Uöt32
& 
ouçut
, Uöt32 
ª∂a˚mít
)

42 c⁄° 
åaûög
[256] =

53 c⁄° 
Uöt32
 
off£ts
[6] =

59 
åaûögByãs
 = 
åaûög
[
°©ic_ˇ°
<
Uöt8
>(*
begö
)];

60 i‡(
begö
 + 
åaûögByãs
 < 
íd
)

62 
ouçut
 = 0;

63 
åaûögByãs
)

65 5 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++); output <<= 6;

66 4 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++); output <<= 6;

67 3 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++); output <<= 6;

68 2 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++); output <<= 6;

69 1 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++); output <<= 6;

70 0 : 
ouçut
 +
°©ic_ˇ°
<
Uöt8
>(*
begö
++);

72 
ouçut
 -
off£ts
[
åaûögByãs
];

77 
begö
 = 
íd
;

78 
ouçut
 = 
ª∂a˚mít
;

81  
begö
;

82 
	}
}

86 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

87 
Out
 
	gUtf
<8>::
	$ícode
(
Uöt32
 
öput
, 
Out
 
ouçut
, 
Uöt8
 
ª∂a˚mít
)

90 c⁄° 
Uöt8
 
fú°Byãs
[7] =

96 i‡((
öput
 > 0x0010FFFF) || ((input >= 0xD800) && (input <= 0xDBFF)))

99 i‡(
ª∂a˚mít
)

100 *
ouçut
++ = 
ª∂a˚mít
;

107 
byã°oWrôe
 = 1;

108 i‡(
öput
 < 0x80Ë
byã°oWrôe
 = 1;

109 i‡(
öput
 < 0x800Ë
byã°oWrôe
 = 2;

110 i‡(
öput
 < 0x10000Ë
byã°oWrôe
 = 3;

111 i‡(
öput
 <0x0010FFFFË
byã°oWrôe
 = 4;

114 
Uöt8
 
byãs
[4];

115 
byã°oWrôe
)

117 4 : 
byãs
[3] = 
°©ic_ˇ°
<
Uöt8
>((
öput
 | 0x80) & 0xBF); input >>= 6;

118 3 : 
byãs
[2] = 
°©ic_ˇ°
<
Uöt8
>((
öput
 | 0x80) & 0xBF); input >>= 6;

119 2 : 
byãs
[1] = 
°©ic_ˇ°
<
Uöt8
>((
öput
 | 0x80) & 0xBF); input >>= 6;

120 1 : 
byãs
[0] = 
°©ic_ˇ°
<
Uöt8
> (
öput
 | 
fú°Byãs
[
byã°oWrôe
]);

124 c⁄° 
Uöt8
* 
cuºítByã
 = 
byãs
;

125 
byã°oWrôe
)

127 4 : *
ouçut
++ = *
cuºítByã
++;

128 3 : *
ouçut
++ = *
cuºítByã
++;

129 2 : *
ouçut
++ = *
cuºítByã
++;

130 1 : *
ouçut
++ = *
cuºítByã
++;

134  
ouçut
;

135 
	}
}

139 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

140 
In
 
	gUtf
<8>::
	$√xt
(
In
 
begö
, I¿
íd
)

142 
Uöt32
 
codïoöt
;

143  
	`decode
(
begö
, 
íd
, 
codïoöt
);

144 
	}
}

148 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

149 
	g°d
::
size_t
 
Utf
<8>::
	$cou¡
(
In
 
begö
, I¿
íd
)

151 
°d
::
size_t
 
Àngth
 = 0;

152 
begö
 < 
íd
)

154 
begö
 = 
	`√xt
(begö, 
íd
);

155 ++
Àngth
;

158  
Àngth
;

159 
	}
}

163 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

164 
Out
 
	gUtf
<8>::
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale)

166 
begö
 < 
íd
)

168 
Uöt32
 
codïoöt
 = 
Utf
<32>::
decodeAnsi
(*
begö
++, 
loˇÀ
);

169 
	gouçut
 = 
ícode
(
codïoöt
, 
ouçut
);

172  
	gouçut
;

177 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

178 
Out
 
	gUtf
<8>::
	$‰omWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

180 
begö
 < 
íd
)

182 
Uöt32
 
codïoöt
 = 
Utf
<32>::
	`decodeWide
(*
begö
++);

183 
ouçut
 = 
	`ícode
(
codïoöt
, output);

186  
ouçut
;

187 
	}
}

191 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

192 
Out
 
	gUtf
<8>::
	$‰omL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

196 
begö
 < 
íd
)

197 
ouçut
 = 
	`ícode
(*
begö
++, output);

199  
ouçut
;

200 
	}
}

204 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

205 
Out
 
	gUtf
<8>::
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
, c⁄° 
°d
::
loˇÀ
&Üocale)

207 
begö
 < 
íd
)

209 
Uöt32
 
codïoöt
;

210 
	gbegö
 = 
decode
(
begö
, 
íd
, 
codïoöt
);

211 
	gouçut
 = 
Utf
<32>::
ícodeAnsi
(
codïoöt
, 
ouçut
, 
ª∂a˚mít
, 
loˇÀ
);

214  
	gouçut
;

219 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

220 
Out
 
	gUtf
<8>::
	$toWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
wch¨_t
 
ª∂a˚mít
)

222 
begö
 < 
íd
)

224 
Uöt32
 
codïoöt
;

225 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

226 
ouçut
 = 
Utf
<32>::
	`ícodeWide
(
codïoöt
, ouçut, 
ª∂a˚mít
);

229  
ouçut
;

230 
	}
}

234 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

235 
Out
 
	gUtf
<8>::
	$toL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
ª∂a˚mít
)

239 
begö
 < 
íd
)

241 
Uöt32
 
codïoöt
;

242 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

243 *
ouçut
++ = 
codïoöt
 < 256 ? 
°©ic_ˇ°
<>(codïoötË: 
ª∂a˚mít
;

246  
ouçut
;

247 
	}
}

251 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

252 
Out
 
	gUtf
<8>::
	$toUtf8
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

254 
begö
 < 
íd
)

255 *
ouçut
++ = *
begö
++;

257  
ouçut
;

258 
	}
}

262 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

263 
Out
 
	gUtf
<8>::
	$toUtf16
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

265 
begö
 < 
íd
)

267 
Uöt32
 
codïoöt
;

268 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

269 
ouçut
 = 
Utf
<16>::
	`ícode
(
codïoöt
, output);

272  
ouçut
;

273 
	}
}

277 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

278 
Out
 
	gUtf
<8>::
	$toUtf32
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

280 
begö
 < 
íd
)

282 
Uöt32
 
codïoöt
;

283 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

284 *
ouçut
++ = 
codïoöt
;

287  
ouçut
;

288 
	}
}

292 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

293 
In
 
	gUtf
<16>::
	$decode
(
In
 
begö
, I¿
íd
, 
Uöt32
& 
ouçut
, Uöt32 
ª∂a˚mít
)

295 
Uöt16
 
fú°
 = *
begö
++;

298 i‡((
fú°
 >= 0xD800) && (first <= 0xDBFF))

300 i‡(
begö
 < 
íd
)

302 
Uöt32
 
£c⁄d
 = *
begö
++;

303 i‡((
£c⁄d
 >= 0xDC00) && (second <= 0xDFFF))

306 
ouçut
 = 
°©ic_ˇ°
<
Uöt32
>(((
fú°
 - 0xD800Ë<< 10Ë+ (
£c⁄d
 - 0xDC00) + 0x0010000);

311 
ouçut
 = 
ª∂a˚mít
;

317 
begö
 = 
íd
;

318 
ouçut
 = 
ª∂a˚mít
;

324 
ouçut
 = 
fú°
;

327  
begö
;

328 
	}
}

332 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

333 
Out
 
	gUtf
<16>::
	$ícode
(
Uöt32
 
öput
, 
Out
 
ouçut
, 
Uöt16
 
ª∂a˚mít
)

335 i‡(
öput
 < 0xFFFF)

338 i‡((
öput
 >= 0xD800) && (input <= 0xDFFF))

341 i‡(
ª∂a˚mít
)

342 *
ouçut
++ = 
ª∂a˚mít
;

347 *
ouçut
++ = 
°©ic_ˇ°
<
Uöt16
>(
öput
);

350 i‡(
öput
 > 0x0010FFFF)

353 i‡(
ª∂a˚mít
)

354 *
ouçut
++ = 
ª∂a˚mít
;

359 
öput
 -= 0x0010000;

360 *
ouçut
++ = 
°©ic_ˇ°
<
Uöt16
>((
öput
 >> 10) + 0xD800);

361 *
ouçut
++ = 
°©ic_ˇ°
<
Uöt16
>((
öput
 & 0x3FFUL) + 0xDC00);

364  
ouçut
;

365 
	}
}

369 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

370 
In
 
	gUtf
<16>::
	$√xt
(
In
 
begö
, I¿
íd
)

372 
Uöt32
 
codïoöt
;

373  
	`decode
(
begö
, 
íd
, 
codïoöt
);

374 
	}
}

378 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

379 
	g°d
::
size_t
 
Utf
<16>::
	$cou¡
(
In
 
begö
, I¿
íd
)

381 
°d
::
size_t
 
Àngth
 = 0;

382 
begö
 < 
íd
)

384 
begö
 = 
	`√xt
(begö, 
íd
);

385 ++
Àngth
;

388  
Àngth
;

389 
	}
}

393 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

394 
Out
 
	gUtf
<16>::
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale)

396 
begö
 < 
íd
)

398 
Uöt32
 
codïoöt
 = 
Utf
<32>::
decodeAnsi
(*
begö
++, 
loˇÀ
);

399 
	gouçut
 = 
ícode
(
codïoöt
, 
ouçut
);

402  
	gouçut
;

407 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

408 
Out
 
	gUtf
<16>::
	$‰omWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

410 
begö
 < 
íd
)

412 
Uöt32
 
codïoöt
 = 
Utf
<32>::
	`decodeWide
(*
begö
++);

413 
ouçut
 = 
	`ícode
(
codïoöt
, output);

416  
ouçut
;

417 
	}
}

421 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

422 
Out
 
	gUtf
<16>::
	$‰omL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

426 
begö
 < 
íd
)

427 *
ouçut
++ = *
begö
++;

429  
ouçut
;

430 
	}
}

434 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

435 
Out
 
	gUtf
<16>::
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
, c⁄° 
°d
::
loˇÀ
&Üocale)

437 
begö
 < 
íd
)

439 
Uöt32
 
codïoöt
;

440 
	gbegö
 = 
decode
(
begö
, 
íd
, 
codïoöt
);

441 
	gouçut
 = 
Utf
<32>::
ícodeAnsi
(
codïoöt
, 
ouçut
, 
ª∂a˚mít
, 
loˇÀ
);

444  
	gouçut
;

449 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

450 
Out
 
	gUtf
<16>::
	$toWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
wch¨_t
 
ª∂a˚mít
)

452 
begö
 < 
íd
)

454 
Uöt32
 
codïoöt
;

455 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

456 
ouçut
 = 
Utf
<32>::
	`ícodeWide
(
codïoöt
, ouçut, 
ª∂a˚mít
);

459  
ouçut
;

460 
	}
}

464 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

465 
Out
 
	gUtf
<16>::
	$toL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
ª∂a˚mít
)

469 
begö
 < 
íd
)

471 *
ouçut
++ = *
begö
 < 256 ? 
°©ic_ˇ°
<>(*begöË: 
ª∂a˚mít
;

472 
begö
++;

475  
ouçut
;

476 
	}
}

480 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

481 
Out
 
	gUtf
<16>::
	$toUtf8
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

483 
begö
 < 
íd
)

485 
Uöt32
 
codïoöt
;

486 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

487 
ouçut
 = 
Utf
<8>::
	`ícode
(
codïoöt
, output);

490  
ouçut
;

491 
	}
}

495 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

496 
Out
 
	gUtf
<16>::
	$toUtf16
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

498 
begö
 < 
íd
)

499 *
ouçut
++ = *
begö
++;

501  
ouçut
;

502 
	}
}

506 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

507 
Out
 
	gUtf
<16>::
	$toUtf32
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

509 
begö
 < 
íd
)

511 
Uöt32
 
codïoöt
;

512 
begö
 = 
	`decode
(begö, 
íd
, 
codïoöt
);

513 *
ouçut
++ = 
codïoöt
;

516  
ouçut
;

517 
	}
}

521 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

522 
In
 
	gUtf
<32>::
	$decode
(
In
 
begö
, I¿ , 
Uöt32
& 
ouçut
, Uint32 )

524 
ouçut
 = *
begö
++;

525  
begö
;

526 
	}
}

530 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

531 
Out
 
	gUtf
<32>::
	$ícode
(
Uöt32
 
öput
, 
Out
 
ouçut
, Uint32 )

533 *
ouçut
++ = 
öput
;

534  
ouçut
;

535 
	}
}

539 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

540 
In
 
	gUtf
<32>::
	$√xt
(
In
 
begö
, In )

542  ++
begö
;

543 
	}
}

547 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

548 
	g°d
::
size_t
 
Utf
<32>::
	$cou¡
(
In
 
begö
, I¿
íd
)

550  
begö
 - 
íd
;

551 
	}
}

555 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

556 
Out
 
	gUtf
<32>::
‰omAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, c⁄° 
°d
::
loˇÀ
&Üocale)

558 
begö
 < 
íd
)

559 *
ouçut
++ = 
decodeAnsi
(*
begö
++, 
loˇÀ
);

561  
	gouçut
;

566 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

567 
Out
 
	gUtf
<32>::
	$‰omWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

569 
begö
 < 
íd
)

570 *
ouçut
++ = 
	`decodeWide
(*
begö
++);

572  
ouçut
;

573 
	}
}

577 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

578 
Out
 
	gUtf
<32>::
	$‰omL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

582 
begö
 < 
íd
)

583 *
ouçut
++ = *
begö
++;

585  
ouçut
;

586 
	}
}

590 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

591 
Out
 
	gUtf
<32>::
toAnsi
(
In
 
begö
, I¿
íd
, Ouà
ouçut
, 
ª∂a˚mít
, c⁄° 
°d
::
loˇÀ
&Üocale)

593 
begö
 < 
íd
)

594 
ouçut
 = 
ícodeAnsi
(*
begö
++, ouçut, 
ª∂a˚mít
, 
loˇÀ
);

596  
	gouçut
;

601 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

602 
Out
 
	gUtf
<32>::
	$toWide
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
wch¨_t
 
ª∂a˚mít
)

604 
begö
 < 
íd
)

605 
ouçut
 = 
	`ícodeWide
(*
begö
++, ouçut, 
ª∂a˚mít
);

607  
ouçut
;

608 
	}
}

612 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

613 
Out
 
	gUtf
<32>::
	$toL©ö1
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
, 
ª∂a˚mít
)

617 
begö
 < 
íd
)

619 *
ouçut
++ = *
begö
 < 256 ? 
°©ic_ˇ°
<>(*begöË: 
ª∂a˚mít
;

620 
begö
++;

623  
ouçut
;

624 
	}
}

628 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

629 
Out
 
	gUtf
<32>::
	$toUtf8
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

631 
begö
 < 
íd
)

632 
ouçut
 = 
Utf
<8>::
	`ícode
(*
begö
++, output);

634  
ouçut
;

635 
	}
}

638 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

639 
Out
 
	gUtf
<32>::
	$toUtf16
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

641 
begö
 < 
íd
)

642 
ouçut
 = 
Utf
<16>::
	`ícode
(*
begö
++, output);

644  
ouçut
;

645 
	}
}

649 
	gãm∂©e
 <
ty≥«me
 
	gIn
,Åy≥«mê
	gOut
>

650 
Out
 
	gUtf
<32>::
	$toUtf32
(
In
 
begö
, I¿
íd
, 
Out
 
ouçut
)

652 
begö
 < 
íd
)

653 *
ouçut
++ = *
begö
++;

655  
ouçut
;

656 
	}
}

660 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

661 
Uöt32
 
	gUtf
<32>::
decodeAnsi
(
In
 
öput
, c⁄° 
°d
::
loˇÀ
&Üocale)

668 #i‡
deföed
(
SFML_SYSTEM_WINDOWS
) && \

669 (
deföed
(
__GLIBCPP__
Ë|| deföed (
__GLIBCXX__
)) && \

670 !(
deföed
(
__SGI_STL_PORT
Ë|| deföed(
_STLPORT_VERSION
))

672 ()
loˇÀ
;

674 
wch¨_t
 
	gch¨a˘î
 = 0;

675 
mbtowc
(&
ch¨a˘î
, &
öput
, 1);

676  
	g°©ic_ˇ°
<
	gUöt32
>(
	gch¨a˘î
);

681 c⁄° 
	g°d
::
˘y≥
<
wch¨_t
>& 
Á˚t
 = 
°d
::
u£_Á˚t
< std::˘y≥<wch¨_t> >(
loˇÀ
);

684  
	g°©ic_ˇ°
<
	gUöt32
>(
	gÁ˚t
.
widí
(
öput
));

691 
	gãm∂©e
 <
ty≥«me
 
	gIn
>

692 
Uöt32
 
	gUtf
<32>::
	$decodeWide
(
In
 
öput
)

700  
öput
;

701 
	}
}

705 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

706 
Out
 
	gUtf
<32>::
ícodeAnsi
(
Uöt32
 
codïoöt
, Ouà
ouçut
, 
ª∂a˚mít
, c⁄° 
°d
::
loˇÀ
&Üocale)

713 #i‡
deföed
(
SFML_SYSTEM_WINDOWS
) && \

714 (
deföed
(
__GLIBCPP__
Ë|| deföed (
__GLIBCXX__
)) && \

715 !(
deföed
(
__SGI_STL_PORT
Ë|| deföed(
_STLPORT_VERSION
))

717 ()
loˇÀ
;

719 
	gch¨a˘î
 = 0;

720 i‡(
w˘omb
(&
ch¨a˘î
, 
°©ic_ˇ°
<
wch¨_t
>(
codïoöt
)) >= 0)

721 *
ouçut
++ = 
ch¨a˘î
;

722 i‡(
	gª∂a˚mít
)

723 *
	gouçut
++ = 
ª∂a˚mít
;

725  
	gouçut
;

730 c⁄° 
	g°d
::
˘y≥
<
wch¨_t
>& 
Á˚t
 = 
°d
::
u£_Á˚t
< std::˘y≥<wch¨_t> >(
loˇÀ
);

733 *
	gouçut
++ = 
Á˚t
.
«ºow
(
°©ic_ˇ°
<
wch¨_t
>(
codïoöt
), 
ª∂a˚mít
);

735  
	gouçut
;

742 
	gãm∂©e
 <
ty≥«me
 
	gOut
>

743 
Out
 
	gUtf
<32>::
	$ícodeWide
(
Uöt32
 
codïoöt
, 
Out
 
ouçut
, 
wch¨_t
 
ª∂a˚mít
)

751 (
wch¨_t
))

755 *
ouçut
++ = 
°©ic_ˇ°
<
wch¨_t
>(
codïoöt
);

761 i‡((
codïoöt
 <= 0xFFFF) && ((codepoint < 0xD800) || (codepoint > 0xDFFF)))

763 *
ouçut
++ = 
°©ic_ˇ°
<
wch¨_t
>(
codïoöt
);

765 i‡(
ª∂a˚mít
)

767 *
ouçut
++ = 
ª∂a˚mít
;

773  
ouçut
;

774 
	}
}

	@
1
.
1
/usr/include
82
3730
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/SimEditor.glade
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Common/FileHandler.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/Editor.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/SFML_Widget.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/SimulationArea.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Editor/UiLoader.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Simulator/Area.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/include/Simulator/StaticObject.hpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Common/FileHandler.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/Editor.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/SFML_Widget.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/SimulationArea.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/UiLoader.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Editor/main.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Simulator/Area.cpp
/home/benedikt/Dokumente/DHBW/SoftwareEng/PanicSim/src/Simulator/StaticObject.cpp
/usr/include/SFML/Graphics.hpp
/usr/include/math.h
/usr/include/SFML/Graphics/BlendMode.hpp
/usr/include/SFML/Graphics/CircleShape.hpp
/usr/include/SFML/Graphics/Color.hpp
/usr/include/SFML/Graphics/ConvexShape.hpp
/usr/include/SFML/Graphics/Font.hpp
/usr/include/SFML/Graphics/Glyph.hpp
/usr/include/SFML/Graphics/Image.hpp
/usr/include/SFML/Graphics/RectangleShape.hpp
/usr/include/SFML/Graphics/RenderStates.hpp
/usr/include/SFML/Graphics/RenderTexture.hpp
/usr/include/SFML/Graphics/RenderWindow.hpp
/usr/include/SFML/Graphics/Shader.hpp
/usr/include/SFML/Graphics/Shape.hpp
/usr/include/SFML/Graphics/Sprite.hpp
/usr/include/SFML/Graphics/Text.hpp
/usr/include/SFML/Graphics/Texture.hpp
/usr/include/SFML/Graphics/Transform.hpp
/usr/include/SFML/Graphics/Vertex.hpp
/usr/include/SFML/Graphics/VertexArray.hpp
/usr/include/SFML/Graphics/View.hpp
/usr/include/SFML/Window.hpp
/usr/include/features.h
/usr/include/SFML/Graphics/Drawable.hpp
/usr/include/SFML/Graphics/Export.hpp
/usr/include/SFML/Graphics/PrimitiveType.hpp
/usr/include/SFML/Graphics/Rect.hpp
/usr/include/SFML/Graphics/RenderTarget.hpp
/usr/include/SFML/Graphics/Transformable.hpp
/usr/include/SFML/System.hpp
/usr/include/SFML/System/NonCopyable.hpp
/usr/include/SFML/System/String.hpp
/usr/include/SFML/System/Vector2.hpp
/usr/include/SFML/System/Vector3.hpp
/usr/include/SFML/Window/Context.hpp
/usr/include/SFML/Window/ContextSettings.hpp
/usr/include/SFML/Window/Event.hpp
/usr/include/SFML/Window/GlResource.hpp
/usr/include/SFML/Window/Joystick.hpp
/usr/include/SFML/Window/Keyboard.hpp
/usr/include/SFML/Window/Mouse.hpp
/usr/include/SFML/Window/VideoMode.hpp
/usr/include/SFML/Window/Window.hpp
/usr/include/SFML/Window/WindowStyle.hpp
/usr/include/SFML/Config.hpp
/usr/include/SFML/Graphics/Rect.inl
/usr/include/SFML/System/Clock.hpp
/usr/include/SFML/System/Err.hpp
/usr/include/SFML/System/Export.hpp
/usr/include/SFML/System/InputStream.hpp
/usr/include/SFML/System/Lock.hpp
/usr/include/SFML/System/Mutex.hpp
/usr/include/SFML/System/Sleep.hpp
/usr/include/SFML/System/Thread.hpp
/usr/include/SFML/System/ThreadLocal.hpp
/usr/include/SFML/System/ThreadLocalPtr.hpp
/usr/include/SFML/System/Utf.hpp
/usr/include/SFML/System/Vector2.inl
/usr/include/SFML/System/Vector3.inl
/usr/include/SFML/Window/Export.hpp
/usr/include/SFML/Window/WindowHandle.hpp
/usr/include/SFML/System/Thread.inl
/usr/include/SFML/System/ThreadLocalPtr.inl
/usr/include/SFML/System/Time.hpp
/usr/include/SFML/System/Utf.inl
